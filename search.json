[{"path":"https://geobosh.github.io/mixAR/README_dev.html","id":null,"dir":"","previous_headings":"","what":"Installing mixAR","title":"Installing mixAR","text":"Install latest stable version mixAR CRAN: can install development version mixAR Github:","code":"install.packages(\"mixAR\") library(devtools) install_github(\"GeoBosh/mixAR\")"},{"path":"https://geobosh.github.io/mixAR/README_dev.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Installing mixAR","text":"Package mixAR provides functions modelling mixture autoregressive (mixAR) models. See overview mixAR-package. TODO: link temporary. allow following pkgdown site build locally. valid also pkgdown site github README CRAN. link changed github site mixAR, created. Eventually proper overview included directly file. TODO: file eventually renamed README.md TODO: notes removed.","code":""},{"path":"https://geobosh.github.io/mixAR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Georgi N. Boshnakov. Author, maintainer. Davide Ravagli. Author.","code":""},{"path":"https://geobosh.github.io/mixAR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boshnakov GN, Ravagli D (2022). mixAR: Mixture Autoregressive Models. https://geobosh.github.io/mixAR/ (website), https://github.com/GeoBosh/mixAR/ (devel).","code":"@Manual{,   title = {mixAR: Mixture Autoregressive Models},   author = {Georgi N. Boshnakov and Davide Ravagli},   year = {2022},   note = {https://geobosh.github.io/mixAR/ (website), https://github.com/GeoBosh/mixAR/ (devel)}, }"},{"path":"https://geobosh.github.io/mixAR/index.html","id":"installing-mixar","dir":"","previous_headings":"","what":"Mixture Autoregressive Models","title":"Mixture Autoregressive Models","text":"Install latest stable version CRAN: Alternatively, install development version mixAR Github:","code":"install.packages(\"mixAR\") remotes::install_github(\"GeoBosh/mixAR\")"},{"path":"https://geobosh.github.io/mixAR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Mixture Autoregressive Models","text":"Package mixAR provides functions modelling mixture autoregressive (MAR/mixAR) models. See, example, overview mixAR model fitting functions fit_mixAR bayes_mixAR.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/Choose_pk.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose the autoregressive order of MixAR components — Choose_pk","title":"Choose the autoregressive order of MixAR components — Choose_pk","text":"Reversible Jump MCMC algorithm choose optimal   autoregressive order component mixture autoregressive   model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/Choose_pk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose the autoregressive order of MixAR components — Choose_pk","text":"","code":"Choose_pk(y, model, fix_shift = FALSE, tau, pmax, method, par = NULL, nsim)"},{"path":"https://geobosh.github.io/mixAR/reference/Choose_pk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose the autoregressive order of MixAR components — Choose_pk","text":"y time series. Currently numeric vector. model object inheriting class \"MixAR\". fix_shift whether shift/mean parameter kept fixed     starting value . Default FALSE. tau tuning parameters Metropolis-Hastings algorithm sampling AR     coefficients. pmax largest autoregressive order allowed component. method character vector length 1. Method calculating probability     new AR order increased/decreased 1 unit. Currently     available \"Ratio\", \"Poisson\"     \"NULL\". Default \"NULL\". par numeric, parameter tuning probabilities according     method. Ignored method \"NULL\". nsim numeric, number iterations.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/Choose_pk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose the autoregressive order of MixAR components — Choose_pk","text":"dataframe g+1 columns. first g columns     contain autoregressive orders components, last column     often model preferred, divided nsim. fix_shift choice made shift/mean parameters. method method used increase/decrease AR orders.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/Choose_pk.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Choose the autoregressive order of MixAR components — Choose_pk","text":"Ravagli D, Boshnakov GN (2020). “Bayesian analysis mixture autoregressive models covering complete parameter space.” 2006.11041, https://arxiv.org/abs/2006.11041.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/Choose_pk.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Choose the autoregressive order of MixAR components — Choose_pk","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/Choose_pk.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Choose the autoregressive order of MixAR components — Choose_pk","text":"Choose_pk currenlty supports class \"MixARGaussian\"    .","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/Choose_pk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Choose the autoregressive order of MixAR components — Choose_pk","text":"","code":"model <- new(\"MixARGaussian\",               prob   = exampleModels$WL_At@prob,      # c(0.5, 0.5)              scale  = exampleModels$WL_At@scale,     # c(1, 2)                      arcoef = list(-0.5, 1) )              # note: arcoef != list(-0.5, 1.1) == exampleModels$WL_At@arcoef@a  set.seed(1234) n <- 50 # 200 y <- mixAR_sim(model, n, rep(0, max(model@order)), nskip = 100)  nsim <- 25 # 100 pk_star <- Choose_pk(y, model, tau = c(.15, .25), pmax = 5, method = \"NULL\", nsim = nsim)"},{"path":"https://geobosh.github.io/mixAR/reference/MixAR-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Mixture autoregressive models","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixAR-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"virtual Class: objects can created . Derived classes add distribution properties, e.g. use class   \"MixARGaussian\" MixAR models Gaussian   error components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixAR-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"prob: mixing probabilities, \"numeric\". order: AR orders, \"numeric\". shift: intercept terms, \"numeric\". scale: scaling factor, \"numeric\". arcoef: autoregressive coefficients, object class       \"raggedCoef\" containing one row mixture component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixAR-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"fit_mixAR signature(x = \"\", model = \"MixAR\", init = \"list\"): ... fit_mixAR signature(x = \"\", model = \"MixAR\", init = \"missing\"): ... fit_mixAR signature(x = \"\", model = \"MixAR\", init = \"MixAR\"): ... fit_mixAR signature(x = \"\", model = \"MixAR\", init = \"numeric\"): ... fit_mixAR signature(x = \"\", model = \"MixARGaussian\", init = \"MixAR\"): ... get_edist signature(model = \"MixAR\"): ... initialize signature(.Object = \"MixAR\"): ... lik_params signature(model = \"MixAR\"): ... make_fcond_lik signature(model = \"MixAR\", ts = \"numeric\"): ... mix_ek signature(model = \"MixAR\", x = \"numeric\", index = \"numeric\", xcond = \"missing\", scale = \"missing\"): ... mix_ek signature(model = \"MixAR\", x = \"numeric\", index = \"numeric\", xcond = \"missing\", scale = \"logical\"): ... mix_ek signature(model = \"MixAR\", x = \"numeric\", index = \"missing\", xcond = \"numeric\", scale = \"missing\"): ... mix_ek signature(model = \"MixAR\", x = \"numeric\", index = \"missing\", xcond = \"numeric\", scale = \"logical\"): ... mix_hatk signature(model = \"MixAR\", x = \"numeric\", index = \"numeric\", xcond = \"missing\"): ... mix_ncomp signature(x = \"MixAR\"): ... mixAR signature(template = \"MixAR\"): ... noise_dist signature(model = \"MixAR\"): ... noise_params signature(model = \"MixAR\"): ... noise_rand signature(model = \"MixAR\"): ... parameters signature(model = \"MixAR\"): ... row_lengths signature(x = \"MixAR\"): ...","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixAR-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/MixAR-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"## some models from subclasses of (virtual) class \"MixAR\" names(exampleModels) #>  [1] \"WL_ibm\"     \"WL_A\"       \"WL_B\"       \"WL_I\"       \"WL_II\"      #>  [6] \"WL_ibm_gen\" \"WL_ibm_t3v\" \"WL_ibm_tf\"  \"WL_At\"      \"WL_Bt_1\"    #> [11] \"WL_Bt_2\"    \"WL_Bt_3\"    \"WL_Ct_1\"    \"WL_Ct_2\"    \"WL_Ct_3\"    exampleModels$WL_A #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.5    0     5     1   0.5  #> Comp_2 0.5    0     1     1   1.1  #>  #> Distributions of the error components: #> \tstandard Gaussian #>  exampleModels$WL_At #> An object of class \"MixARgen\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.5    0     1     1   -0.5 #> Comp_2 0.5    0     2     1    1.1 #>  #> Distributions of the error components: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 8 df #>   ## modify an existing model, here change the mixture weights mixAR(exampleModels$WL_A, coef = list((prob = c(0.4, 0.6)))) #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.5    0     5     1   0.5  #> Comp_2 0.5    0     1     1   1.1  #>  #> Distributions of the error components: #> \tstandard Gaussian #>"},{"path":"https://geobosh.github.io/mixAR/reference/MixARGaussian-class.html","id":null,"dir":"Reference","previous_headings":"","what":"mixAR models with Gaussian noise components — MixARGaussian-class","title":"mixAR models with Gaussian noise components — MixARGaussian-class","text":"Class \"MixARGaussian\" represents MixAR models Gaussian   noise components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARGaussian-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"mixAR models with Gaussian noise components — MixARGaussian-class","text":"Objects can created calls form new(\"MixARGaussian\",   ...), giving elements model named arguments, see   examples . elements model, except arcoef,   simple numeric vectors. version 0.19-15 package MixAR   possible create objects using MixARGaussian(...). two   forms completely equivalent. arcoef contains AR coefficients, one numeric vector   mixture component. can given   \"raggedCoef\" object list numeric   vectors. input model seasonal AR coefficients, argument passed arcoef can passed raggedCoefS object, list three elements.   latter, seasonality s must explicitly indicated.   AR coefficients can given list matrix within main list (one main AR coefficients, named , one seasonal AR coefficients, ). row input matrix/element list denotes one component mixture.   named, initialisation takes first passed element second . AR order model inferred arcoef   argument. argument order given, checked   consistency arcoef.  shift slot defaults   vector zeroes scale slot vector ones. distribution noise components standard Gaussian, N(0,1).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARGaussian-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"mixAR models with Gaussian noise components — MixARGaussian-class","text":"slots except arcoef numeric vectors length   equal number components model. prob: probabilities mixture components order: AR orders components shift: shift (intercept) terms AR components scale: standard deviations noise terms AR components arcoef: AR components, object class \"raggedCoef\"","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARGaussian-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"mixAR models with Gaussian noise components — MixARGaussian-class","text":"Class \"MixAR\", directly.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARGaussian-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"mixAR models with Gaussian noise components — MixARGaussian-class","text":"mix_cdf signature(model = \"MixARGaussian\", x = \"numeric\", index = \"numeric\", xcond = \"missing\"):       ... mix_cdf signature(model = \"MixARGaussian\", x = \"numeric\", index = \"missing\", xcond = \"numeric\"):       ... fit_mixAR signature(x = \"\", model = \"MixARGaussian\", init = \"MixAR\"): ... get_edist signature(model = \"MixARGaussian\"): ... mix_cdf signature(model = \"MixARGaussian\", x = \"missing\", index = \"missing\", xcond = \"numeric\"): ... mix_pdf signature(model = \"MixARGaussian\", x = \"missing\", index = \"missing\", xcond = \"numeric\"): ... mix_pdf signature(model = \"MixARGaussian\", x = \"numeric\", index = \"missing\", xcond = \"numeric\"): ... mix_pdf signature(model = \"MixARGaussian\", x = \"numeric\", index = \"numeric\", xcond = \"missing\"): ... noise_dist signature(model = \"MixARGaussian\"): ... noise_rand signature(model = \"MixARGaussian\"): ...","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARGaussian-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mixAR models with Gaussian noise components — MixARGaussian-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/MixARGaussian-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mixAR models with Gaussian noise components — MixARGaussian-class","text":"","code":"showClass(\"MixARGaussian\") #> Class \"MixARGaussian\" [package \"mixAR\"] #>  #> Slots: #>                                                               #> Name:        prob      order      shift      scale     arcoef #> Class:    numeric    numeric    numeric    numeric raggedCoef #>  #> Extends: \"MixAR\"  ## load ibm data from BJ ## data(ibmclose, package = \"fma\")  ## compute a predictive density, assuming exampleModels$WL_ibm model ## for the first date after the end of the data pdf1 <- mix_pdf(exampleModels$WL_ibm, xcond = as.numeric(fma::ibmclose)) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo   ## plot the predictive density ## (cdf is used to determine limits on the x-axis) cdf1 <- mix_cdf(exampleModels$WL_ibm, xcond = as.numeric(fma::ibmclose)) gbutils::plotpdf(pdf1, cdf = cdf1, lq = 0.001, uq = 0.999)   ## compute lower 5% quantile of cdf1 gbutils::cdf2quantile(0.05, cdf = cdf1) #> [1] 347.7531"},{"path":"https://geobosh.github.io/mixAR/reference/MixARgen-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"class MixAR models arbitrary noise distributions. \"MixARgen\"   inherits \"MixAR\".","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARgen-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"MixARgen\",   dist, ...)  mixARgen(...). two forms completely   equivalent. latter available version 0.19-15 package   MixAR.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARgen-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"slots inherited class \"MixAR\". prob: mixing probabilities, \"numeric\". order: AR orders, \"numeric\". shift: intercept terms, \"numeric\". scale: scaling factor, \"numeric\". arcoef: autoregressive coefficients, object class       \"raggedCoef\" containing one row mixture component. dist: Object class \"list\", representing       noise distributions. list contains one element       component MixAR model single element       noise distribution components. distributions contain parameters (e.g. Gaussian       \\(t_4\\)) sufficient give list functions       element dist list. distributions contain parameters recommended       arrangement give list components generator       param, call generator(param)       produce required list distributions. finalised changed, backward compatibility       existing objects maintained.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARgen-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"MixAR\", directly.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARgen-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"get_edist signature(model = \"MixARgen\"): ... initialize signature(.Object = \"MixARgen\"): ... lik_params signature(model = \"MixARgen\"): ... mix_cdf signature(model = \"MixARgen\", x = \"missing\", index = \"missing\", xcond = \"numeric\"): ... mix_cdf signature(model = \"MixARgen\", x = \"numeric\", index = \"missing\", xcond = \"numeric\"): ... mix_cdf signature(model = \"MixARgen\", x = \"numeric\", index = \"numeric\", xcond = \"missing\"): ... mix_pdf signature(model = \"MixARgen\", x = \"missing\", index = \"missing\", xcond = \"numeric\"): ... mix_pdf signature(model = \"MixARgen\", x = \"numeric\", index = \"missing\", xcond = \"numeric\"): ... mix_pdf signature(model = \"MixARgen\", x = \"numeric\", index = \"numeric\", xcond = \"missing\"): ... noise_dist signature(model = \"MixARgen\"): ... noise_params signature(model = \"MixARgen\"): ... noise_rand signature(model = \"MixARgen\"): ...","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixARgen-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"showClass(\"MixARgen\") #> Class \"MixARgen\" [package \"mixAR\"] #>  #> Slots: #>                                                                          #> Name:        dist       prob      order      shift      scale     arcoef #> Class:       list    numeric    numeric    numeric    numeric raggedCoef #>  #> Extends: \"MixAR\"  exampleModels$WL_ibm_gen@dist #> [[1]] #> [[1]]$pdf #> [1] \"dnorm\" #>  #> [[1]]$cdf #> [1] \"pnorm\" #>  #> [[1]]$rand #> [1] \"rnorm\" #>  #> [[1]]$logpdf #> function (x)  #> log(dnorm(x)) #> <bytecode: 0x7ff922deed58> #> <environment: 0x7ff922de75c0> #>  #> [[1]]$Fscore #> function (x)  #> -x #> <bytecode: 0x7ff922dee690> #> <environment: 0x7ff922de75c0> #>  #> [[1]]$xFscore #> function (x)  #> -x^2 #> <bytecode: 0x7ff922dedfc8> #> <environment: 0x7ff922de75c0> #>  #> [[1]]$Parscore #> function ()  #> 0 #> <bytecode: 0x7ff922df1eb8> #> <environment: 0x7ff922de75c0> #>  #> [[1]]$get_param #> function ()  #> numeric() #> <bytecode: 0x7ff922df19b0> #> <environment: 0x7ff922de75c0> #>  #> [[1]]$set_param #> function ()  #> stop(\"Standard normal has no parameters to set.\") #> <bytecode: 0x7ff922df1470> #> <environment: 0x7ff922de75c0> #>  #> [[1]]$any_param #> function ()  #> param_flag #> <bytecode: 0x7ff922df0ef8> #> <environment: 0x7ff922de75c0> #>  #> [[1]]$show #> function ()  #> \"Standard normal distribution\" #> <bytecode: 0x7ff922df09f0> #> <environment: 0x7ff922de75c0> #>  #>  noise_dist(exampleModels$WL_ibm_gen, \"cdf\") #> [[1]] #> [1] \"pnorm\" #>  noise_dist(exampleModels$WL_ibm_gen, \"pdf\") #> [[1]] #> [1] \"dnorm\" #>  noise_dist(exampleModels$WL_ibm_gen, \"pdf\", expand = TRUE) #> [[1]] #> [1] \"dnorm\" #>  #> [[2]] #> [1] \"dnorm\" #>  #> [[3]] #> [1] \"dnorm\" #>  noise_dist(exampleModels$WL_ibm_gen, \"cdf\", expand = TRUE) #> [[1]] #> [1] \"pnorm\" #>  #> [[2]] #> [1] \"pnorm\" #>  #> [[3]] #> [1] \"pnorm\" #>   ## data(ibmclose, package = \"fma\")  # for `ibmclose'  pdf1 <- mix_pdf(exampleModels$WL_ibm, xcond = as.numeric(fma::ibmclose)) cdf1 <- mix_cdf(exampleModels$WL_ibm, xcond = as.numeric(fma::ibmclose)) gbutils::plotpdf(pdf1, cdf = cdf1, lq = 0.001, uq = 0.999)  pdf1gen <- mix_pdf(exampleModels$WL_ibm_gen, xcond = as.numeric(fma::ibmclose)) cdf1gen <- mix_cdf(exampleModels$WL_ibm_gen, xcond = as.numeric(fma::ibmclose)) gbutils::plotpdf(pdf1gen, cdf = cdf1gen, lq = 0.001, uq = 0.999)   length(fma::ibmclose) #> [1] 369 cdf1gena <- mix_cdf(exampleModels$WL_ibm_gen, xcond = as.numeric(fma::ibmclose)[-(369:369)]) pdf1gena <- mix_pdf(exampleModels$WL_ibm_gen, xcond = as.numeric(fma::ibmclose)[-(369:369)]) gbutils::plotpdf(pdf1gena, cdf = cdf1gena, lq = 0.001, uq = 0.999)  pdf1a <- mix_pdf(exampleModels$WL_ibm, xcond = as.numeric(fma::ibmclose)[-(369:369)]) cdf1a <- mix_cdf(exampleModels$WL_ibm, xcond = as.numeric(fma::ibmclose)[-(369:369)]) gbutils::plotpdf(pdf1a, cdf = cdf1a, lq = 0.001, uq = 0.999)    cdf1gena <- mix_cdf(exampleModels$WL_ibm_gen, xcond = as.numeric(fma::ibmclose)[-(369:369)])  cond_loglik(exampleModels$WL_ibm, as.numeric(fma::ibmclose)) #> [1] -1212.188 cond_loglik(exampleModels$WL_ibm_gen, as.numeric(fma::ibmclose)) #> [1] -1212.188  ts1gen <- mixAR_sim(exampleModels$WL_ibm_gen, n = 30, init = c(346, 352, 357), nskip = 0) plot(ts1gen)   plot(mixAR_sim(exampleModels$WL_ibm_gen, n = 100, init = c(346, 352, 357), nskip = 0),      type = \"l\")   plot(diff(mixAR_sim(exampleModels$WL_ibm_gen, n = 100, init = c(346, 352, 357), nskip = 0)),      type = \"l\")   noise_dist(exampleModels$WL_ibm_gen, \"Fscore\") #> [[1]] #> function (x)  #> -x #> <bytecode: 0x7ff922dee690> #> <environment: 0x7ff922de75c0> #>   prob   <- exampleModels$WL_ibm@prob scale  <- exampleModels$WL_ibm@scale arcoef <- exampleModels$WL_ibm@arcoef@a  mo_WLt3  <- new(\"MixARgen\", prob = prob, scale = scale, arcoef = arcoef,                 dist = list(fdist_stdt(3))) mo_WLt30 <- new(\"MixARgen\", prob = prob, scale = scale, arcoef = arcoef,                 dist = list(fdist_stdt(30)))"},{"path":"https://geobosh.github.io/mixAR/reference/MixComp-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"MixComp\" represents components mixture autoregressive   time series transformations obtained arithmetic   related operations. Methods provided allow convenient   computation time series.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixComp-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"MixComp\", ...).    usual however obtain objects initially   functions mix_ek. Methods defined allow   convenient intuitive manipulation objects. Internally, object class MixComp matrix one column   component. However, methods arithmetic operations   involving MixComp objects  defined perform natural   operations mixture objects. example, multiplication   vectors commutative ``right thing''.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixComp-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"m: Object class \"matrix\" one column correponding       component mixture AR model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixComp-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"Arithmetic operations involving MixComp objects defined     allow convenient execution computations mixture     autoregressive models, see class \"MixComp\".  - signature(e1 = \"MixComp\", e2 = \"missing\"):       unary minus \"MixComp\" objects. - signature(e1 = \"numeric\", e2 = \"MixComp\"): e2 thought matrix, \\(m\\), number       elements e1 must number rows       \\(m\\) column \\(m\\) subtracted       e1, see also \"mix_ek\", \"mix_hatk\". special case, \\(m\\) one row,       subtracted element e1, .e. row       replicated obtain matrix many rows length       e1 subtracted e1 . result MixComp object. - signature(e1 = \"MixComp\", e2 = \"numeric\"):       analogous method. (FIXME: code       function deal special case       method. omission done purpose?) %% signature(e1 = \"function\", e2 = \"MixComp\"):       applies function e1 element       e2. Together arithmetic operations allows       easy computation MixComp objects (e.g. pdfs, likelihoods). %% signature(e1 = \"character\", e2 = \"MixComp\"): %% signature(e1 = \"list\", e2 = \"MixComp\"):       e1 length one specifies function       applied element e2, otherwise list       functions, \\(\\)th function applied       \\(\\)th column e2@m. * signature(e1 = \"MixComp\", e2 = \"MixComp\"): ... * signature(e1 = \"MixComp\", e2 = \"numeric\"):       see following. * signature(e1 = \"numeric\", e2 = \"MixComp\"):       ``Column'' \\(\\) MixComp object multiplied       \\(\\)th element numeric vector, .e. ``row''       MixComp object multiplied vector (,       vector replicated matrix multiplied       MixComp object). * signature(e1 = \"function\", e2 = \"MixComp\"):       Multiplying function  MixComp object actually       applies function element object.       misuse methods, prefer operator       %% . * signature(e1 = \"character\", e2 = \"MixComp\"):       first argument name function       applied element MixComp object.       misuse methods, see operator %%       . / signature(e1 = \"MixComp\", e2 = \"numeric\"): / signature(e1 = \"numeric\", e2 = \"MixComp\"):       Division works analogously \"*\". ^ signature(e1 = \"MixComp\", e2 = \"numeric\"):       k scalar, raise element e1@m       power k. (consistency operation       semantics \"*\" \"/\" operator probably makes sense       scalar 'e2', semantics matter. ,       bother now.) + signature(e1 = \"numeric\", e2 = \"MixComp\"): + signature(e1 = \"MixComp\", e2 = \"numeric\"):       Addition involving MixComp objects works analogously subtraction. inner signature(x = \"MixComp\", y = \"missing\", star = \"missing\", plus = \"missing\"):       one argument inner computes sum columns       argument. conceptually equivalent y       vector ones. inner signature(x = \"MixComp\", y = \"numeric\", star = \"missing\", plus = \"missing\"): inner signature(x = \"numeric\", y = \"MixComp\", star = \"missing\", plus = \"missing\"):       number elements numeric argument equal       number rows MixComp object. Effectively,       computes inner product two arguments. order       arguments matter. Returns numeric vector. inner signature(x = \"MixComp\", y = \"numeric\", star = \"\", plus = \"\"):       Computes generalised inner product x y using       specified functions place usual \"*\" \"+\"       operations. defaults star +       equivalent multiplication addition, respectively. Note \"+\" binary operation (\\(n\\)-ary) R.       technically correct way specify default operation       \"sum\" sum. Since easy make mistake,       plus == \"+\", replaced \"sum\".       (fact, plus given single argument, vector       values work . Since \"+\" works unary operator one       argument, give surprising results left .) inner signature(x = \"MixComp\", y = \"numeric\", star = \"\", plus = \"missing\"):       efficient implementation case       plus = sum. mix_ncomp signature(x = \"MixComp\"):       Number components. signature(x = \"MixComp\") \"MixComp\" object essentially matrix. method       gives dimension underlying matrix. method       indirectly ensures nrow() ncol() work       naturally \"MixComp\" objects.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixComp-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixComp-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"## dim, nrow, ncol a <- new(\"MixComp\", m = matrix(c(1:7, 11:17, 21:27), ncol = 3)) a #> An object of class \"MixComp\" #> Slot \"m\": #>      [,1] [,2] [,3] #> [1,]    1   11   21 #> [2,]    2   12   22 #> [3,]    3   13   23 #> [4,]    4   14   24 #> [5,]    5   15   25 #> [6,]    6   16   26 #> [7,]    7   17   27 #>  dim(a) #> [1] 7 3 nrow(a) #> [1] 7 ncol(a) #> [1] 3 mix_ncomp(a) #> [1] 3  -a #> An object of class \"MixComp\" #> Slot \"m\": #>      [,1] [,2] [,3] #> [1,]   -1  -11  -21 #> [2,]   -2  -12  -22 #> [3,]   -3  -13  -23 #> [4,]   -4  -14  -24 #> [5,]   -5  -15  -25 #> [6,]   -6  -16  -26 #> [7,]   -7  -17  -27 #>  a - 1:7  #> An object of class \"MixComp\" #> Slot \"m\": #>      [,1] [,2] [,3] #> [1,]    0   10   20 #> [2,]    0   10   20 #> [3,]    0   10   20 #> [4,]    0   10   20 #> [5,]    0   10   20 #> [6,]    0   10   20 #> [7,]    0   10   20 #>  1:7 + a #> An object of class \"MixComp\" #> Slot \"m\": #>      [,1] [,2] [,3] #> [1,]    2   12   22 #> [2,]    4   14   24 #> [3,]    6   16   26 #> [4,]    8   18   28 #> [5,]   10   20   30 #> [6,]   12   22   32 #> [7,]   14   24   34 #>  2*a #> An object of class \"MixComp\" #> Slot \"m\": #>      [,1] [,2] [,3] #> [1,]    2   22   42 #> [2,]    4   24   44 #> [3,]    6   26   46 #> [4,]    8   28   48 #> [5,]   10   30   50 #> [6,]   12   32   52 #> [7,]   14   34   54 #>    b <- new(\"MixComp\", m = matrix(rnorm(18), ncol = 3))  ## apply a function to the columns of a MixComp object pnorm %of% b #> An object of class \"MixComp\" #> Slot \"m\": #>           [,1]       [,2]       [,3] #> [1,] 0.1225143 0.65379738 0.07595603 #> [2,] 0.1296689 0.33456253 0.92311527 #> [3,] 0.5348741 0.01232201 0.57175454 #> [4,] 0.6605424 0.53848139 0.65221316 #> [5,] 0.2303093 0.27440789 0.92985214 #> [6,] 0.6491573 0.88887962 0.95599693 #>   ## apply a separate function to to each column flist <- list(function(x) pnorm(x),               function(x) pt(x, df = 5),               function(x) pt(x, df = 4) ) flist %of% b #> An object of class \"MixComp\" #> Slot \"m\": #>           [,1]       [,2]      [,3] #> [1,] 0.1225143 0.64563983 0.1125967 #> [2,] 0.1296689 0.34345187 0.8865390 #> [3,] 0.5348741 0.03728139 0.5673579 #> [4,] 0.6605424 0.53660497 0.6422383 #> [5,] 0.2303093 0.28747326 0.8928424 #> [6,] 0.6491573 0.86167080 0.9183992 #>"},{"path":"https://geobosh.github.io/mixAR/reference/MixVAR-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Mixture vector autoregressive models","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVAR-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"virtual Class: objects may created . Derived classes add distribution properties, e.g. use class   \"MixVARGaussian\" MixVAR models Gaussian   error components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVAR-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"prob: mixing probabilities,       object class \"numeric\" order: Object class \"numeric\" ~~ shift: Object class \"matrix\" ~~ vcov: Object class \"array\" ~~ arcoef: Object class \"raggedCoefV\" ~~","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVAR-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"fit_mixVAR signature(x = \"\", model = \"MixAR\"): ...","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVAR-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Davide Ravagli","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/MixVARGaussian-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MixVAR models with multivariate Gaussian noise components — MixVARGaussian-class","title":"MixVAR models with multivariate Gaussian noise components — MixVARGaussian-class","text":"Class MixVARGaussian represents MixAR models multivariate   Gaussian noise components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVARGaussian-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"MixVAR models with multivariate Gaussian noise components — MixVARGaussian-class","text":"Objects can created calls form   new(\"MixVARGaussian\", ...), giving elements model   named arguments, see examples . arcoef contains AR coefficients, one numeric array   mixture component. can given   \"raggedCoefV\" object list numeric   arrays. AR order model inferred arcoef   argument. argument order given, checked   consistency arcoef.  shift slot defaults   matrix zeroes vcov slot array    identity matrices, one component. distribution noise components standard multivariate   Gaussian, N(0,1).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVARGaussian-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MixVAR models with multivariate Gaussian noise components — MixVARGaussian-class","text":"slots except arcoef numeric vectors length   equal number components model. prob: probabilities mixture components, order: AR orders components, shift: shift (intercept) terms AR components, vcov: covariance matrices noise terms AR components, arcoef: AR components, object class \"raggedCoefV\".","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVARGaussian-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"MixVAR models with multivariate Gaussian noise components — MixVARGaussian-class","text":"Class \"MixAR\", directly.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVARGaussian-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MixVAR models with multivariate Gaussian noise components — MixVARGaussian-class","text":"fit_mixAR signature(x = \"\", model =\t\"MixARGaussian\"):       ...","code":""},{"path":"https://geobosh.github.io/mixAR/reference/MixVARGaussian-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MixVAR models with multivariate Gaussian noise components — MixVARGaussian-class","text":"Davide Ravagli","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/MixVARGaussian-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MixVAR models with multivariate Gaussian noise components — MixVARGaussian-class","text":"","code":"showClass(\"MixVARGaussian\") #> Class \"MixVARGaussian\" [package \"mixAR\"] #>  #> Slots: #>                                                                    #> Name:         prob       order       shift        vcov      arcoef #> Class:     numeric     numeric      matrix       array raggedCoefV #>  #> Extends: \"MixVAR\"  ## Create array of covariance matrices Sigma1 <- cbind(c(0.0013, 0.0011), c(0.0011, 0.0012)) Sigma2 <- cbind(c(0.0072, 0.0047), c(0.0047, 0.0039)) Sigma  <- array(c(Sigma1, Sigma2), dim=c(2,2,2))  ## Create list of AR coefficients AR <- list() AR[[1]] <- array(c(0.0973, -0.0499,  0.2927,  0.4256,  ## VAR(2;4)                   -0.0429,  0.0229, -0.1515, -0.1795,                   -0.0837, -0.1060, -0.1530,  0.1947,                   -0.1690, -0.0903,  0.1959,  0.0955), dim=c(2,2,4)) AR[[2]] <- array(c(0.3243,  0.2648,  0.4956,  0.2870,  ## VAR(2;3)                   -0.1488,  0.0454, -0.0593, -0.3629,                    0.1314,  0.0274,  0.0637,  0.0485), dim=c(2,2,3))  ## Create vector of mixing weights prob <- c(0.6376, 0.3624)  ## Create matrix of shift parameters shift <- cbind(c(0.0044, 0.0020), c(-0.0039, -0.0014))  ## Build \"MixVARGaussian\" model new(\"MixVARGaussian\", prob=prob, vcov=Sigma, arcoef=AR, shift=shift) #> (To see the internal structure of the object, use function 'str'.) #>  #> An object of class \"MixVARGaussian\" #> Number of components: 2  #> Number of series: 2  #>          prob   shift order    ar_1           ar_2            ar_3         #> Comp_1 0.6376  0.0044     4  0.0973 0.2927 -0.0429 -0.1515 -0.0837 -0.1530 #>                0.0020       -0.0499 0.4256  0.0229 -0.1795 -0.1060  0.1947 #> Comp_2 0.3624 -0.0039     3  0.3243 0.4956 -0.1488 -0.0593  0.1314  0.0637 #>               -0.0014        0.2648 0.2870  0.0454 -0.3629  0.0274  0.0485 #>           ar_4          vcov        #> Comp_1 -0.1690 0.1959 0.0013 0.0011 #>        -0.0903 0.0955 0.0011 0.0012 #> Comp_2                0.0072 0.0047 #>                       0.0047 0.0039 #>  #> Distributions of the error components: #> \tMultivariate standard Gaussian #>"},{"path":"https://geobosh.github.io/mixAR/reference/PortfolioData1.html","id":null,"dir":"Reference","previous_headings":"","what":"Closing prices of four stocks — PortfolioData1","title":"Closing prices of four stocks — PortfolioData1","text":"Closing prices four stocks.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/PortfolioData1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Closing prices of four stocks — PortfolioData1","text":"","code":"data(\"PortfolioData1\")"},{"path":"https://geobosh.github.io/mixAR/reference/PortfolioData1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Closing prices of four stocks — PortfolioData1","text":"data frame 867 observations following 4 variables. DELL numeric, Dell Technologies Inc. MSFT numeric, Microsoft Corporation. INTC numeric, Intel Corporation. IBM numericr, International Business Machine Corporation.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/PortfolioData1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Closing prices of four stocks — PortfolioData1","text":"Time series daily adjusted close prices stocks 2   January 2016 29 January 2020 (867 observations).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/PortfolioData1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Closing prices of four stocks — PortfolioData1","text":"https://finance.yahoo.com/","code":""},{"path":"https://geobosh.github.io/mixAR/reference/PortfolioData1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Closing prices of four stocks — PortfolioData1","text":"","code":"data(PortfolioData1) dim(PortfolioData1) #> [1] 867   4 head(PortfolioData1) #>       DELL     MSFT     INTC      IBM #> 1 23.80953 54.17237 32.16791 139.7352 #> 2 23.67110 54.21002 32.12197 140.5364 #> 3 24.08638 54.22884 32.36999 139.3867 #> 4 24.16944 54.27589 32.48022 139.3519 #> 5 24.91694 54.48295 32.51696 139.5784 #> 6 25.24917 54.53941 32.28732 138.5245"},{"path":"https://geobosh.github.io/mixAR/reference/adjustLengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust the length of the second argument to be the same as that of the\n  first one — adjustLengths","title":"Adjust the length of the second argument to be the same as that of the\n  first one — adjustLengths","text":"Adjust length second argument   first one. Appends 0's second argument shorter drops   excess elements longer.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/adjustLengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust the length of the second argument to be the same as that of the\n  first one — adjustLengths","text":"","code":"adjustLengths(x, y)"},{"path":"https://geobosh.github.io/mixAR/reference/adjustLengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust the length of the second argument to be the same as that of the\n  first one — adjustLengths","text":"x template vector y vector adjusted","code":""},{"path":"https://geobosh.github.io/mixAR/reference/adjustLengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust the length of the second argument to be the same as that of the\n  first one — adjustLengths","text":"vector length x","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bayes_mixAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","title":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","text":"Samples parameters mixture autoregressive model respective   posterior distributions.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bayes_mixAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","text":"","code":"bayes_mixAR(y, model, fix_shift = FALSE, a = .2, c = 2, tau, nsim, burnin)"},{"path":"https://geobosh.github.io/mixAR/reference/bayes_mixAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","text":"y time series (currently numeric vector). model object class MixAR. Currently handles     MixARGaussian objects. fix_shift shift kept fixed? FALSE (default)     shift sampled. , c numeric hyperparameters, default values     Richardson Green (1997) . tau numeric vector length g, number components     mixture. Tuning parameter M-H move updating AR parameters.     length(tau) 1, tuning parameter taken     components. nsim numeric, number iterations. burnin numeric, number iterations taken burn-period.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bayes_mixAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","text":"details see Ravagli Boshnakov (2020) .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bayes_mixAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","text":"list following elements: mix_weights g columns matrix samples posterior distributions     mixing weights. scale g columns matrix samples posterior distributions     scale parameters. precision g columns matrix samples posterior distributions     precision parameters, defined 1 / (scale ^ 2). shift g columns matrix samples posterior distributions     shift parameters, namely phi_k0. mu g columns matrix samples posterior distributions     component means, calculated phi_k0 / (1 - phi_k1 - phi_k2 - ...). ARcoeff list elements matrices, one AR component     mixture. acc_rate numeric vector, acceptance rate M-H moves. n_samp sample size, calculated nsim - burnin. LatentZ latest Z variables drawn (utility ). n_comp number components mixture. fix_shift input, whether shift parameter kept fixed .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bayes_mixAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","text":"Richardson S, Green PJ (1997). “Bayesian Analysis Mixtures Unknown Number Components.” J. R. Stat. Soc., Ser. B, Stat. Methodol. , 59(4), 731-792. Ravagli D, Boshnakov GN (2020). “Bayesian analysis mixture autoregressive models covering complete parameter space.” 2006.11041, https://arxiv.org/abs/2006.11041.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bayes_mixAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bayes_mixAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian sampling of mixture autoregressive models — bayes_mixAR","text":"","code":"prob <- c(0.5, 0.5) sigma <- c(1, 2) ar <- list(-0.5, 1)  model <- new(\"MixARGaussian\", prob = prob, scale = sigma, arcoef = ar)  ## MAR(1,1) model y <- mixAR_sim(model, 300, rep(0, max(model@order)))  bayes_mixAR(y, model, fix_shift = FALSE, tau = c(.15,.25), nsim = 20, burnin = 10) #> $mix_weights #>            [,1]      [,2] #>  [1,] 0.5859404 0.4140596 #>  [2,] 0.5675420 0.4324580 #>  [3,] 0.6090409 0.3909591 #>  [4,] 0.5816917 0.4183083 #>  [5,] 0.5090090 0.4909910 #>  [6,] 0.4638817 0.5361183 #>  [7,] 0.4745710 0.5254290 #>  [8,] 0.5371336 0.4628664 #>  [9,] 0.5879339 0.4120661 #> [10,] 0.5532978 0.4467022 #>  #> $scale #>            [,1]     [,2] #>  [1,] 1.1431564 2.074092 #>  [2,] 1.0450437 2.314067 #>  [3,] 1.0833460 1.938325 #>  [4,] 1.0272325 1.843347 #>  [5,] 1.0229076 2.113068 #>  [6,] 1.0677279 1.984406 #>  [7,] 0.9103989 2.082002 #>  [8,] 0.9609276 2.259794 #>  [9,] 1.1051917 2.143391 #> [10,] 1.1997655 2.147962 #>  #> $precision #>            [,1]      [,2] #>  [1,] 0.7652242 0.2324578 #>  [2,] 0.9156534 0.1867446 #>  [3,] 0.8520510 0.2661625 #>  [4,] 0.9476817 0.2942969 #>  [5,] 0.9557124 0.2239614 #>  [6,] 0.8771600 0.2539446 #>  [7,] 1.2065256 0.2306948 #>  [8,] 1.0829756 0.1958223 #>  [9,] 0.8186999 0.2176694 #> [10,] 0.6947160 0.2167438 #>  #> $shift #>              [,1]        [,2] #>  [1,] -0.17388804 -0.33229027 #>  [2,]  0.07111309 -0.19669854 #>  [3,]  0.04899561 -0.20119328 #>  [4,] -0.02118783 -0.36544546 #>  [5,] -0.08636606 -0.33550322 #>  [6,] -0.07308396 -0.16964398 #>  [7,] -0.05537787 -0.35371554 #>  [8,] -0.13936048 -0.04630361 #>  [9,] -0.05377540 -0.23745943 #> [10,] -0.05190417 -0.07954147 #>  #> $mu #>              [,1]      [,2] #>  [1,] -0.11596246 3.1612893 #>  [2,]  0.04742389 1.2848873 #>  [3,]  0.03267419 1.3142482 #>  [4,] -0.01412974 2.3871872 #>  [5,] -0.05759580 2.1915965 #>  [6,] -0.04873823 1.1081598 #>  [7,] -0.03693039 2.3105643 #>  [8,] -0.09293672 0.3024675 #>  [9,] -0.03586174 1.5511483 #> [10,] -0.03461385 0.5195861 #>  #> $ARcoeff #> $ARcoeff$Component_1 #>             [,1] #>  [1,] -0.4995202 #>  [2,] -0.4995202 #>  [3,] -0.4995202 #>  [4,] -0.4995202 #>  [5,] -0.4995202 #>  [6,] -0.4995202 #>  [7,] -0.4995202 #>  [8,] -0.4995202 #>  [9,] -0.4995202 #> [10,] -0.4158659 #>  #> $ARcoeff$Component_2 #>           [,1] #>  [1,] 1.153086 #>  [2,] 1.153086 #>  [3,] 1.153086 #>  [4,] 1.153086 #>  [5,] 1.153086 #>  [6,] 1.153086 #>  [7,] 1.153086 #>  [8,] 1.153086 #>  [9,] 1.153086 #> [10,] 1.153086 #>  #>  #> $acc_rate #> [1] 0.1 0.1 #>  #> $n_samp #> [1] 10 #>  #> $LatentZ #>        latent Z  1 latent Z  2 #>   [1,]           0           1 #>   [2,]           0           1 #>   [3,]           0           1 #>   [4,]           0           1 #>   [5,]           1           0 #>   [6,]           1           0 #>   [7,]           0           1 #>   [8,]           0           1 #>   [9,]           1           0 #>  [10,]           1           0 #>  [11,]           0           1 #>  [12,]           1           0 #>  [13,]           1           0 #>  [14,]           1           0 #>  [15,]           0           1 #>  [16,]           1           0 #>  [17,]           0           1 #>  [18,]           1           0 #>  [19,]           0           1 #>  [20,]           0           1 #>  [21,]           1           0 #>  [22,]           1           0 #>  [23,]           0           1 #>  [24,]           1           0 #>  [25,]           1           0 #>  [26,]           0           1 #>  [27,]           1           0 #>  [28,]           0           1 #>  [29,]           0           1 #>  [30,]           1           0 #>  [31,]           1           0 #>  [32,]           1           0 #>  [33,]           0           1 #>  [34,]           1           0 #>  [35,]           1           0 #>  [36,]           1           0 #>  [37,]           0           1 #>  [38,]           1           0 #>  [39,]           1           0 #>  [40,]           1           0 #>  [41,]           1           0 #>  [42,]           1           0 #>  [43,]           1           0 #>  [44,]           0           1 #>  [45,]           0           1 #>  [46,]           1           0 #>  [47,]           1           0 #>  [48,]           0           1 #>  [49,]           1           0 #>  [50,]           0           1 #>  [51,]           1           0 #>  [52,]           0           1 #>  [53,]           1           0 #>  [54,]           1           0 #>  [55,]           1           0 #>  [56,]           1           0 #>  [57,]           0           1 #>  [58,]           0           1 #>  [59,]           0           1 #>  [60,]           1           0 #>  [61,]           0           1 #>  [62,]           1           0 #>  [63,]           0           1 #>  [64,]           1           0 #>  [65,]           0           1 #>  [66,]           0           1 #>  [67,]           1           0 #>  [68,]           0           1 #>  [69,]           1           0 #>  [70,]           0           1 #>  [71,]           1           0 #>  [72,]           1           0 #>  [73,]           0           1 #>  [74,]           0           1 #>  [75,]           0           1 #>  [76,]           1           0 #>  [77,]           1           0 #>  [78,]           0           1 #>  [79,]           0           1 #>  [80,]           1           0 #>  [81,]           0           1 #>  [82,]           0           1 #>  [83,]           0           1 #>  [84,]           1           0 #>  [85,]           0           1 #>  [86,]           1           0 #>  [87,]           0           1 #>  [88,]           0           1 #>  [89,]           1           0 #>  [90,]           1           0 #>  [91,]           1           0 #>  [92,]           1           0 #>  [93,]           0           1 #>  [94,]           1           0 #>  [95,]           0           1 #>  [96,]           0           1 #>  [97,]           1           0 #>  [98,]           1           0 #>  [99,]           1           0 #> [100,]           0           1 #> [101,]           0           1 #> [102,]           0           1 #> [103,]           0           1 #> [104,]           0           1 #> [105,]           1           0 #> [106,]           0           1 #> [107,]           0           1 #> [108,]           0           1 #> [109,]           0           1 #> [110,]           1           0 #> [111,]           1           0 #> [112,]           1           0 #> [113,]           1           0 #> [114,]           1           0 #> [115,]           0           1 #> [116,]           0           1 #> [117,]           1           0 #> [118,]           1           0 #> [119,]           1           0 #> [120,]           1           0 #> [121,]           1           0 #> [122,]           0           1 #> [123,]           1           0 #> [124,]           0           1 #> [125,]           0           1 #> [126,]           1           0 #> [127,]           1           0 #> [128,]           0           1 #> [129,]           0           1 #> [130,]           1           0 #> [131,]           0           1 #> [132,]           0           1 #> [133,]           0           1 #> [134,]           1           0 #> [135,]           0           1 #> [136,]           1           0 #> [137,]           1           0 #> [138,]           0           1 #> [139,]           1           0 #> [140,]           1           0 #> [141,]           1           0 #> [142,]           0           1 #> [143,]           0           1 #> [144,]           1           0 #> [145,]           0           1 #> [146,]           1           0 #> [147,]           0           1 #> [148,]           1           0 #> [149,]           1           0 #> [150,]           1           0 #> [151,]           0           1 #> [152,]           0           1 #> [153,]           1           0 #> [154,]           1           0 #> [155,]           0           1 #> [156,]           0           1 #> [157,]           0           1 #> [158,]           1           0 #> [159,]           1           0 #> [160,]           0           1 #> [161,]           1           0 #> [162,]           1           0 #> [163,]           1           0 #> [164,]           1           0 #> [165,]           0           1 #> [166,]           1           0 #> [167,]           1           0 #> [168,]           1           0 #> [169,]           1           0 #> [170,]           0           1 #> [171,]           1           0 #> [172,]           1           0 #> [173,]           1           0 #> [174,]           1           0 #> [175,]           0           1 #> [176,]           1           0 #> [177,]           0           1 #> [178,]           1           0 #> [179,]           1           0 #> [180,]           1           0 #> [181,]           0           1 #> [182,]           0           1 #> [183,]           1           0 #> [184,]           1           0 #> [185,]           0           1 #> [186,]           1           0 #> [187,]           0           1 #> [188,]           1           0 #> [189,]           0           1 #> [190,]           0           1 #> [191,]           0           1 #> [192,]           1           0 #> [193,]           1           0 #> [194,]           1           0 #> [195,]           1           0 #> [196,]           0           1 #> [197,]           0           1 #> [198,]           1           0 #> [199,]           1           0 #> [200,]           1           0 #> [201,]           0           1 #> [202,]           1           0 #> [203,]           1           0 #> [204,]           1           0 #> [205,]           0           1 #> [206,]           1           0 #> [207,]           1           0 #> [208,]           1           0 #> [209,]           1           0 #> [210,]           1           0 #> [211,]           0           1 #> [212,]           0           1 #> [213,]           1           0 #> [214,]           1           0 #> [215,]           0           1 #> [216,]           0           1 #> [217,]           1           0 #> [218,]           1           0 #> [219,]           1           0 #> [220,]           1           0 #> [221,]           0           1 #> [222,]           1           0 #> [223,]           1           0 #> [224,]           0           1 #> [225,]           1           0 #> [226,]           0           1 #> [227,]           1           0 #> [228,]           0           1 #> [229,]           1           0 #> [230,]           0           1 #> [231,]           0           1 #> [232,]           1           0 #> [233,]           0           1 #> [234,]           1           0 #> [235,]           0           1 #> [236,]           0           1 #> [237,]           0           1 #> [238,]           1           0 #> [239,]           1           0 #> [240,]           0           1 #> [241,]           0           1 #> [242,]           1           0 #> [243,]           1           0 #> [244,]           0           1 #> [245,]           1           0 #> [246,]           0           1 #> [247,]           0           1 #> [248,]           0           1 #> [249,]           0           1 #> [250,]           1           0 #> [251,]           0           1 #> [252,]           1           0 #> [253,]           1           0 #> [254,]           0           1 #> [255,]           0           1 #> [256,]           1           0 #> [257,]           1           0 #> [258,]           1           0 #> [259,]           0           1 #> [260,]           1           0 #> [261,]           1           0 #> [262,]           0           1 #> [263,]           1           0 #> [264,]           1           0 #> [265,]           1           0 #> [266,]           0           1 #> [267,]           0           1 #> [268,]           0           1 #> [269,]           0           1 #> [270,]           1           0 #> [271,]           1           0 #> [272,]           0           1 #> [273,]           0           1 #> [274,]           0           1 #> [275,]           1           0 #> [276,]           0           1 #> [277,]           1           0 #> [278,]           1           0 #> [279,]           0           1 #> [280,]           0           1 #> [281,]           1           0 #> [282,]           1           0 #> [283,]           0           1 #> [284,]           1           0 #> [285,]           1           0 #> [286,]           0           1 #> [287,]           1           0 #> [288,]           1           0 #> [289,]           0           1 #> [290,]           0           1 #> [291,]           0           1 #> [292,]           1           0 #> [293,]           0           1 #> [294,]           1           0 #> [295,]           1           0 #> [296,]           1           0 #> [297,]           1           0 #> [298,]           0           1 #> [299,]           1           0 #>  #> $ncomp #> [1] 2 #>  #> $fix_shift #> [1] FALSE #>"},{"path":"https://geobosh.github.io/mixAR/reference/bx_dx.html","id":null,"dir":"Reference","previous_headings":"","what":"RJMCMC move for AR order selection of mixture autoregressive models — bx_dx","title":"RJMCMC move for AR order selection of mixture autoregressive models — bx_dx","text":"Computes probabilities deciding whether AR order   increased decreased 1 iteration Bayesian analysis   mixture autoregressive models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bx_dx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RJMCMC move for AR order selection of mixture autoregressive models — bx_dx","text":"","code":"bx_dx(method = c(\"Ratio\", \"Poisson\", \"NULL\"), par, pk)"},{"path":"https://geobosh.github.io/mixAR/reference/bx_dx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RJMCMC move for AR order selection of mixture autoregressive models — bx_dx","text":"method method used updating probabilities. \"Ratio\"     \"Poisson\", probabilities depend par decrease     pk increases. \"NULL\", probabilities set     0.5. See Examples details. par tuning parameter calculating updating probabilities. pk autoregressive order selected component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bx_dx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RJMCMC move for AR order selection of mixture autoregressive models — bx_dx","text":"list 2 elements: bx probability increasing autoregressive order 1. dx probability decreasing autoregressive order 1,     calculated 1 - bx.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bx_dx.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RJMCMC move for AR order selection of mixture autoregressive models — bx_dx","text":"Ravagli D, Boshnakov GN (2020). “Bayesian analysis mixture autoregressive models covering complete parameter space.” 2006.11041, https://arxiv.org/abs/2006.11041.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bx_dx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RJMCMC move for AR order selection of mixture autoregressive models — bx_dx","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/bx_dx.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"RJMCMC move for AR order selection of mixture autoregressive models — bx_dx","text":"function use within Choose_pk.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/companion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a companion matrix from a vector — companion_matrix","title":"Create a companion matrix from a vector — companion_matrix","text":"Create companion matrix vector.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/companion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a companion matrix from a vector — companion_matrix","text":"","code":"companion_matrix(v, ncol = length(v), nrow = ncol)"},{"path":"https://geobosh.github.io/mixAR/reference/companion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a companion matrix from a vector — companion_matrix","text":"v first row matrix, numeric vector matrix     one row. ncol number columns, number. nrow number rows, number.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/companion_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a companion matrix from a vector — companion_matrix","text":"default settings, square \\(m\\times m\\) matrix   returned, \\(m\\) length v. ncol>\\(m\\),   vector amended 0's. error ncol   smaller \\(m\\). Argument nrow may used get rectangular matrix, although   term \"companion\" normally used square matrices.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/companion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a companion matrix from a vector — companion_matrix","text":"matrix","code":""},{"path":"https://geobosh.github.io/mixAR/reference/companion_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a companion matrix from a vector — companion_matrix","text":"","code":"companion_matrix(4:1) #>      [,1] [,2] [,3] [,4] #> [1,]    4    3    2    1 #> [2,]    1    0    0    0 #> [3,]    0    1    0    0 #> [4,]    0    0    1    0 companion_matrix(4:1, ncol=6) #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]    4    3    2    1    0    0 #> [2,]    1    0    0    0    0    0 #> [3,]    0    1    0    0    0    0 #> [4,]    0    0    1    0    0    0 #> [5,]    0    0    0    1    0    0 #> [6,]    0    0    0    0    1    0 companion_matrix(4:1, ncol=6, nrow=3) #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]    4    3    2    1    0    0 #> [2,]    1    0    0    0    0    0 #> [3,]    0    1    0    0    0    0"},{"path":"https://geobosh.github.io/mixAR/reference/cond_loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-likelihood of MixAR models — cond_loglik","title":"Log-likelihood of MixAR models — cond_loglik","text":"Compute log-likelihood MixAR model univariate time   series.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/cond_loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-likelihood of MixAR models — cond_loglik","text":"","code":"cond_loglik(model, x, index) cond_loglikS(model, x, index)"},{"path":"https://geobosh.github.io/mixAR/reference/cond_loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-likelihood of MixAR models — cond_loglik","text":"model MixAR model. x time series numeric vector. index vector integers giving indices x     compute sum log-likelihood, default     (p+1):length(x), p maximum AR order     components model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/cond_loglik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-likelihood of MixAR models — cond_loglik","text":"cond_loglik computes conditional log-likelihood MixAR   model. Conditional means conditional first p values   fixed, p maximum AR order components   model. Argument index can used compute sum subset   time points. cond_loglikS variant cond_loglik case   input model contains seasonal AR coefficients.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/cond_loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-likelihood of MixAR models — cond_loglik","text":"log-likelihood, numeric value","code":""},{"path":"https://geobosh.github.io/mixAR/reference/cond_loglik.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log-likelihood of MixAR models — cond_loglik","text":"Georgi N. Boshnakov Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/cond_loglik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-likelihood of MixAR models — cond_loglik","text":"","code":"## data(ibmclose, package = \"fma\") # doesn't work with fma v2.4, using '::' cond_loglik(exampleModels$WL_ibm,     as.numeric(fma::ibmclose)) #> [1] -1212.188 cond_loglik(exampleModels$WL_ibm_gen, as.numeric(fma::ibmclose)) #> [1] -1212.188  data(lynx)  # for 'lynx' data sar <- new(\"raggedCoefS\", a = list(c(1.1022, -0.2835), c(1.5279, -0.8871)),                           as = list(c(0, 0), 0), s = 10)  ## SMAR(2; 2, 2)(2, 1)_10 model_s10 <- new(\"MixARGaussian\", prob = c(.3, .7), scale = c(.08, .202),                                   arcoef = sar, shift = c(.7,1))  cond_loglikS(model_s10, log(lynx)) #> [1] -2036.966 cond_loglikS(model_s10, log(lynx), index = 45:114) # on reduced dataset #> [1] -1593.132"},{"path":"https://geobosh.github.io/mixAR/reference/dist_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for the standard normal distribution — dist_norm","title":"Functions for the standard normal distribution — dist_norm","text":"noise distributions specified list functions   density, quantiles, etc. object demonstrates   standard normal distribution.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/dist_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for the standard normal distribution — dist_norm","text":"","code":"dist_norm"},{"path":"https://geobosh.github.io/mixAR/reference/dist_norm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Functions for the standard normal distribution — dist_norm","text":"list functions names functions calculations   related standard normal distribution. Currently   elements following names:       \"pdf\", \"cdf\", \"rand\", \"logpdf\", \"Fscore\", \"xFscore\", \"Parscore\", \"get_param\", \"set_param\", \"any_param\", \"show\" .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/dist_norm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for the standard normal distribution — dist_norm","text":"dist_norm may used specify noise distribution   MixAR models. can used template   distributions needed, see also fdist_stdnorm.","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/dist_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for the standard normal distribution — dist_norm","text":"","code":"dist_norm #> $pdf #> [1] \"dnorm\" #>  #> $cdf #> [1] \"pnorm\" #>  #> $rand #> [1] \"rnorm\" #>  #> $logpdf #> function (x)  #> log(dnorm(x)) #> <bytecode: 0x7ff93b09a780> #> <environment: 0x7ff922de75c0> #>  #> $Fscore #> function (x)  #> -x #> <bytecode: 0x7ff93b09ae10> #> <environment: 0x7ff922de75c0> #>  #> $xFscore #> function (x)  #> -x^2 #> <bytecode: 0x7ff93b09b3c0> #> <environment: 0x7ff922de75c0> #>  #> $Parscore #> function ()  #> 0 #> <bytecode: 0x7ff93b09bbd8> #> <environment: 0x7ff922de75c0> #>  #> $get_param #> function ()  #> numeric() #> <bytecode: 0x7ff93b098208> #> <environment: 0x7ff922de75c0> #>  #> $set_param #> function ()  #> stop(\"Standard normal has no parameters to set.\") #> <bytecode: 0x7ff93b098748> #> <environment: 0x7ff922de75c0> #>  #> $any_param #> function ()  #> param_flag #> <bytecode: 0x7ff93b098cc0> #> <environment: 0x7ff922de75c0> #>  #> $show #> function ()  #> \"Standard normal distribution\" #> <bytecode: 0x7ff93b0991c8> #> <environment: 0x7ff922de75c0> #>  dist_norm$pdf #> [1] \"dnorm\" dist_norm$cdf #> [1] \"pnorm\""},{"path":"https://geobosh.github.io/mixAR/reference/em_est_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimise scale parameters in MixARgen models — em_est_dist","title":"Optimise scale parameters in MixARgen models — em_est_dist","text":"Optimise scale parameters MixAR models class MixARgen.   Internal function.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_est_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimise scale parameters in MixARgen models — em_est_dist","text":"","code":"em_est_dist(tau, etk, parscore, sigma, nu, logpdf)"},{"path":"https://geobosh.github.io/mixAR/reference/em_est_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimise scale parameters in MixARgen models — em_est_dist","text":"tau conditional probabilities, object class \"MixComp\",     see 'Details'. etk component residuals, see 'Details'. parscore score function(s), see 'Details'. sigma current values scale parameters, numeric vector. nu current values parameters. w.r.t. optimisation     done. logpdf log pdf function parameters.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_est_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimise scale parameters in MixARgen models — em_est_dist","text":"One error distributions MixAR model may   parameters considered unknown. case   em_est_dist can used optimise respect . representation error distributions \"MixARgen\" models   carries necessary information   parameters. em_est_dist works extracting current   values logpdf, passes optimisation function   (equation solver) stores result back logpdf.   em_est_dist quite general, long logpdf   prepared according conventions expects (  valid elements dist slot \"MixARgen\" objects).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_est_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimise scale parameters in MixARgen models — em_est_dist","text":"new values parameters","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_est_sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the scale parameters of MixAR models — em_est_sigma","title":"Update the scale parameters of MixAR models — em_est_sigma","text":"Calculates estimates scale parameters MixAR models   conditional probabilities mixture `residuals'.   Used EM algorithm.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_est_sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the scale parameters of MixAR models — em_est_sigma","text":"","code":"tauetk2sigmahat(tau, etk)  em_est_sigma(tau, etk, Fscore, sigma,              dontfix = rep(TRUE, length(sigma)), compwise = FALSE)"},{"path":"https://geobosh.github.io/mixAR/reference/em_est_sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the scale parameters of MixAR models — em_est_sigma","text":"tau conditional probabilities groups, \"MixComp\"     object. etk component \"residuals\", MixComp object(?). Fscore score function(s) noise distributions. sigma current values scale parameters. compwise TRUE solve equations component-wise, see   'Details. dontfix logical vector containig TRUE positions              elements sigma estimated.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_est_sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update the scale parameters of MixAR models — em_est_sigma","text":"tauetk2sigmahat calculates estimates scale parameters   MixAR time series Gaussian components. explicit   formula case. em_est_sigma calculates estimates scale parameters   general case.  non-linear equations solved using functions   package BB. equations components can often   solved independently. case, compwise may speed   things little.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_est_sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the scale parameters of MixAR models — em_est_sigma","text":"new values scale parameters, numeric vector","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_rinit.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian EM-step with random initialisation — em_rinit","title":"Gaussian EM-step with random initialisation — em_rinit","text":"Gaussian EM-step random initialisation.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_rinit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian EM-step with random initialisation — em_rinit","text":"","code":"em_rinit(y, order, partempl)  etk2tau(etk)"},{"path":"https://geobosh.github.io/mixAR/reference/em_rinit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian EM-step with random initialisation — em_rinit","text":"y time series. order MixAR order, vector length number components. partempl parameter template, list containing one element mixture     component, see randomArCoefficients. etk MixAR component residuals, matrix.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_rinit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian EM-step with random initialisation — em_rinit","text":"em_rinit generates random MAR residuals, performs non-distributional   E-step, Gaussian M-step. etk2tau estimates tau component residuals   . Note unlike em_tau, also needs   noise pdf's, well estimates mixture probabilities. em_rinit uses etk2tau start EM algorithm.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_rinit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian EM-step with random initialisation — em_rinit","text":"em_rinit, object class \"MixARGaussian\"  etk2tau, matrix representing tau (-th row   contains probabilities corresponding -th observation)","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_rinit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gaussian EM-step with random initialisation — em_rinit","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probabilities for the observations to belong to each of the components — em_tau","title":"Compute probabilities for the observations to belong to each of the components — em_tau","text":"Supporting function EM algorithm. Update conditional   probabilities components MixAR model   (E-step EM algorithm).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probabilities for the observations to belong to each of the components — em_tau","text":"","code":"em_tau(stdetk, prob, scale, pdf = dnorm)  em_tau_safe(stdetk, prob, scale, pdf = dnorm)"},{"path":"https://geobosh.github.io/mixAR/reference/em_tau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute probabilities for the observations to belong to each of the components — em_tau","text":"em_tau em_tau_safe compute conditional   probabilities components MixAR model (E-step   EM algorithm). two functions computations   em_tau_safe, addition, protects agains NaN's   infinite values argument stdetk obtained   computations.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probabilities for the observations to belong to each of the components — em_tau","text":"stdetk standardised component residuals, MixComp object. prob current estimates probabilities components, numeric     vector length equal number components model. scale scales (standard deviations) noise components, numeric     vector length equal number components model. pdf densities noise components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/em_tau.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute probabilities for the observations to belong to each of the components — em_tau","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate component specific error terms under MixAR model — err","title":"Calculate component specific error terms under MixAR model — err","text":"Returns matrix columns correspond error terms.   column's row assume value 0 observation \"assigned\"   component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate component specific error terms under MixAR model — err","text":"","code":"err(AR, mu, y, z, pk)"},{"path":"https://geobosh.github.io/mixAR/reference/err.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate component specific error terms under MixAR model — err","text":"AR list autoregressive components. mu Component means. y time series (currently numeric vector). z matrix columns contain observations     \"assignment\". Hence row contain one 1 (g-1) 0's pk autoregressive orders.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate component specific error terms under MixAR model — err","text":"e matrix columns correspond component specific \"residuals\",     equal 0 observations assigned     component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate component specific error terms under MixAR model — err","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate component specific error terms under MixAR model — err","text":"function built use within sampling functions.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err_k.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for MixAR — err_k","title":"Utility function for MixAR — err_k","text":"Calculates residuals certain component mixture.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for MixAR — err_k","text":"","code":"err_k(AR, mu, y, z, p, pk)"},{"path":"https://geobosh.github.io/mixAR/reference/err_k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for MixAR — err_k","text":"AR list autoregressive parameters. mu component means. y time series (currently numeric vector). z vector allocation specific component. p maximum autoregressive order pk autoregressive order component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err_k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for MixAR — err_k","text":"e vector containing component specific residuals.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err_k.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility function for MixAR — err_k","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/err_k.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Utility function for MixAR — err_k","text":"built utility function.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/est_templ.html","id":null,"dir":"Reference","previous_headings":"","what":"Create estimation templates from MixAR model objects — est_templ","title":"Create estimation templates from MixAR model objects — est_templ","text":"Create estimation templates MixAR model objects.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/est_templ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create estimation templates from MixAR model objects — est_templ","text":"","code":"est_templ(model, shift = TRUE, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/est_templ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create estimation templates from MixAR model objects — est_templ","text":"model \"MixAR\" object. shift logical, see Details. ... currently used.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/est_templ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create estimation templates from MixAR model objects — est_templ","text":"Argument model used template specify values   parameters /parameters estimate fix. general,   value parameter model NA,   estimated. Otherwise parameter taken . current implementation incomplete. particular, AR   parameters always designated estimation. Argument shift can used overwrite values   component shift model.  shift length   one, replicated number MixAR components.   shift[k] TRUE, shift coefficient   k-th component set NA request   estimation. Otherwise, value shift k-th component   model taken. Argument shift default TRUE causes   shift coefficients estimated irrespectively values   model. est_templ returns list many components   MixAR components model. k-th component list list   specifing parameters -th MixAR component estimate fix.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/est_templ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create estimation templates from MixAR model objects — est_templ","text":"list, described Details.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/est_templ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create estimation templates from MixAR model objects — est_templ","text":"","code":"exampleModels$WL_A #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.5    0     5     1   0.5  #> Comp_2 0.5    0     1     1   1.1  #>  #> Distributions of the error components: #> \tstandard Gaussian #>  est_templ(exampleModels$WL_A) #> [[1]] #> [[1]][[1]] #> [1] NA #>  #> [[1]][[2]] #> [1] NA #>  #>  #> [[2]] #> [[2]][[1]] #> [1] NA #>  #> [[2]][[2]] #> [1] NA #>  #>  est_templ(exampleModels$WL_A, shift = FALSE) #> [[1]] #> [[1]][[1]] #> [1] 0 #>  #> [[1]][[2]] #> [1] NA #>  #>  #> [[2]] #> [[2]][[1]] #> [1] 0 #>  #> [[2]][[2]] #> [1] NA #>  #>   exampleModels$WL_I #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.4    0     1     2    0.9 -0.60      #> Comp_2 0.3    0     1     1   -0.5            #> Comp_3 0.3   -5     5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  est_templ(exampleModels$WL_I) #> [[1]] #> [[1]][[1]] #> [1] NA #>  #> [[1]][[2]] #> [1] NA NA #>  #>  #> [[2]] #> [[2]][[1]] #> [1] NA #>  #> [[2]][[2]] #> [1] NA #>  #>  #> [[3]] #> [[3]][[1]] #> [1] NA #>  #> [[3]][[2]] #> [1] NA NA NA #>  #>"},{"path":"https://geobosh.github.io/mixAR/reference/exampleModels.html","id":null,"dir":"Reference","previous_headings":"","what":"MixAR models for examples and testing — exampleModels","title":"MixAR models for examples and testing — exampleModels","text":"MixAR models examples testing.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/exampleModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MixAR models for examples and testing — exampleModels","text":"","code":"exampleModels"},{"path":"https://geobosh.github.io/mixAR/reference/exampleModels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MixAR models for examples and testing — exampleModels","text":"Coefficients models examples   Wong Li (2000) . Variations different   noise distributions used throughout examples mixAR.   models classes inheriting class \"MixAR\". exampleModels list following components:  component MixAR model, .e. object inheriting class   \"MixAR\".","code":""},{"path":"https://geobosh.github.io/mixAR/reference/exampleModels.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MixAR models for examples and testing — exampleModels","text":"Wong CS, Li WK (2000). “mixture autoregressive model.” J. R. Stat. Soc., Ser. B, Stat. Methodol. , 62(1), 95-115.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/exampleModels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MixAR models for examples and testing — exampleModels","text":"","code":"## use these instead of moWL, moWL_A, moWL_B, etc. exampleModels$WL_ibm #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob   shift scale   order ar_1   ar_2    #> Comp_1 0.5439   0    4.8227   2   0.6792  0.3208 #> Comp_2 0.4176   0    6.0082   2   1.6711 -0.6711 #> Comp_3 0.0385   0   18.1716   1   1.0000         #>  #> Distributions of the error components: #> \tstandard Gaussian #>   exampleModels$WL_A #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.5    0     5     1   0.5  #> Comp_2 0.5    0     1     1   1.1  #>  #> Distributions of the error components: #> \tstandard Gaussian #>  exampleModels$WL_B #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.75   0     5     1   0.5  #> Comp_2 0.25   0     1     1   1.4  #>  #> Distributions of the error components: #> \tstandard Gaussian #>  # what is the difference between A and B? show_diff(exampleModels$WL_A, exampleModels$WL_B) #>        prob  shift scale order ar_1 #> Comp_1 -0.25   0     0     1    0.0 #> Comp_2  0.25   0     0     1   -0.3  exampleModels$WL_I #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.4    0     1     2    0.9 -0.60      #> Comp_2 0.3    0     1     1   -0.5            #> Comp_3 0.3   -5     5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  exampleModels$WL_II #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2 #> Comp_1 0.4    5     1     2    0.9 -0.6 #> Comp_2 0.3    0     1     2   -0.7  0.0 #> Comp_3 0.3   -5     5     2    0.0  0.8 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #show_diff(exampleModels$WL_I, exampleModels$WL_II)  exampleModels$WL_ibm_gen #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob   shift scale   order ar_1   ar_2    #> Comp_1 0.5439   0    4.8227   2   0.6792  0.3208 #> Comp_2 0.4176   0    6.0082   2   1.6711 -0.6711 #> Comp_3 0.0385   0   18.1716   1   1.0000         #>  #> Distributions of the error components: #> \tComponent 1: Standard normal distribution #>  exampleModels$WL_ibm_t3v #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob   shift scale   order ar_1   ar_2    #> Comp_1 0.5439   0    4.8227   2   0.6792  0.3208 #> Comp_2 0.4176   0    6.0082   2   1.6711 -0.6711 #> Comp_3 0.0385   0   18.1716   1   1.0000         #>  #> Distributions of the error components: #> \tComponent 1: Student t with 3 df #>  exampleModels$WL_ibm_tf #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob   shift scale   order ar_1   ar_2    #> Comp_1 0.5439   0    4.8227   2   0.6792  0.3208 #> Comp_2 0.4176   0    6.0082   2   1.6711 -0.6711 #> Comp_3 0.0385   0   18.1716   1   1.0000         #>  #> Distributions of the error components: #> \tComponent 1: Student t with 20 df #> \tComponent 2: Student t with 30 df #> \tComponent 3: Student t with 40 df #>  #show_diff(exampleModels$WL_ibm_gen, exampleModels$WL_ibm_t3v)  exampleModels$WL_At #> An object of class \"MixARgen\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.5    0     1     1   -0.5 #> Comp_2 0.5    0     2     1    1.1 #>  #> Distributions of the error components: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 8 df #>   exampleModels$WL_Bt_1 #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.3    5   2.0     2    0.5  0.24      #> Comp_2 0.3   -5   1.0     1   -0.9            #> Comp_3 0.4    0   0.5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 6 df #> \tComponent 3: Student t with 10 df #>  exampleModels$WL_Bt_2 #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.3    5   2.0     2    0.5  0.24      #> Comp_2 0.3   -5   1.0     1   -0.9            #> Comp_3 0.4    0   0.5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 4 df #> \tComponent 3: Student t with 10 df #>  exampleModels$WL_Bt_3 #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.3    5   2.0     2    0.5  0.24      #> Comp_2 0.3   -5   1.0     1   -0.9            #> Comp_3 0.4    0   0.5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 4 df #> \tComponent 3: Student t with 10 df #>  ## what is different between Bt_2 and Bt_1? (df of component 2) show_diff(exampleModels$WL_Bt_2, exampleModels$WL_Bt_1) #>        prob shift scale order ar_1 ar_2 ar_3 #> Comp_1   0    0     0     2     0    0       #> Comp_2   0    0     0     1     0            #> Comp_3   0    0     0     3     0    0    0  #>  #> Distributions of the error components: #>  #> \tModel 1: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 4 df #> \tComponent 3: Student t with 10 df #>  #> \tModel 2: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 6 df #> \tComponent 3: Student t with 10 df  exampleModels$WL_Ct_1 #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.3    5   2.0     2    0.5  0.24      #> Comp_2 0.3   -5   1.0     1   -0.9            #> Comp_3 0.4    0   0.5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 7 df #> \tComponent 3: Standard normal distribution #>  exampleModels$WL_Ct_2 #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.3    5   2.0     2    0.5  0.24      #> Comp_2 0.3   -5   1.0     1   -0.9            #> Comp_3 0.4    0   0.5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 7 df #> \tComponent 3: Standard normal distribution #>  exampleModels$WL_Ct_3 #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.3    5   2.0     2    0.5  0.24      #> Comp_2 0.3   -5   1.0     1   -0.9            #> Comp_3 0.4    0   0.5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tstandard Gaussian #>   ## The models were created with something like: moWLprob <- c(0.5439,0.4176,0.0385) moWLsigma <- c(4.8227,6.0082,18.1716) moWLar <- list(c(0.6792,0.3208), c(1.6711,-0.6711), 1)  moWL <- new(\"MixARGaussian\", prob = moWLprob, scale = moWLsigma,             arcoef = moWLar) moWLgen <- new(\"MixARgen\", prob = moWLprob, scale = moWLsigma,                arcoef = moWLar, dist = list(dist_norm)) ## clean up a bit rm(moWLprob, moWLsigma, moWLar, moWL, moWLgen)"},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixAR-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit mixture autoregressive models — fit_mixAR-methods","title":"Fit mixture autoregressive models — fit_mixAR-methods","text":"Estimate MixAR model time series. generic function.   methods defined package mixAR described .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixAR-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit mixture autoregressive models — fit_mixAR-methods","text":"","code":"fit_mixAR(x, model, init, fix, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixAR-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit mixture autoregressive models — fit_mixAR-methods","text":"x time series. model model, object inheriting MixAR class. init initializations , see Details. fix parameters fix, see Details. ... additional arguments methods.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixAR-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit mixture autoregressive models — fit_mixAR-methods","text":"Method dispatch done first three arguments:   x, model init. model specifies model fit. model inherits   \"MixAR\", used template.  init missing,   parameters model also used initial values.    model can also numeric vector specifying order   MixAR model Gaussian components. Argument init can used give initial values  variety   ways. MixAR object need class   model, allow using initial values common parameters   different MixAR models. positive integer value init   asks run fitting procedure init times, time   generating random initial values. init can also list. case, component   list acceptable value init   fitting procedure run component init. Argument fix can given number ways. Note however   currently method dispatch . Currently default method fit_mixAR just throws error,   since seems suitable default task . See individual methods details.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixAR-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit mixture autoregressive models — fit_mixAR-methods","text":"MixAR model list MixAR models, depending arguments.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixAR-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Fit mixture autoregressive models — fit_mixAR-methods","text":"signature(x = \"\", model = \"\", init = \"\") default method throws error. signature(x = \"\", model = \"MixAR\", init = \"missing\") equivalent setting init = model. signature(x = \"\", model = \"MixAR\", init = \"MixAR\") model template result, init specifies     initial values parameters. principle, model     init may different classes, allow example     using AR coefficients Gaussian fit distributions.   signature(x = \"\", model = \"MixAR\", init = \"numeric\") init must single positive integer . model     fitted init times, time starting new set     randomly generated initial values. select TRUE,     default, model largest likelihood returned,     otherwise list containing init fitted models     returned.  signature(x = \"\", model = \"MixAR\", init = \"list\") element list init acceptable value     init. model fitted initial value  set     element init. list containing fitted models     returned.  signature(x = \"\", model = \"MixARGaussian\", init = \"MixAR\")  signature(x = \"\", model = \"numeric\", init = \"missing\") equivalent setting init = 1. signature(x = \"\", model = \"numeric\", init = \"numeric\") numeric model vector non-negative integers       specifying order MixAR model. distribution       components assumed Gaussian.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixAR-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit mixture autoregressive models — fit_mixAR-methods","text":"","code":"## model coefficients from Wong&Li (IBM fit) prob  <- exampleModels$WL_ibm@prob     # c(0.5439, 0.4176, 0.0385) sigma <- exampleModels$WL_ibm@scale    # c(4.8227, 6.0082, 18.1716) ar    <- exampleModels$WL_ibm@arcoef@a # list(c(0.6792, 0.3208), c(1.6711, -0.6711), 1)  ## data(ibmclose, package = \"fma\")  # `ibmclose'  mot30 <- new(\"MixARgen\", prob = prob, scale = sigma, arcoef = ar,              dist = distlist(\"stdt\", c(30, 30, 30)))  mot20_30_40 <- new(\"MixARgen\", prob = prob, scale = sigma, arcoef = ar,                    dist = distlist(\"stdt\", c(20, 30, 40)))  mo_t20_t30_norm <- new(\"MixARgen\", prob = prob, scale = sigma, arcoef = ar,                    dist = distlist(c(\"stdt\", \"stdt\", \"stdnorm\"), c(20, 30)))  ## Gaussian components fi0 <- fit_mixAR(fma::ibmclose, exampleModels$WL_ibm, fix = \"shift\", crit = 1e-4) fi0$model #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift scale     order ar_1      ar_2       #> Comp_1 0.54287126   0    4.797900   2   0.6825951  0.3184695 #> Comp_2 0.42094949   0    5.938168   2   1.6731621 -0.6755995 #> Comp_3 0.03617925   0   17.749431   1   0.9889259            #>  #> Distributions of the error components: #> \tstandard Gaussian #>   if(FALSE){ # don't run on CRAN to save a couple of seconds ## remove minniter/maxniter below for realistic results.  ## std-t components fi1 <- fit_mixAR(fma::ibmclose, mot30, fix = \"shift\",                  crit = 1e-4, minniter = 1, maxniter = 3) fi1$model  ## 1st and 2nd components std-t, 3rd Gaussian fi2 <- fit_mixAR(fma::ibmclose, mo_t20_t30_norm, fix = \"shift\",                  crit = 1e-4, minniter = 1, maxniter = 3) fi2$model }"},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"Estimate linear regression model time series residuals   mixture autoregressive process.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"","code":"fit_mixARreg(x, y, mixARmodel, EMinit, ...)  mixARreg(x, y, mixARmodel, tol = 1e-6, niter = 200)"},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"x response time series (currently numeric vector). y data.frame, matrix numeric vector. either     first two, column must contain one covariate (currently     numeric). check matching lengths x y     done. mixARmodel object inheriting class \"MixAR\", giving initial     values EM-estimation mixture autoregressive     parameters. Currenlty \"MixARGaussian\" supported. EMinit starting values EM estimation MixAR parameters. present,     must named list, containing least prob     scale numeric vectors, list arcoef. tol threshold convergence criterion. ... passed MixARreg. niter maximal number iterations.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"fit_mixARreg generic function.    Currently default method fit_mixARreg.   Arguments y, mixARmodel, EMinit can given   number ways, see individual methods details. Argument mixARmodel gives details MixAR part   model initial values parameters.   fit_mixARreg can alternatively done list using    argument EMinit. Currently, least one two must   supplied, present EMinit ignored. mixARreg performs two-step estimation linear regression   model mixture autoregressive residuals.  workhorse   fit_mixARreg calls computations.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"reg summary output regression part model. mixARmodel Estimates mixture autoregressive part model. niter number iterations convergence.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"signature(x = \"\", y = \"data.frame\", mixARmodel = \t\"MixAR\", EMinit = \"missing\") Covariates y supplied data.frame: column     corresponds one covariate. Initialization MixAR paramters     done using input mixARmodel signature(x = \"\", y = \"matrix\",         mixARmodel = \"MixAR\", EMinit = \"missing\") Covariates y supplied matrix: column     corresponds one covariate. Initialization MixAR paramters     done using input mixARmodel signature(x = \"\", y = \"numeric\", mixARmodel = \"MixAR\", EMinit = \"missing\") Covariates y supplied numeric: method handles     simple regression case single covairate.      Initialization MixAR paramters done using input mixARmodel signature(x = \"\", y = \"\", mixARmodel = \"missing\", EMinit = \"list\") EMinit must named list (see 'Arguments'). signature(x = \"\", y = \"\", mixARmodel = \"MixAR\", EMinit = \"list\") mixARmodel EMinit supplied, second ignored.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"Davide Ravagli Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"Estimation done using function mixARreg within   method.","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixARreg-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit time series regression models with mixture autoregressive residuals — fit_mixARreg-methods","text":"","code":"## Simulate covariates set.seed(1234) n <- 50 # for CRAN y <- data.frame(rnorm(n, 7, 1), rt(n, 3), rnorm(n, 3, 2))  ## Build mixAR part model <- new(\"MixARGaussian\",               prob   = exampleModels$WL_At@prob,      # c(0.5, 0.5)              scale  = exampleModels$WL_At@scale,     # c(1, 2)                      arcoef = exampleModels$WL_At@arcoef@a ) # list(-0.5, 1.1)  ## Simulate from MixAR part u <- mixAR_sim(model, n, 0)  x <- 10 + y[, 1] + 3 * y[, 2] + 2 * y[, 3] + u  ## Fit model  ## Using MixARGaussian fit_mixARreg(x = x, y = y, mixARmodel = model, niter = 3) #> $reg #>  #> Call: #> lm(formula = data.frame(xstar, y)) #>  #> Coefficients: #>    (Intercept)  rnorm.n..7..1.        rt.n..3.  rnorm.n..3..2.   #>          7.325           1.558           2.831           1.805   #>  #>  #> $mixARmodel #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob      shift scale    order ar_1      #> Comp_1 0.5566597   0   1.057166   1   -0.475807 #> Comp_2 0.4433403   0   1.906334   1    1.005682 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $niter #> [1] 3 #>  #> $convergence #> [1] 1 #>   ## Using EMinit EMinit <- list(prob = exampleModels$WL_At@prob, scale = exampleModels$WL_At@scale,                arcoef = exampleModels$WL_At@arcoef@a) fit_mixARreg(x = x, y = y, EMinit = EMinit, niter = 3) #> $reg #>  #> Call: #> lm(formula = data.frame(xstar, y)) #>  #> Coefficients: #>    (Intercept)  rnorm.n..7..1.        rt.n..3.  rnorm.n..3..2.   #>          7.325           1.558           2.831           1.805   #>  #>  #> $mixARmodel #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob      shift scale    order ar_1      #> Comp_1 0.5566597   0   1.057166   1   -0.475807 #> Comp_2 0.4433403   0   1.906334   1    1.005682 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $niter #> [1] 3 #>  #> $convergence #> [1] 1 #>"},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixVAR-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit mixture vector autoregressive models — fit_mixVAR-methods","title":"Fit mixture vector autoregressive models — fit_mixVAR-methods","text":"Estimate MixVAR model multivariate time series.   generic function.  methods defined package MixAR   described .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixVAR-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit mixture vector autoregressive models — fit_mixVAR-methods","text":"","code":"fit_mixVAR(x, model, fix, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixVAR-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit mixture vector autoregressive models — fit_mixVAR-methods","text":"x multivariate time series (currently numeric matrix). model model, object inheriting MixVAR class. fix TRUE, fix shift parameters. ... additional arguments methods (currently used).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixVAR-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit mixture vector autoregressive models — fit_mixVAR-methods","text":"MixVAR model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixVAR-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit mixture vector autoregressive models — fit_mixVAR-methods","text":"model specifies model fit. model inherits   \"MixVAR\", used template.  Estimation done via   EM-Algorithm, using function mixVARfit. Currently default method fit_mixAR just throws error,   since seems suitable default task .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixVAR-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Fit mixture vector autoregressive models — fit_mixVAR-methods","text":"signature(x = \"\", model = \"MixVAR\")  signature(x = \"\", model = \"\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/fit_mixVAR-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit mixture vector autoregressive models — fit_mixVAR-methods","text":"","code":"AR <- list() AR[[1]] <- array(c(0.5, -0.3, -0.6, 0, 0, 0.5, 0.4, 0.5, -0.3), dim = c(3, 3, 1)) AR[[2]] <- array(c(-0.5, 0.3, 0, 1, 0, -0.5, -0.4, -0.2, 0.5), dim = c(3, 3, 1))  prob <- c(0.75, 0.25) shift <- cbind(c(0, 0, 0), c(0, 0, 0))  Sigma1 <- cbind(c(1, 0.5, -0.4), c(0.5, 2, 0.8), c(-0.4, 0.8, 4)) Sigma2 <- cbind(c(1, 0.2, 0), c(0.2,  2, -0.15), c(0, -0.15, 4)) Sigma <- array(c(Sigma1, Sigma2), dim = c(3, 3, 2))  m <- new(\"MixVARGaussian\", prob = prob, vcov = Sigma, arcoef = AR, shift = shift)  set.seed(1234) y <- mixVAR_sim(m, n = 100, init = matrix(0, ncol = 3), nskip = 50, flag = FALSE)  fit_mixVAR(y, m, tol = 1e-3) #> $model #> (To see the internal structure of the object, use function 'str'.) #>  #> An object of class \"MixVARGaussian\" #> Number of components: 2  #> Number of series: 3  #>             prob      shift order        ar_1                         #> Comp_1 0.7561508  0.1281656     1  0.41214162  0.15489065  0.36858610 #>                   0.1476945       -0.67459251  0.23338114  0.53169958 #>                  -0.4193473       -0.98634266  0.58632537 -0.33231352 #> Comp_2 0.2438492  0.3997921     1 -0.26384005  0.40212431 -0.14272653 #>                   0.6901770       -0.04967386 -0.06820107 -0.07706285 #>                  -0.5439589       -0.04438110  0.09917752  0.34190926 #>               vcov                        #> Comp_1  1.28998427  0.3532316 -1.43884725 #>         0.35323165  1.4588477  0.84376732 #>        -1.43884725  0.8437673  5.09397281 #> Comp_2  1.18935913  0.5697533 -0.07065855 #>         0.56975325  0.9346697 -0.99381873 #>        -0.07065855 -0.9938187  5.28724834 #>  #> Distributions of the error components: #> \tMultivariate standard Gaussian #>  #>  #> $vallogf #> [1] -477.3159 #>  mixVARfit(y, m, tol = 1e-3) #> $model #> (To see the internal structure of the object, use function 'str'.) #>  #> An object of class \"MixVARGaussian\" #> Number of components: 2  #> Number of series: 3  #>             prob      shift order        ar_1                         #> Comp_1 0.7561684  0.1281484     1  0.41212929  0.15486430  0.36858362 #>                   0.1476893       -0.67459978  0.23335828  0.53169430 #>                  -0.4192959       -0.98629155  0.58640262 -0.33230476 #> Comp_2 0.2438316  0.3997948     1 -0.26381786  0.40218964 -0.14274202 #>                   0.6900980       -0.04958495 -0.06808290 -0.07707954 #>                  -0.5439389       -0.04455661  0.09893087  0.34194016 #>               vcov                        #> Comp_1  1.28997846  0.3532545 -1.43887869 #>         0.35325450  1.4588626  0.84369248 #>        -1.43887869  0.8436925  5.09408617 #> Comp_2  1.18937746  0.5697202 -0.07050862 #>         0.56972024  0.9345942 -0.99356299 #>        -0.07050862 -0.9935630  5.28685385 #>  #> Distributions of the error components: #> \tMultivariate standard Gaussian #>  #>  #> $vallogf #> [1] -477.2795 #>"},{"path":"https://geobosh.github.io/mixAR/reference/fnoise.html","id":null,"dir":"Reference","previous_headings":"","what":"Generator functions for noise distributions — fnoise","title":"Generator functions for noise distributions — fnoise","text":"functions objects mostly internal   needed routine use. Generate noise distribution, currently   standard normal standardised t-distributions. functions can   used templates new distributions.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fnoise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generator functions for noise distributions — fnoise","text":"","code":"fdist_stdnorm()  fdist_stdt(df, fixed = TRUE)  fn_stdt(df, fixed = TRUE)  b_show(x)  distlist(type, param, ncomp = NULL, fixed = FALSE, tr = NULL, ...)  ed_nparam  ed_parse(s)  ed_skeleton(df, fixed = FALSE, n = length(df), tr = NULL)  ed_src  ed_stdnorm  ed_stdt  ed_stdt0  ed_stdt1  ft_stdt"},{"path":"https://geobosh.github.io/mixAR/reference/fnoise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generator functions for noise distributions — fnoise","text":"df degrees freedom fixed TRUE, parameters fixed, otherwise     variable, see Details. x fitted object.  type list distributions. param parameters. ncomp number components. tr transformation. ... used. s named vector. n number different degrees freedom.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fnoise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generator functions for noise distributions — fnoise","text":"argument fixed TRUE, estimation functions assume   parameter(s) fixed, otherwise estimate . support   incomplete, see . fdist_stdnorm standard normal distribution.   example dist_norm generated . fdist_stdt t-distribution df degrees   freedom. fn_stdt also t-distribution degrees   freedom, df, may vector. value list   distributions. Although list can obtained repeated calls   fdist_stdt support incomplete.  particular, parameter fixed   TRUE, changes parameter(s) probably allowed   (can achieved simply dropping corresponding function   list). However, thorough rethinking necessary,   introduced fly developing estimation functions   forbidding changes may necessitate changes code. Changes   useful estimation convenience also avoid recreating   whole distributions . However, major drawback, final version needs   addressed satisfactorily. Since parameters held local   environments, changes parameters reflected copies   objects. example, estimation function (user) may call   another function model containing object generated   functions assign result new object. However   parameters noise distribution changed process   reflected original model. Note effect valid object generated   functions reused. Objects created different calls   different environments, problem arise .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/fnoise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generator functions for noise distributions — fnoise","text":"","code":"stdt3 <- fdist_stdt(3) stdt3v <- fdist_stdt(3, fixed = FALSE) fn_stdt(c(20, 30, 40), fixed = FALSE) #> [[1]] #> [[1]]$pdf #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$cdf #> function (x)  #> pstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443140> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$rand #> function (n)  #> rstd(n, nu = nu[k]) #> <bytecode: 0x7ff93f442e68> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$logpdf #> function (x)  #> log(dstd(x, nu = nu[k])) #> <bytecode: 0x7ff93f442b90> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$Fscore #> function (x)  #> -x * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446758> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$xFscore #> function (x)  #> -x^2 * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446020> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$Parscore #> function (x)  #> param_score_stdt(x, nu[k]) #> <bytecode: 0x7ff93f445808> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$get_param #> function ()  #> nu[k] #> <bytecode: 0x7ff93f445568> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$set_param #> function (x)  #> nu[k] <<- x #> <bytecode: 0x7ff93f445418> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$any_param #> function ()  #> param_flag #> <bytecode: 0x7ff93f444f80> #> <environment: 0x7ff92f34b2e8> #>  #> [[1]]$show #> function ()  #> paste(\"Student t with\", format(nu[[k]], digits = 4), \"df\") #> <bytecode: 0x7ff93f444e30> #> <environment: 0x7ff92f34b2e8> #>  #>  #> [[2]] #> [[2]]$pdf #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$cdf #> function (x)  #> pstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443140> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$rand #> function (n)  #> rstd(n, nu = nu[k]) #> <bytecode: 0x7ff93f442e68> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$logpdf #> function (x)  #> log(dstd(x, nu = nu[k])) #> <bytecode: 0x7ff93f442b90> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$Fscore #> function (x)  #> -x * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446758> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$xFscore #> function (x)  #> -x^2 * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446020> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$Parscore #> function (x)  #> param_score_stdt(x, nu[k]) #> <bytecode: 0x7ff93f445808> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$get_param #> function ()  #> nu[k] #> <bytecode: 0x7ff93f445568> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$set_param #> function (x)  #> nu[k] <<- x #> <bytecode: 0x7ff93f445418> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$any_param #> function ()  #> param_flag #> <bytecode: 0x7ff93f444f80> #> <environment: 0x7ff92f34acc8> #>  #> [[2]]$show #> function ()  #> paste(\"Student t with\", format(nu[[k]], digits = 4), \"df\") #> <bytecode: 0x7ff93f444e30> #> <environment: 0x7ff92f34acc8> #>  #>  #> [[3]] #> [[3]]$pdf #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$cdf #> function (x)  #> pstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443140> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$rand #> function (n)  #> rstd(n, nu = nu[k]) #> <bytecode: 0x7ff93f442e68> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$logpdf #> function (x)  #> log(dstd(x, nu = nu[k])) #> <bytecode: 0x7ff93f442b90> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$Fscore #> function (x)  #> -x * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446758> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$xFscore #> function (x)  #> -x^2 * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446020> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$Parscore #> function (x)  #> param_score_stdt(x, nu[k]) #> <bytecode: 0x7ff93f445808> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$get_param #> function ()  #> nu[k] #> <bytecode: 0x7ff93f445568> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$set_param #> function (x)  #> nu[k] <<- x #> <bytecode: 0x7ff93f445418> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$any_param #> function ()  #> param_flag #> <bytecode: 0x7ff93f444f80> #> <environment: 0x7ff92f34a6a8> #>  #> [[3]]$show #> function ()  #> paste(\"Student t with\", format(nu[[k]], digits = 4), \"df\") #> <bytecode: 0x7ff93f444e30> #> <environment: 0x7ff92f34a6a8> #>  #>   mo_tf <- new(\"MixARgen\", prob = exampleModels$WL_ibm@prob,              scale = exampleModels$WL_ibm@scale, arcoef = exampleModels$WL_ibm@arcoef@a,              dist = list(generator = function(par)                  fn_stdt(par, fixed = FALSE), param = c(20, 30, 40))) mo_tf #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob   shift scale   order ar_1   ar_2    #> Comp_1 0.5439   0    4.8227   2   0.6792  0.3208 #> Comp_2 0.4176   0    6.0082   2   1.6711 -0.6711 #> Comp_3 0.0385   0   18.1716   1   1.0000         #>  #> Distributions of the error components: #> \tComponent 1: Student t with 20 df #> \tComponent 2: Student t with 30 df #> \tComponent 3: Student t with 40 df #>  str(mo_tf) #> Formal class 'MixARgen' [package \"mixAR\"] with 6 slots #>   ..@ dist  :List of 2 #>   .. ..$ generator:function (par)   #>   .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 7 38 8 44 38 44 7 8 #>   .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x7ff92f9a7cd8>  #>   .. ..$ param    : num [1:3] 20 30 40 #>   ..@ prob  : num [1:3] 0.5439 0.4176 0.0385 #>   ..@ order : int [1:3] 2 2 1 #>   ..@ shift : num [1:3] 0 0 0 #>   ..@ scale : num [1:3] 4.82 6.01 18.17 #>   ..@ arcoef:Formal class 'raggedCoef' [package \"mixAR\"] with 2 slots #>   .. .. ..@ a:List of 3 #>   .. .. .. ..$ : num [1:2] 0.679 0.321 #>   .. .. .. ..$ : num [1:2] 1.671 -0.671 #>   .. .. .. ..$ : num 1 #>   .. .. ..@ p: int [1:3] 2 2 1  noise_dist(mo_tf, \"pdf\") #> [[1]] #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff93009a7f0> #>  #> [[2]] #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff93009e0e0> #>  #> [[3]] #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff93009dac0> #>  parameters(mo_tf) #>  [1]  2.0000  2.0000  1.0000  0.5439  0.4176  0.0385  0.0000  0.0000  0.0000 #> [10]  4.8227  6.0082 18.1716  0.6792  0.3208  1.6711 -0.6711  1.0000 parameters(mo_tf, names = TRUE) #>  order1  order2  order3   prob1   prob2   prob3  shift1  shift2  shift3  scale1  #>  2.0000  2.0000  1.0000  0.5439  0.4176  0.0385  0.0000  0.0000  0.0000  4.8227  #>  scale2  scale3   ar_11   ar_12   ar_21   ar_22   ar_31  #>  6.0082 18.1716  0.6792  0.3208  1.6711 -0.6711  1.0000  get_edist(mo_tf) #> [[1]] #> [[1]]$pdf #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$cdf #> function (x)  #> pstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443140> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$rand #> function (n)  #> rstd(n, nu = nu[k]) #> <bytecode: 0x7ff93f442e68> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$logpdf #> function (x)  #> log(dstd(x, nu = nu[k])) #> <bytecode: 0x7ff93f442b90> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$Fscore #> function (x)  #> -x * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446758> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$xFscore #> function (x)  #> -x^2 * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446020> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$Parscore #> function (x)  #> param_score_stdt(x, nu[k]) #> <bytecode: 0x7ff93f445808> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$get_param #> function ()  #> nu[k] #> <bytecode: 0x7ff93f445568> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$set_param #> function (x)  #> nu[k] <<- x #> <bytecode: 0x7ff93f445418> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$any_param #> function ()  #> param_flag #> <bytecode: 0x7ff93f444f80> #> <environment: 0x7ff9301b5f58> #>  #> [[1]]$show #> function ()  #> paste(\"Student t with\", format(nu[[k]], digits = 4), \"df\") #> <bytecode: 0x7ff93f444e30> #> <environment: 0x7ff9301b5f58> #>  #>  #> [[2]] #> [[2]]$pdf #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$cdf #> function (x)  #> pstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443140> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$rand #> function (n)  #> rstd(n, nu = nu[k]) #> <bytecode: 0x7ff93f442e68> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$logpdf #> function (x)  #> log(dstd(x, nu = nu[k])) #> <bytecode: 0x7ff93f442b90> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$Fscore #> function (x)  #> -x * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446758> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$xFscore #> function (x)  #> -x^2 * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446020> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$Parscore #> function (x)  #> param_score_stdt(x, nu[k]) #> <bytecode: 0x7ff93f445808> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$get_param #> function ()  #> nu[k] #> <bytecode: 0x7ff93f445568> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$set_param #> function (x)  #> nu[k] <<- x #> <bytecode: 0x7ff93f445418> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$any_param #> function ()  #> param_flag #> <bytecode: 0x7ff93f444f80> #> <environment: 0x7ff9301b5938> #>  #> [[2]]$show #> function ()  #> paste(\"Student t with\", format(nu[[k]], digits = 4), \"df\") #> <bytecode: 0x7ff93f444e30> #> <environment: 0x7ff9301b5938> #>  #>  #> [[3]] #> [[3]]$pdf #> function (x)  #> dstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443418> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$cdf #> function (x)  #> pstd(x, nu = nu[k]) #> <bytecode: 0x7ff93f443140> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$rand #> function (n)  #> rstd(n, nu = nu[k]) #> <bytecode: 0x7ff93f442e68> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$logpdf #> function (x)  #> log(dstd(x, nu = nu[k])) #> <bytecode: 0x7ff93f442b90> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$Fscore #> function (x)  #> -x * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446758> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$xFscore #> function (x)  #> -x^2 * (1 + nu[k])/(x^2 + nu[k] - 2) #> <bytecode: 0x7ff93f446020> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$Parscore #> function (x)  #> param_score_stdt(x, nu[k]) #> <bytecode: 0x7ff93f445808> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$get_param #> function ()  #> nu[k] #> <bytecode: 0x7ff93f445568> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$set_param #> function (x)  #> nu[k] <<- x #> <bytecode: 0x7ff93f445418> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$any_param #> function ()  #> param_flag #> <bytecode: 0x7ff93f444f80> #> <environment: 0x7ff9301b5318> #>  #> [[3]]$show #> function ()  #> paste(\"Student t with\", format(nu[[k]], digits = 4), \"df\") #> <bytecode: 0x7ff93f444e30> #> <environment: 0x7ff9301b5318> #>  #>  noise_params(mo_tf) #> [1] 20 30 40"},{"path":"https://geobosh.github.io/mixAR/reference/get_edist-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function get_edist in package mixAR — get_edist-methods","title":"Methods for function get_edist in package mixAR — get_edist-methods","text":"Methods function get_edist package mixAR","code":""},{"path":"https://geobosh.github.io/mixAR/reference/get_edist-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function get_edist in package mixAR — get_edist-methods","text":"get_edist gives error (noise) distribution MixAR   objects. Currently distribution returned list functions.   list contains one element component. error   distributions components , list may   contain single element representing common error distribution. Note distribution necessarily stored slot   dist format, see description slot class   \"MixARgen\".   slot may even exist distribution error   components fixed case class MixARGaussian. subclass MixAR needs define method   get_edist.  signature(model = \"MixAR\") Issue error message stop. method invoked subclasses MixAR       defined method get_edist.       error.  signature(model = \"MixARGaussian\") Return object representing fact error       distributions components MixARGaussian objects       standard normal. signature(model = \"MixARgen\") Return object representing error distributions       components MixARgen objects. distributions       necessarilly objects.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/initialize-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function initialize in package mixAR — initialize-methods","title":"Methods for function initialize in package mixAR — initialize-methods","text":"Methods function initialize package mixAR.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/initialize-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function initialize in package mixAR — initialize-methods","text":"methods internal use user-level function   new() create objects corresponding classes.    creation objects class examples can found   description corresponding class. signature(.Object = \"MixAR\") Objects class MixAR created since virtual.   method called initialisation methods non-virtual   subclasses MixAR set slots. signature(.Object = \"raggedCoef\") Creates objects class \"raggedCoef\". signature(.Object = \"MixARgen\") Creates objects class MixARgen.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/inner.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalised inner product and methods for class ","title":"Generalised inner product and methods for class ","text":"Generalised inner product methods class MixComp. methods   MixComp provide convenient computing MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/inner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalised inner product and methods for class ","text":"","code":"inner(x, y, star = \"*\", plus = .mplus)"},{"path":"https://geobosh.github.io/mixAR/reference/inner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalised inner product and methods for class ","text":"x first argument. y second argument. star function apply pairs elements x y,     default multiplication, usual inner product. plus function apply combine results pairs,     default  addition, usual inner product.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/inner.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalised inner product and methods for class ","text":"inner computes generalised inner product x . y,   multiplication summation can replaced functions. default method inner applies star   corresponding pairs elements combines plus.   recycling, x y different   lengths, error raised.  elements x y   accessed \"[[\". plus n-ar operation.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/inner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalised inner product and methods for class ","text":"inner product, type result depends arguments","code":""},{"path":"https://geobosh.github.io/mixAR/reference/inner.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Generalised inner product and methods for class ","text":"Methods inner product \"MixComp\" object   vector similar product matrix vector   comply conventions class \"MixComp\". reason   described help page class   \"MixComp\", along methods functions   operators applied \"MixComp\" objects.  signature(x = \"\", y = \"\", star = \"\", plus = \"\") default method, see section Details. signature(x = \"MixComp\", y = \"missing\", star = \"missing\", plus = \"missing\") see \"MixComp\". signature(x = \"MixComp\", y = \"numeric\", star = \"missing\", plus = \"missing\") see \"MixComp\". signature(x = \"numeric\", y = \"MixComp\", star = \"missing\", plus = \"missing\") see \"MixComp\". signature(x = \"MixComp\", y = \"numeric\", star = \"\", plus = \"\") see \"MixComp\". signature(x = \"MixComp\", y = \"numeric\", star = \"\", plus = \"missing\") see \"MixComp\".","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/inner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalised inner product and methods for class ","text":"","code":"inner(1:3, 2:4) # [1] 20 #> [1] 20 class(inner(1:3, 2:4)) # [1] \"integer\" #> [1] \"integer\" ## compare to: 1:3 %*% 2:4        # 20, but (1,1)-matrix #>      [,1] #> [1,]   20 class(1:3 %*% 2:4) # matrix #> [1] \"matrix\" \"array\""},{"path":"https://geobosh.github.io/mixAR/reference/isStable.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a MixAR model is stable — isStable","title":"Check if a MixAR model is stable — isStable","text":"Checks MixAR model stable. also second   order stationarity condition.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/isStable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a MixAR model is stable — isStable","text":"","code":"isStable(x)"},{"path":"https://geobosh.github.io/mixAR/reference/isStable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a MixAR model is stable — isStable","text":"x model","code":""},{"path":"https://geobosh.github.io/mixAR/reference/isStable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if a MixAR model is stable — isStable","text":"component MixAR model corresponds stable   autoregression model, MixAR model also stable. However,   MixAR model may stable also components   correspond integrated explosive AR models, see references.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/isStable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a MixAR model is stable — isStable","text":"True model stable (second order stationary), FALSE otherwise.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/isStable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check if a MixAR model is stable — isStable","text":"Boshnakov GN (2011). “First Second Order Stationarity Random Coefficient Models.” Linear Algebra Appl., 434(2), 415--423. doi: 10.1016/j.laa.2010.09.023 . Wong CS, Li WK (2000). “mixture autoregressive model.” J. R. Stat. Soc., Ser. B, Stat. Methodol. , 62(1), 95-115.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/isStable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a MixAR model is stable — isStable","text":"","code":"isStable(exampleModels$WL_I) #> [1] TRUE isStable(exampleModels$WL_II) #> [1] TRUE"},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"A posteriori relabelling of a Markov chain — label_switch","title":"A posteriori relabelling of a Markov chain — label_switch","text":"Takes output MCMC simulation parameters mixture,   detects whether labels switch occured sampling, using   method Celeux (2000).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A posteriori relabelling of a Markov chain — label_switch","text":"","code":"label_switch(x, m)"},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A posteriori relabelling of a Markov chain — label_switch","text":"x output MCMC sampling mixture. matrix,     column corresponds one component mixture. m number observations sample used     initialise algorithm. m~100 recommended.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A posteriori relabelling of a Markov chain — label_switch","text":"Function can directly executed x one   mix_weights, scale, precision, shift   mu bayes_mixAR output.  ARcoeff input   , element list may used.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A posteriori relabelling of a Markov chain — label_switch","text":"list 2: x input matrix, adjusted labels true_perm \"true\" permutation iteration.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A posteriori relabelling of a Markov chain — label_switch","text":"Celeux G (2000). Bayesian Inference Mixture: Label Switching Problem.. Payne R., Green P. (eds) COMPSTAT. Physica, Heidelberg.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A posteriori relabelling of a Markov chain — label_switch","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"A posteriori relabelling of a Markov chain — label_switch","text":"absolute choice x obtain   \"true\" permutation given point. User subject make   suitable choice, given output MCMC.","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/label_switch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A posteriori relabelling of a Markov chain — label_switch","text":"","code":"model <- new(\"MixARGaussian\",              prob   = exampleModels$WL_At@prob,      # c(0.5, 0.5)              scale  = exampleModels$WL_At@scale,     # c(1, 2)                      arcoef = exampleModels$WL_At@arcoef@a ) # list(-0.5, 1.1)  y <- mixAR_sim(model, n = 300, init = rep(0, which.max(model@order)))  ## just examples, use larger numbers in practice nsim <- 30   # 200 burnin <- 10  # 100 x <- bayes_mixAR(y, model, fix_shift = FALSE, tau = c(.15, .25),               nsim = nsim, burnin = burnin)  label_switch(x$mix_weights, m = 5) #> $x #>            [,1]      [,2] #>  [1,] 0.4857270 0.5142730 #>  [2,] 0.4221668 0.5778332 #>  [3,] 0.4457839 0.5542161 #>  [4,] 0.4616305 0.5383695 #>  [5,] 0.4520209 0.5479791 #>  [6,] 0.4828118 0.5171882 #>  [7,] 0.4357387 0.5642613 #>  [8,] 0.4152270 0.5847730 #>  [9,] 0.4550276 0.5449724 #> [10,] 0.4846237 0.5153763 #> [11,] 0.4842792 0.5157208 #> [12,] 0.4987070 0.5012930 #> [13,] 0.4680085 0.5319915 #> [14,] 0.4628079 0.5371921 #> [15,] 0.4750042 0.5249958 #> [16,] 0.4486247 0.5513753 #> [17,] 0.4785073 0.5214927 #> [18,] 0.4975636 0.5024364 #> [19,] 0.4573973 0.5426027 #> [20,] 0.4971300 0.5028700 #>  #> $true_perm #>       [,1] [,2] #>  [1,]    2    1 #>  [2,]    2    1 #>  [3,]    2    1 #>  [4,]    2    1 #>  [5,]    2    1 #>  [6,]    2    1 #>  [7,]    2    1 #>  [8,]    2    1 #>  [9,]    1    2 #> [10,]    2    1 #> [11,]    2    1 #> [12,]    2    1 #> [13,]    1    2 #> [14,]    2    1 #> [15,]    1    2 #>"},{"path":"https://geobosh.github.io/mixAR/reference/lastn.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the last n elements of a vector — lastn","title":"Extract the last n elements of a vector — lastn","text":"Extract last n elements vector","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lastn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the last n elements of a vector — lastn","text":"","code":"lastn(x, n)"},{"path":"https://geobosh.github.io/mixAR/reference/lastn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the last n elements of a vector — lastn","text":"x vector n number elements keep, integer","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lastn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the last n elements of a vector — lastn","text":"know function tail() one,   two functions completely equivalent (tail   generic). n equal length(x), x returned .   n equal zero negative, length zero vector   returned. error n larger length(x).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lastn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the last n elements of a vector — lastn","text":"vector containing last n elements x,   see Details","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/lastn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the last n elements of a vector — lastn","text":"","code":"lastn(1:10, 3) # 8:10 #> [1]  8  9 10 lastn(letters, 5) # \"v\" \"w\" \"x\" \"y\" \"z\" #> [1] \"v\" \"w\" \"x\" \"y\" \"z\""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector of parameters of a MixAR model — lik_params","title":"Vector of parameters of a MixAR model — lik_params","text":"Give numeric vector containing non-redundant parameters MixAR   model form suitable use optimisation routines.    methods defined package mixAR generic function   described .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector of parameters of a MixAR model — lik_params","text":"","code":"lik_params(model)"},{"path":"https://geobosh.github.io/mixAR/reference/lik_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector of parameters of a MixAR model — lik_params","text":"model MixAR model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector of parameters of a MixAR model — lik_params","text":"lik_params gives parameters MixAR model numeric   vector. generic function.  Parameters common MixAR models   arranged described . parameters error   distributions contain parameters .  Methods   sub-classes additional parameters append   common parameters. \\(k\\) number components \\(\\pi_i\\)   probability associated \\(\\)th component,   parameters put vector follows: component probabilities, \\(\\pi_1,\\ldots,\\pi_{k-1}\\),       (note: \\(\\pi_{k}\\) included) scales, \\(\\sigma_1,\\ldots,\\sigma_{k}\\), shifts, \\(\\mu_1,\\ldots,\\mu_{k}\\), AR coefficients 1st component, AR coefficients 2nd component, ... AR coefficients \\(k\\)th component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector of parameters of a MixAR model — lik_params","text":"numeric vector containing parameters except probability   associated last component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vector of parameters of a MixAR model — lik_params","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vector of parameters of a MixAR model — lik_params","text":"probability associated \\(k\\)th component omitted   redundant. makes possible try unconstrained   optimisation though likely give useful results since   restrictions probabilities.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Vector of parameters of a MixAR model — lik_params","text":"signature(model = \"MixAR\")  signature(model = \"MixARgen\")","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Give natural limits for parameters of a MixAR model. — lik_params_bounds","title":"Give natural limits for parameters of a MixAR model. — lik_params_bounds","text":"Give natural lower upper limits parameters MixAR   model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give natural limits for parameters of a MixAR model. — lik_params_bounds","text":"","code":"lik_params_bounds(model)"},{"path":"https://geobosh.github.io/mixAR/reference/lik_params_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give natural limits for parameters of a MixAR model. — lik_params_bounds","text":"model MixAR model","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params_bounds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Give natural limits for parameters of a MixAR model. — lik_params_bounds","text":"function gives crude limits:   probabilities components 0 1,   standard deviations components non-negative.   parameters limits   \\((-\\infty,\\infty)\\). restrictions, e.g.   sum probabilities less equal 1     autoregression coefficients normally restricted   particular region, indicated returned value.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/lik_params_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give natural limits for parameters of a MixAR model. — lik_params_bounds","text":"list two components describing limits parameters.   order parameters one returned lik_params. lower lower limits, numeric vector upper upper limits, numeric vector","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/make_fcond_lik-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a function for computation of conditional likelihood — make_fcond_lik-methods","title":"Create a function for computation of conditional likelihood — make_fcond_lik-methods","text":"Create function computation conditional likelihood   MixAR models given time series.  methods generic   function defined package mixAR described .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/make_fcond_lik-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a function for computation of conditional likelihood — make_fcond_lik-methods","text":"","code":"make_fcond_lik(model, ts)"},{"path":"https://geobosh.github.io/mixAR/reference/make_fcond_lik-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a function for computation of conditional likelihood — make_fcond_lik-methods","text":"model MixAR model ts time series","code":""},{"path":"https://geobosh.github.io/mixAR/reference/make_fcond_lik-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a function for computation of conditional likelihood — make_fcond_lik-methods","text":"returned value function, say f(x), whose argument   numeric vector parameters arrangement   lik_params, computes conditional   loglikelihood.   f can given optimisation routines. Argument model object inheriting MixAR   determines structure MixAR model function,   f, creates. , properties model,   number components, AR order, distribution noise   components fixed f created numeric   values parameters changed calls .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/make_fcond_lik-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a function for computation of conditional likelihood — make_fcond_lik-methods","text":"function one argument, parameters MixAR model   numeric vector arrangement lik_params,   computes conditional loglikelihood","code":""},{"path":"https://geobosh.github.io/mixAR/reference/make_fcond_lik-methods.html","id":"todo","dir":"Reference","previous_headings":"","what":"Todo","title":"Create a function for computation of conditional likelihood — make_fcond_lik-methods","text":"environment returned function contains time series   model object (initially argument model, later model   used last call f). , things can extracted   f.   necessary create convenience functions?","code":""},{"path":"https://geobosh.github.io/mixAR/reference/make_fcond_lik-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Create a function for computation of conditional likelihood — make_fcond_lik-methods","text":"signature(model = \"MixAR\", ts = \"numeric\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/marg_loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","title":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","text":"function implements method   Chib (1995)    Chib Jeliazkov (2001)  calculation   marginal loglikelihood mixture autoregressive model.   automatically finds high density values model parameters,   evaluates likelihood points.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/marg_loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","text":"","code":"marg_loglik(y, model, tau, nsim, prob_mod)"},{"path":"https://geobosh.github.io/mixAR/reference/marg_loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","text":"y time series (currently numeric vector). model object formal class MixAR, containing initial values     parameters. Currently available MixARGaussian objects     . tau tuning parameter Metropolis-Hasting move update     autoregressive parameters. nsim sample size evaluate highest density values. prob_mod currently output Choose_pk: proportion     times \"best model\" chosen.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/marg_loglik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","text":"nsim sample size evaluate highest density   values set parameters. example, choosing   nsim=1000 results 1000*(g+3) (1000 iterations   autoregressive component, plus 1000 mean scale parameters   mixing weights).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/marg_loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","text":"list containing following elements: marg_loglik value marginal loglikelihood. phi_hd set highest density autoregressive parameters. prec_hd set highest density precision parameters. mu_hd set highest density mean parameters. weig_hd set highest density mixing weights.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/marg_loglik.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","text":"Chib S (1995). “Marginal likelihood Gibbs output.” J. . Stat. Ass., 90(432), 1313-1321. Chib S, Jeliazkov (2001). “Marginal likelihood Metropolis-Hastings output.” J. . Stat. Ass., 96(453), 270-281.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/marg_loglik.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/marg_loglik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate marginal loglikelihood at high density points of a MAR model. — marg_loglik","text":"","code":"prob <- c(0.5, 0.5) sigma <- c(1, 2) arco <- list(-0.5, 1)  model <- new(\"MixARGaussian\", prob = prob, scale = sigma, arcoef = arco)  set.seed(1234) y <- mixAR_sim(model, 250, rep(0, max(model@order)), nskip = 100)  # data  nsim <- 10 # 50 marg_loglik(y, model, tau = c(.15, .25), nsim = nsim, 0.5) #> $marg_loglik #> [1] -541.8437 #>  #> $phi_hd #> $phi_hd[[1]] #> [1] -0.4470663 #>  #> $phi_hd[[2]] #> [1] 0.9891284 #>  #>  #> $prec_hd #> [1] 0.7085924 0.2737237 #>  #> $mu_hd #> [1]  0.04633408 -0.76579127 #>  #> $weig_hd #> [1] 0.4992028 0.5007972 #>"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal mixAR Functions — mixAR-internal","title":"Internal mixAR Functions — mixAR-internal","text":"Internal mixAR functions","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal mixAR Functions — mixAR-internal","text":"","code":"param_score_stdt(x, nu)"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal mixAR Functions — mixAR-internal","text":"nu ~~ TODO: describe argument. ~~ p ~~ TODO: describe argument. ~~ value ~~ TODO: describe argument. ~~ x ~~ TODO: describe argument. ~~ tau ~~ TODO: describe argument. ~~ etk ~~ TODO: describe argument. ~~ parscore ~~ TODO: describe argument. ~~ sigma ~~ TODO: describe argument. ~~ logpdf ~~ TODO: describe argument. ~~","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal mixAR Functions — mixAR-internal","text":"called user (cases just   waiting proper documentation written.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create MixAR objects — mixAR-methods","title":"Create MixAR objects — mixAR-methods","text":"Generic function methods creating MixAR objects.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create MixAR objects — mixAR-methods","text":"","code":"mixAR(template, coef, ..., filler = NA_real_)"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create MixAR objects — mixAR-methods","text":"template object used template new object, typically     inheriting \"MixAR\". Alternatively, missing numeric     vector specifying order MixAR model, see Details.  coef parameters new object list components     \"arcoef\", \"order\", \"prob\",     \"shift\", \"scale\".  ... arguments methods. filler value unspecified parameters, default NA_real_.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create MixAR objects — mixAR-methods","text":"mixAR provides alternative function new   specifying MixAR models. template numeric vector, taken specify AR order   model number mixture components. Gaussian MixAR   model created parameters filled initially NA's   updated values given coef. coef need   values parameters may missing altogether. NA's   suitable initialisation, suitable value can specified   filler. template MixAR object, new object   class template. new object set   initially copy template updated   parameters specified coef (maybe others   methods). principle, numeric parameters vectors length number   components MixAR model. convenience, single values   replicated number components. work, least one   component must specified completely, example order.   error parameters imply conflicting number components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Create MixAR objects — mixAR-methods","text":"signature(template = \"\")  signature(template = \"MixAR\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create MixAR objects — mixAR-methods","text":"","code":"mixAR(coef = list(prob = c(.5,.5), scale = c(1,2),                    arcoef = list(.5, 1.1), shift = c(0,0), order = c(1,1))) #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.5    0     1     1   0.5  #> Comp_2 0.5    0     2     1   1.1  #>  #> Distributions of the error components: #> \tstandard Gaussian #>   mixAR(template = c(1,1)) #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1  NA   NA    NA     1    NA  #> Comp_2  NA   NA    NA     1    NA  #>  #> Distributions of the error components: #> \tstandard Gaussian #>  mixAR(coef = list(order = c(1,1))) # same #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1  NA   NA    NA     1    NA  #> Comp_2  NA   NA    NA     1    NA  #>  #> Distributions of the error components: #> \tstandard Gaussian #>   m2 <- new(\"MixARGaussian\", order = c(3, 2, 1),           arcoef = matrix(c(1:3, c(1:2, 0), c(1, 0, 0)), nrow = 3, byrow = TRUE)) m2a <- mixAR(m2, list(prob = c(0.5, 0.25, 0.25))) show_diff(m2, m2a) #>        prob shift scale order ar_1 ar_2 ar_3 #> Comp_1  NA    0     0     3     0    0    0  #> Comp_2  NA    0     0     2     0    0       #> Comp_3  NA    0     0     1     0"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixture Autoregressive Models — mixAR-package","title":"Mixture Autoregressive Models — mixAR-package","text":"Model time series using mixture autoregressive (MAR)              models.  Implemented frequentist (EM) Bayesian              methods estimation, prediction model              evaluation. See Wong Li (2002)              <doi:10.1111/1467-9868.00222>, Boshnakov (2009)              <doi:10.1016/j.spl.2009.04.009>), extensive              references documentation.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mixture Autoregressive Models — mixAR-package","text":"Package mixAR provides functions modelling mixture   autoregressive (MixAR) models. S4 class \"MixARGaussian\" can   used error distributions components standard   Gaussian. class \"MixARgen\" admits arbitrary (well, within   reason) distributions error components. classes inherit   virtual class \"MixAR\". Estimation can done fit_mixAR.  Currently, EM   algorithm used estimation. \"MixARGaussian\" M-step EM algorithm reduces   system linear equations. \"MixARgen\" problem   substantially non-linear. implementation fairly general   currently optimised efficiency. specification error   distributions went several stages may still   reviewed. However, backward compatibility kept.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mixture Autoregressive Models — mixAR-package","text":"Georgi N. Boshnakov [aut, cre],   Davide Ravagli [aut] Maintainer: Georgi N. Boshnakov <georgi.boshnakov@manchester.ac.uk>","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mixture Autoregressive Models — mixAR-package","text":"Akinyemi MI (2013). Mixture autoregressive models: asymptotic properties application financial risk. Ph.D. thesis, Probability Statistics Group, School Mathematics, University Manchester. Boshnakov GN (2009). “Analytic expressions predictive distributions mixture autoregressive models.” Stat. Probab. Lett. , 79(15), 1704-1709. doi: 10.1016/j.spl.2009.04.009 . Boshnakov GN (2011). “First Second Order Stationarity Random Coefficient Models.” Linear Algebra Appl., 434(2), 415--423. doi: 10.1016/j.laa.2010.09.023 . Fong PW, Li WK, Yau CW, Wong CS (2007). “mixture vector autoregressive model.” Can. J. Stat. , 35(1), 135-150. Ravagli D, Boshnakov GN (2020). “Bayesian analysis mixture autoregressive models covering complete parameter space.” 2006.11041, https://arxiv.org/abs/2006.11041. Ravagli D, Boshnakov GN (2020). “Portfolio optimization mixture vector autoregressive models.” 2005.13396, https://arxiv.org/abs/2005.13396. Hossain (2012). Complete Bayesian analysis mixture time series models. Ph.D. thesis, Probability Statistics Group, School Mathematics, University Manchester. Wong CS (1998). Statistical inference nonlinear time series models. Ph.D. thesis, University Hong Kong, Hong Kong . Wong CS, Li WK (2000). “mixture autoregressive model.” J. R. Stat. Soc., Ser. B, Stat. Methodol. , 62(1), 95-115. Wong CS, Li WK (2001). “logistic mixture autoregressive model.” Biometrika , 88(3), 833-846. doi: 10.1093/biomet/88.3.833 . Wong CS, Li WK (2001). “mixture autoregressive conditional heteroscedastic model.” J. . Stat. Assoc. , 96(455), 982-995. doi: 10.1198/016214501753208645 .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mixture Autoregressive Models — mixAR-package","text":"","code":"## object 'exampleModels' contains a number of models for examples and testing names(exampleModels) #>  [1] \"WL_ibm\"     \"WL_A\"       \"WL_B\"       \"WL_I\"       \"WL_II\"      #>  [6] \"WL_ibm_gen\" \"WL_ibm_t3v\" \"WL_ibm_tf\"  \"WL_At\"      \"WL_Bt_1\"    #> [11] \"WL_Bt_2\"    \"WL_Bt_3\"    \"WL_Ct_1\"    \"WL_Ct_2\"    \"WL_Ct_3\"    exampleModels$WL_ibm #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob   shift scale   order ar_1   ar_2    #> Comp_1 0.5439   0    4.8227   2   0.6792  0.3208 #> Comp_2 0.4176   0    6.0082   2   1.6711 -0.6711 #> Comp_3 0.0385   0   18.1716   1   1.0000         #>  #> Distributions of the error components: #> \tstandard Gaussian #>   ## some of the models below are available in object 'exampleModels'; ## the examples here show how to create them from scratch mo_WLprob <- c(0.5439, 0.4176, 0.0385)              # model coefficients from Wong&Li mo_WLsigma <- c(4.8227, 6.0082, 18.1716) mo_WLar <- list(c(0.6792, 0.3208), c(1.6711, -0.6711), 1)  mo_WL <- new(\"MixARGaussian\", prob = mo_WLprob, scale = mo_WLsigma, arcoef = mo_WLar)                                          mo_WL_A <- new(\"MixARGaussian\"                         # WongLi, model A               , prob = c(0.5, 0.5)               , scale = c(5, 1)               , shift = c(0, 0)               , arcoef = list(c(0.5), c(1.1))               )  mo_WL_B <- new(\"MixARGaussian\"                         # WongLi, model B               , prob = c(0.75, 0.25)               , scale = c(5, 1)               , shift = c(0, 0)               , arcoef = list(c(0.5), c(1.4))               )                                          mo_WL_I <- new(\"MixARGaussian\"                          # WongLi, model I               , prob = c(0.4, 0.3, 0.3)               , scale = c(1, 1, 5)               , shift = c(0, 0, -5)               , arcoef = list(c(0.9, -0.6), c(-0.5), c(1.50, -0.74, 0.12))               )  mo_WL_II <- new(\"MixARGaussian\"                         # WongLi, model II                , prob = c(0.4, 0.3, 0.3)                , scale = c(1, 1, 5)                , shift = c(5, 0, -5)                , arcoef = list(c(0.9, -0.6), c(-0.7, 0), c( 0, 0.80))                )  ## MixAR models with arbitrary dist. of the components ## (user interface not finalized)  ## Gaussian mo_WLgen <- new(\"MixARgen\", prob = mo_WLprob, scale = mo_WLsigma, arcoef = mo_WLar,                dist = list(dist_norm))  ## t_3 mo_WLt3v <- new(\"MixARgen\", prob = mo_WLprob, scale = mo_WLsigma, arcoef = mo_WLar,                dist = list(fdist_stdt(3, fixed = FALSE)))  ## t_20, t_30, t_40 (can be used to start estimation) mo_WLtf <- new(\"MixARgen\", prob = mo_WLprob, scale = mo_WLsigma, arcoef = mo_WLar,               dist = list(generator =                               function(par)                                   fn_stdt(par, fixed = FALSE), param = c(20, 30, 40)))  ## data(ibmclose, package = \"fma\")  # for `ibmclose'  ## The examples below are quick but some of them are marked as 'not run' ## to avoid cumulative time of more than 5s on CRAN.  ## fit a MAR(2,2,1) model a0a <- fit_mixAR(as.numeric(fma::ibmclose), c(2, 2, 1), crit = 1e-4) ## same with 2 sets of automatically generated initial values. # \\donttest{ a0b <- fit_mixAR(as.numeric(fma::ibmclose), c(2, 2, 1), 2, crit = 1e-4) # }  ## fix the shift parameters: a1a <- fit_mixAR(as.numeric(fma::ibmclose), c(2, 2, 1), fix = \"shift\", crit = 1e-4) ## ... with 3 sets of automatically generated initial values. # \\donttest{ a1b <- fit_mixAR(as.numeric(fma::ibmclose), c(2, 2, 1), 3, fix = \"shift\", crit = 1e-4) # }  # \\donttest{ ## specify the model using a MixAR model object a1c <- fit_mixAR(as.numeric(fma::ibmclose), a1a$model, init = a0a$model, fix = \"shift\",            crit = 1e-4)  ## fit a model like mo_WL using as initial values 2 automatically generated sets. a2 <- fit_mixAR(as.numeric(fma::ibmclose), mo_WL, 2, fix = \"shift\", permute = TRUE,            crit = 1e-4) # }  moT_B3 <- new(\"MixARgen\"                , prob = c(0.3, 0.3, 0.4)                , scale = c(2, 1, 0.5)                , shift = c(5, -5, 0)                , arcoef = list(c(0.5, 0.24), c(-0.9), c(1.5, -0.74, 0.12))                                         # t4, t4, t10                , dist = distlist(\"stdt\", c(4,10), fixed = c(FALSE, TRUE), tr = c(1, 1, 2))                )  moT_C1 <- new(\"MixARgen\"               , prob = c(0.3, 0.3, 0.4)               , scale = c(2, 1, 0.5)               , shift = c(5, -5, 0)               , arcoef = list(c(0.5, 0.24), c(-0.9), c(1.5, -0.74, 0.12))                                         # t4, t7, N(0,1)               , dist = distlist(c(\"stdt\", \"stdt\", \"stdnorm\"), c(4,7))               )  ## demonstrate reuse of existing models exampleModels$WL_Bt_1 #> An object of class \"MixARgen\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2  ar_3 #> Comp_1 0.3    5   2.0     2    0.5  0.24      #> Comp_2 0.3   -5   1.0     1   -0.9            #> Comp_3 0.4    0   0.5     3    1.5 -0.74 0.12 #>  #> Distributions of the error components: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 6 df #> \tComponent 3: Student t with 10 df #>  moT_C2 <- new(\"MixARgen\"               , model = exampleModels$WL_Bt_1               , dist = distlist(c(\"stdt\", \"stdt\", \"stdnorm\"), c(4,7))  # t4, t7, N(0,1)               ) moT_C3 <- new(\"MixARGaussian\", model = exampleModels$WL_Bt_1 )"},{"path":"https://geobosh.github.io/mixAR/reference/mixARExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation experiments with MixAR models — mixARExperiment","title":"Simulation experiments with MixAR models — mixARExperiment","text":"Perform simulation experiments MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation experiments with MixAR models — mixARExperiment","text":"","code":"mixARExperiment(model, imodel = NULL, simargs = NULL, estargs = NULL, fix, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/mixARExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation experiments with MixAR models — mixARExperiment","text":"model underlying model, object inheriting \"MixAR\",   see 'Details'. imodel initial model,  object inheriting \"MixAR\", see 'Details'. simargs additional arguments simulation function,     list, see 'Details'. estargs additional arguments estimation function,     list, see 'Details'. fix arguments keep fixed estimation; currently     fix = \"shift\" shift parameters kept fixed, otherwise     parameters estimated. ... additional arguments pass simuExperiment.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARExperiment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation experiments with MixAR models — mixARExperiment","text":"mixARExperiment wrapper simuExperiment. simulation function mixARsim estimation function   fit_mixAR. simulation function gets model   first argument. first argument estimation function   imodel, supplied, model otherwise.   appropriate defaults arguments also supplied. Arguments   simargs estargs needed override   defaults. fix = \"shift\", shifts components estimated   kept fixed. may useful fitting model   differenced series, example. mixARExperiment sets keep summary_fun   defaults (currently mixAR:::.fsumA latter).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation experiments with MixAR models — mixARExperiment","text":"list one elements, depending arguments ... passed simuExperiment. Summary summary experiment, default sample means     standard deviations estimates. list MixAR models. Raw list estimated models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARExperiment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulation experiments with MixAR models — mixARExperiment","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARExperiment.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulation experiments with MixAR models — mixARExperiment","text":"initial version function, arguments may   change.  Additional elements may made available returned   value, refer name, numeric index.","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mixARExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation experiments with MixAR models — mixARExperiment","text":"","code":"exampleModels$WL_II #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob shift scale order ar_1 ar_2 #> Comp_1 0.4    5     1     2    0.9 -0.6 #> Comp_2 0.3    0     1     2   -0.7  0.0 #> Comp_3 0.3   -5     5     2    0.0  0.8 #>  #> Distributions of the error components: #> \tstandard Gaussian #>   set.seed(1234) n = 20 # toy size N = 5 # toy number of simulations mixARExperiment(exampleModels$WL_II, N = N, estargs = list(crit = 1e-4)) #> $Summary #> $Summary$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3882967  5.0028946 1.021856   2    0.89954799 -0.60315169 #> Comp_2 0.3090158 -0.0128337 1.004509   2   -0.71928615  0.01317786 #> Comp_3 0.3026876 -5.0170104 4.836239   2    0.01190528  0.75452662 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Summary$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale      order ar_1       ar_2       #> Comp_1 0.05378105 0.1790953 0.10561787   2   0.02816997 0.01971022 #> Comp_2 0.04804369 0.1224686 0.09446427   2   0.01197268 0.03195056 #> Comp_3 0.02473113 0.5024960 0.30765087   2   0.03203031 0.04304680 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Summary$meanUnswitched #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3026876 -5.0170104 4.836239   2    0.01190528  0.75452662 #> Comp_2 0.3090158 -0.0128337 1.004509   2   -0.71928615  0.01317786 #> Comp_3 0.3882967  5.0028946 1.021856   2    0.89954799 -0.60315169 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Summary$sdUnswitched #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale      order ar_1       ar_2       #> Comp_1 0.02473113 0.5024960 0.30765087   2   0.03203031 0.04304680 #> Comp_2 0.04804369 0.1224686 0.09446427   2   0.01197268 0.03195056 #> Comp_3 0.05378105 0.1790953 0.10561787   2   0.02816997 0.01971022 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  mixARExperiment(exampleModels$WL_II, N = N, raw = TRUE, estargs = list(crit = 1e-4)) #> $Summary #> $Summary$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2         #> Comp_1 0.3991983  4.96425073 0.9785516   2    0.90412861 -0.601076230 #> Comp_2 0.2900017  0.03637379 0.9309377   2   -0.70624513  0.005645736 #> Comp_3 0.3108000 -5.38749282 4.9194780   2    0.01698498  0.830893484 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Summary$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale      order ar_1       ar_2       #> Comp_1 0.03730998 0.1166968 0.11403847   2   0.00884525 0.03419575 #> Comp_2 0.03688219 0.1416702 0.06994315   2   0.01909112 0.01423444 #> Comp_3 0.04579375 0.5929002 0.39136839   2   0.05757455 0.06553143 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Summary$meanUnswitched #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2         #> Comp_1 0.3108000 -5.38749282 4.9194780   2    0.01698498  0.830893484 #> Comp_2 0.2900017  0.03637379 0.9309377   2   -0.70624513  0.005645736 #> Comp_3 0.3991983  4.96425073 0.9785516   2    0.90412861 -0.601076230 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Summary$sdUnswitched #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale      order ar_1       ar_2       #> Comp_1 0.04579375 0.5929002 0.39136839   2   0.05757455 0.06553143 #> Comp_2 0.03688219 0.1416702 0.06994315   2   0.01909112 0.01423444 #> Comp_3 0.03730998 0.1166968 0.11403847   2   0.00884525 0.03419575 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $Raw #> $Raw[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2        #> Comp_1 0.4080660  5.06510556 0.9920789   2    0.90623811 -0.62284318 #> Comp_2 0.3160655 -0.03767196 0.8907312   2   -0.70256045 -0.00501553 #> Comp_3 0.2758685 -5.36236312 4.8943008   2    0.03608485  0.80581955 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2         #> Comp_1 0.4050840  5.0944308 1.122035   2    0.90916115 -0.594592459 #> Comp_2 0.2949899  0.2607166 1.033626   2   -0.69533994  0.007404252 #> Comp_3 0.2999261 -6.2292221 5.171451   2    0.09393146  0.912366961 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2          #> Comp_1 0.4452899  4.8965489 0.910946   2    0.90080237 -0.5626733638 #> Comp_2 0.2367076 -0.0150589 0.888185   2   -0.70188135  0.0005465691 #> Comp_3 0.3180025 -4.6585352 5.185955   2    0.03536553  0.8193486283 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2         #> Comp_1 0.3959729  4.95125605 0.8273562   2    0.89071347 -0.577854481 #> Comp_2 0.3298400  0.07896581 0.9729592   2   -0.69198674 -0.004230706 #> Comp_3 0.2741871 -5.05927494 5.0946720   2   -0.04690491  0.874691463 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1       ar_2       #> Comp_1 0.3415786  4.8139123 1.0403412   2    0.9137280 -0.6474177 #> Comp_2 0.2724055 -0.1050826 0.8691871   2   -0.7394572  0.0295241 #> Comp_3 0.3860159 -5.6280687 4.2510102   2   -0.0335520  0.7422408 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  mixARExperiment(exampleModels$WL_II, N = N, raw = TRUE,     simargs = list(n = n), estargs = list(crit = 1e-4) ) #> $Summary #> $Summary$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2        #> Comp_1 0.3691747  4.94049495 0.5424302   2    0.87460652 -0.59833037 #> Comp_2 0.3002207 -0.02115004 0.2831587   2   -0.69420027 -0.01061726 #> Comp_3 0.3306046 -7.10692678 1.6750352   2    0.02235797  0.88243256 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Summary$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift     scale     order ar_1       ar_2       #> Comp_1 0.0870959 0.5538342 0.1621501   2   0.06056077 0.05125050 #> Comp_2 0.1035992 1.3167560 0.2281381   2   0.07110076 0.02435567 #> Comp_3 0.1563916 6.1293510 2.0237210   2   0.48342231 0.25101835 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Summary$meanUnswitched #> [1] NA #>  #> $Summary$sdUnswitched #> [1] NA #>  #>  #> $Raw #> $Raw[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale        order ar_1       ar_2         #> Comp_1 0.3318619  4.7445112 6.714888e-01   2    0.7896087 -0.637257969 #> Comp_2 0.1666667  0.4144435 5.024296e-15   2   -0.6567292 -0.005871863 #> Comp_3 0.5014715 -7.6204700 2.536809e+00   2   -0.5898504  0.549462614 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift     scale     order ar_1       ar_2        #> Comp_1 0.2718974 5.7142529 0.4723228   2    0.8872741 -0.62303718 #> Comp_2 0.3547748 0.5607002 0.5131166   2   -0.7095910  0.02428491 #> Comp_3 0.3733278 0.6456413 4.7808811   2    0.2683984  0.83179455 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale        order ar_1       ar_2        #> Comp_1 0.4118738   5.0325194 7.109825e-01   2    0.9122396 -0.53648642 #> Comp_2 0.4214595   0.3539875 5.124229e-01   2   -0.6433690 -0.02979583 #> Comp_3 0.1666667 -16.4566060 3.706660e-15   2    0.6800289  1.12554827 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale        order ar_1       ar_2        #> Comp_1 0.4971034  5.0281088 5.497379e-01   2    0.9432734 -0.54971515 #> Comp_2 0.3362300  0.9099383 2.545710e-01   2   -0.6489908 -0.03750718 #> Comp_3 0.1666667 -6.4161578 4.381280e-15   2   -0.2339274  1.13927098 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift     scale     order ar_1        ar_2         #> Comp_1 0.3331372  4.183083 0.3076192   2    0.84063684 -0.645155144 #> Comp_2 0.2219724 -2.344820 0.1356830   2   -0.81232139 -0.004196316 #> Comp_3 0.4448904 -5.687041 1.0574859   2   -0.01285965  0.766086370 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_BIC.html","id":null,"dir":"Reference","previous_headings":"","what":"BIC based model selection for MixAR models — mixAR_BIC","title":"BIC based model selection for MixAR models — mixAR_BIC","text":"BIC calculations mixture autoregressive models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_BIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BIC based model selection for MixAR models — mixAR_BIC","text":"","code":"mixAR_BIC(y, model, fix = NULL, comp_loglik = TRUE, index) BIC_comp(x, y)"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_BIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BIC based model selection for MixAR models — mixAR_BIC","text":"y time series. model model calculate BIC, object inheriting     class MixAR. Alternatively, output list     fit_mixAR. fix fix = \"shift\" shift parameters included     calculation BIC. Default NULL, .e. shift parameters     included. comp_loglik loglikelihood calculated?  Default     TRUE. FALSE model output     fit_mixAR, loglikelihood recalculated. index Discard first 1:index observations. missing,     index set largest AR order. x list containing combination MixAR objects /    output lists fit_mixAR.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_BIC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BIC based model selection for MixAR models — mixAR_BIC","text":"mixAR_BIC calculates BIC criterion given MixAR   object respect specified time series. index specified, least equal   largest autoregressive order. function calculates BIC last   (index + 1):n data points. BIC_comp calculates value BIC models listed   x respect specified time series y. distributions components contain estimated parameters,   number included number parameters   calculation BIC.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_BIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BIC based model selection for MixAR models — mixAR_BIC","text":"comp_loglik = TRUE, function calculates BIC based   given model, data index.   comp_loglik = FALSE model output fit_mixAR, returns object vallogf list.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_BIC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BIC based model selection for MixAR models — mixAR_BIC","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_BIC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BIC based model selection for MixAR models — mixAR_BIC","text":"","code":"model1 <- new(\"MixARGaussian\", prob = c(0.5, 0.5), scale = c(1, 2),               arcoef = list(-0.5, 1.1))  model2 <- new(\"MixARGaussian\", prob = c(0.5, 0.3, 0.2), scale = c(1, 3, 8),               arcoef = list(c(-0.5, 0.5), 1, 0.4))  set.seed(123) y <- mixAR_sim(model1, 400, c(0, 0, 0), nskip = 100)  mixAR_BIC(y, model1) #> [1] 1770.964  model_fit1 <- fit_mixAR(y, model1) model_fit2 <- fit_mixAR(y, model2, crit = 1e-4)  mixAR_BIC(y, model_fit1) #> [1] 1766.659 mixAR_BIC(y, model_fit2) #> [1] 1782.464  BIC_comp(list(model1, model2, model_fit1, model_fit2), y) #> Best model:  1 1  #> [1] 1770.964 2151.311 1766.659 1782.464  mixAR_BIC(y, model_fit1, index = 20) #> [1] 3.439512 mixAR_BIC(y, model_fit2, index = 20) #> [1] 3.456183"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_cond_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"The E-step of the EM algorithm for MixAR models — mixAR_cond_probs","title":"The E-step of the EM algorithm for MixAR models — mixAR_cond_probs","text":"Compute conditional probabilities E-step EM   algorithm MixAR models. Internal function.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_cond_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The E-step of the EM algorithm for MixAR models — mixAR_cond_probs","text":"","code":"mixAR_cond_probs(model, y, indx = NULL)"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_cond_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The E-step of the EM algorithm for MixAR models — mixAR_cond_probs","text":"model object sub-class \"MixAR\". y time series, numeric vector. indx indices elements compute residuals.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_cond_probs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The E-step of the EM algorithm for MixAR models — mixAR_cond_probs","text":"essentially E-step MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_cond_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The E-step of the EM algorithm for MixAR models — mixAR_cond_probs","text":"conditional probabilities, object class \"MixComp\".","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic checks for mixture autoregressive models — mixAR_diag","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"Perform diagnostic checks tests given MixAR   object respect given time series.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"","code":"# S3 method for MixAR tsdiag(object, gof.lag = NULL, y, ask = interactive(), ...,         plot = interactive(), std.resid = FALSE)  mixAR_diag(model, y, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"model,object model perform checks, object class     MixAR. model can also output list     fit_mixAR. gof.lag Goodness fit lag(s) Ljung-Box tests. Vector containing     one positive integers. max(gof.lag) maximal     lag acf pacf plots. many lags compute acf pacf? default     lag.max acf.  y time series, currently numeric vector. ask TRUE, ask (using menu) plot present. Otherwise     just plot selected plots. ask ignored one plot      selected argument plot. plot TRUE, default, produce diagnostic plots.     FALSE produce plots. Otherwise, numeric vector     integers defining subset plots consider, see Details. std.resid TRUE standardise ordinary residuals using     conditional standard deviations. NOTE:  default     currently FALSE may soon changed TRUE.  ... mixAR_diag, passed tsdiag.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"recommended use tsdiag.  mixAR_diag   essentially deprecated still compatibility old   code. Moreover, tsdiag method flexible.   advantage mixAR_diag accepts also list   argument model equivalent calling tsdiag   object = model$model. function calculates several types residuals, provides   diagnostic plots , returns numerical results.   following choices currently available: ACF/PACF residuals, ACF/PACF U_residuals, ACF/PACF tau_residuals, ACF/Histogram tau_residuals. interactive sessions user presented menu select   plot(s) available ones. choice can restricted   subset giving argument plot vector integers.   useful select particular plot, somethinng like   plot = 2 call tsdiag.  plot used   index vector, plot = -1 remove first item   listed offered alternatives. Transformations data performed, described Smith   (1985). Four types residuals computed: ordinary residuals difference (possibly scaled) observed values point       predictions. U_residuals/PIT residuals probability integral transform data using CDF       conditional distributions implied fitted model.  good       model resemble IID sequence uniformly distributed       (0,1). V_residuals set transformed U_residuals quantile function       standard normal distribution (qnorm).  good       model resemble IID sequence N(0,1).  tau_residuals residuals calculated component specific residual       e_tk divided corresponding scale sigma_k,       according component y_t largest density.        correct model specification, jointly       Normal. Shapiro-Wilk test performed set residual       assess hypothesis.  applied V- tau-residuals.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"returns invisibly list class \"tsdiagMixAR\", currently   containing following components: residuals ordinary residuals, U_residuals see Details, V_residuals see Details, tau_residuals see Details, BIC value BIC criterion, number. component, except BIC, list containing residuals   component value, Ljung-Box test \"Ljung-Box\"   possibly tests suitable corresponding type   residuals.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"Smith JQ (1985). “Diagnostic checks non-standard time series models.” Journal Forecasting, 4(3), 283-291. doi: 10.1002/.3980040305 , https://onlinelibrary.wiley.com/doi/pdf/10.1002/.3980040305, https://onlinelibrary.wiley.com/doi/abs/10.1002/.3980040305. Wong CS, Li WK (2000). “mixture autoregressive model.” J. R. Stat. Soc., Ser. B, Stat. Methodol. , 62(1), 95-115.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"Davide Ravagli Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"function used diagnostic checking MixARGaussian   objects .","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_diag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostic checks for mixture autoregressive models — mixAR_diag","text":"","code":"model1 <- new(\"MixARGaussian\", prob = c(0.5, 0.5), scale = c(1, 2),               arcoef = list(-0.5, 1.1)) set.seed(123) y <- mixAR_sim(model1, 400, c(0,0,0), nskip = 100)   fit1 <- fit_mixAR(y, model1) d <- tsdiag(fit1$model, c(10, 20, 50), y) d #>  #>  --------------------------------------------------  #> Tests on the ordinary residuals #>  --------------------------------------------------  #> $`Ljung-Box` #>        df   p.value #> Lag_10 10 0.1363658 #> Lag_20 20 0.1693712 #> Lag_50 50 0.4213514 #>  #>  #>  --------------------------------------------------  #> Tests on the U_residuals #>  --------------------------------------------------  #> $`Ljung-Box` #>        df    p.value #> Lag_10 10 0.43658682 #> Lag_20 20 0.29918541 #> Lag_50 50 0.03460944 #>  #> $KS #>  #> \tOne-sample Kolmogorov-Smirnov test #>  #> data:  cdf #> D = 0.028344, p-value = 0.9057 #> alternative hypothesis: two-sided #>  #>  #>  #>  --------------------------------------------------  #> Tests on the V_residuals #>  --------------------------------------------------  #> $`Ljung-Box` #>        df    p.value #> Lag_10 10 0.68338359 #> Lag_20 20 0.47238093 #> Lag_50 50 0.06870134 #>  #> $`Shapiro-Wilk` #>  #> \tShapiro-Wilk normality test #>  #> data:  v #> W = 0.99784, p-value = 0.8928 #>  #>  #>  #>  --------------------------------------------------  #> Tests on the tau_residuals #>  --------------------------------------------------  #> $`Ljung-Box` #>        df   p.value #> Lag_10 10 0.8708327 #> Lag_20 20 0.9790725 #> Lag_50 50 0.6138649 #>  #> $`Shapiro-Wilk` #>  #> \tShapiro-Wilk normality test #>  #> data:  err2 #> W = 0.99563, p-value = 0.3328 #>  #>  ## This will put each plot in a separate file (mydiag01.pdf, ..., mydiag04.pdf) ## pdf(\"mydiag%02d.pdf\", onefile = FALSE) ## d <- tsdiag(fit1$model, c(10, 20, 50), y,  ask = FALSE) ## dev.off()"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from MixAR models — mixAR_sim","title":"Simulate from MixAR models — mixAR_sim","text":"Simulate MixAR models","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from MixAR models — mixAR_sim","text":"","code":"mixAR_sim(model, n, init, nskip = 100, flag = FALSE)  mixAny_sim(model, n, init, nskip=100, flag = FALSE,                   theta, galpha0, galpha, gbeta)"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from MixAR models — mixAR_sim","text":"model model simulate, object inheriting class MixAR. init initial values, numeric vector. n size simulated series. nskip number burn-values, see Details. flag TRUE return also regimes. theta ma coef, list. galpha0 alpha0[k], k=1,...,g. galpha garch alpha. gbeta garch beta.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from MixAR models — mixAR_sim","text":"mixAR_sim simulates series length nskip+n   returns last n values. mixAny_sim simulates MixAR model GARCH   innovations. mixAny_sim quick fix Shahadat needs   consolidation. vector init provides initial values   \\(t=...,-1,0\\). length must least equal maximal AR   order. longer, last max(model@order) elements   used.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from MixAR models — mixAR_sim","text":"numeric vector length n. flag = TRUE   attribute regimes containing z.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from MixAR models — mixAR_sim","text":"","code":"exampleModels$WL_ibm #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob   shift scale   order ar_1   ar_2    #> Comp_1 0.5439   0    4.8227   2   0.6792  0.3208 #> Comp_2 0.4176   0    6.0082   2   1.6711 -0.6711 #> Comp_3 0.0385   0   18.1716   1   1.0000         #>  #> Distributions of the error components: #> \tstandard Gaussian #>  ## simulate a continuation of BJ ibm data ts1 <- mixAR_sim(exampleModels$WL_ibm, n = 30, init = c(346, 352, 357), nskip = 0)  # a simulation based estimate of the 1-step predictive distribution # for the first date after the data. s1 <- replicate(1000, mixAR_sim(exampleModels$WL_ibm, n = 1, init = c(346, 352, 357),                        nskip = 0)) plot(density(s1))  # load ibm data from BJ ## data(ibmclose, package = \"fma\")  # overlay the 'true' predictive density. pdf1 <- mix_pdf(exampleModels$WL_ibm, xcond = as.numeric(fma::ibmclose)) curve(pdf1, add = TRUE, col = 'blue')   # estimate of 5% quantile of predictive distribution quantile(s1, 0.05) #>       5%  #> 347.3871   # Monte Carlo estimate of \"expected shortfall\" # (but the data has not been converted into returns...) mean(s1[ s1 <= quantile(s1, 0.05) ]) #> [1] 344.1838"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"Relabel the components of a MixAR model — mixAR_switch","title":"Relabel the components of a MixAR model — mixAR_switch","text":"Relabel components MixAR model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relabel the components of a MixAR model — mixAR_switch","text":"","code":"mixAR_switch(model, perm) mixAR_permute(model, perm)"},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relabel the components of a MixAR model — mixAR_switch","text":"model MixAR model perm permutation relabeling","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_switch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relabel the components of a MixAR model — mixAR_switch","text":"permutation identity permutation model returned   . Otherwise order components changed according   perm.  Basically, perm used index,   e.g. prob[perm], etc.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixAR_switch.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Relabel the components of a MixAR model — mixAR_switch","text":"Currently function reorders \"usual\"   components. Subclasses \"MixAR\" may contain parameters   (e.g. different error distributions). function may   appropriate .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARemFixedPoint.html","id":null,"dir":"Reference","previous_headings":"","what":"EM estimation for mixture autoregressive models — mixARemFixedPoint","title":"EM estimation for mixture autoregressive models — mixARemFixedPoint","text":"Fit mixture autoregressive model univariate time series using   EM algorithm.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARemFixedPoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM estimation for mixture autoregressive models — mixARemFixedPoint","text":"","code":"mixARemFixedPoint(y, model, est_shift = TRUE, crit = 1e-14,                    maxniter = 200, minniter = 10, verbose = FALSE)  mixARgenemFixedPoint(y, model, crit = 1e-14, maxniter = 200,                       minniter = 10, verbose = FALSE, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/mixARemFixedPoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM estimation for mixture autoregressive models — mixARemFixedPoint","text":"y univariate time series. model object class MixAR, mixture autoregressive model providing model     specifications initial values parameters. est_shift TRUE optimise also w.r.t. shift (constant) terms AR     components, FALSE keep shift terms fixed. crit stop iterations relative change     log-likelihood becomes smaller value. maxniter maximum number iterations. minniter minimum number iterations,  leat many                      iterations. ... arguments passed M-step                      optimiser. verbose print details optimisation.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARemFixedPoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EM estimation for mixture autoregressive models — mixARemFixedPoint","text":"mixARemFixedPoint mixARgenemFixedPoint estimate   MixAR models EM algorithm.  mixARemFixedPoint,   distribution components fixed Gaussian.   mixARgenemFixedPoint, distributions can, principle   arbitrary (well, point). Starting model, expectation maximisation steps   EM algorithm repeated convergence detected   maximum number iterations, maxniter exceeded. Currently convergence check basic---iterations stop   relative change log-likelihood last two   iterations smaller threshold value specified   crit least minniter iterations done. EM algorithm may converge slowly. additional iterations   use returned value another call function.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARemFixedPoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EM estimation for mixture autoregressive models — mixARemFixedPoint","text":"fitted model object inheriting \"MixAR\".","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARemFixedPoint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EM estimation for mixture autoregressive models — mixARemFixedPoint","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARemFixedPoint.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"EM estimation for mixture autoregressive models — mixARemFixedPoint","text":"function intended called directly user   (hence inconvenient name).","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mixARemFixedPoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EM estimation for mixture autoregressive models — mixARemFixedPoint","text":"","code":"## data(ibmclose, package = \"fma\") # ibm data from BJ  m0 <- exampleModels$WL_ibm m1 <- mixARemFixedPoint(fma::ibmclose, m0) m1a <- mixARemFixedPoint(fma::ibmclose, m1$model) show_diff(m1$model, m1a$model) #>        prob          shift         scale         order ar_1          #> Comp_1  3.837971e-07 -4.495386e-07  2.519267e-06   2    3.163565e-07 #> Comp_2 -3.149384e-07 -1.540680e-05 -5.260467e-07   2    4.774798e-08 #> Comp_3 -6.885865e-08  9.676023e-06  1.097473e-05   1   -3.288289e-08 #>        ar_2          #> Comp_1 -3.151401e-07 #> Comp_2 -2.032666e-08 #> Comp_3                mixARemFixedPoint(fma::ibmclose, m0, est_shift = FALSE) #> $model #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift scale     order ar_1      ar_2       #> Comp_1 0.54399212   0    4.801666   2   0.6827977  0.3182769 #> Comp_2 0.42196471   0    5.971484   2   1.6737008 -0.6761710 #> Comp_3 0.03404316   0   18.038309   1   0.9885533            #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $vallogf #> [1] -1209.927 #>   # \\donttest{ ## simulate a continuation of ibmclose, assuming m0 ts1 <- mixAR_sim(m0, n = 50, init = c(346, 352, 357), nskip = 0) m2a <- mixARemFixedPoint(ts1,       m0, est_shift = FALSE)$model m2b <- mixARemFixedPoint(diff(ts1), m0, est_shift = FALSE)$model # }"},{"path":"https://geobosh.github.io/mixAR/reference/mixARnoise_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate white noise series from a list of functions and vector of regimes — mixARnoise_sim","title":"Simulate white noise series from a list of functions and vector of regimes — mixARnoise_sim","text":"Simulate white noise series list functions vector   regimes. function used internally simulation  MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARnoise_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate white noise series from a list of functions and vector of regimes — mixARnoise_sim","text":"","code":"mixARnoise_sim(rdist, z)"},{"path":"https://geobosh.github.io/mixAR/reference/mixARnoise_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate white noise series from a list of functions and vector of regimes — mixARnoise_sim","text":"rdist list functions random number generation, see `Details'. z vector positive integers specifying 'regimes'.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARnoise_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate white noise series from a list of functions and vector of regimes — mixARnoise_sim","text":"length list rdist max(z),   z[[]] random number generator regime .   Alternatively, rdist length one,   generator used regimes. mixARnoise_sim returns vector, say y,   length z, y[] generated   z[[]].","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixARnoise_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate white noise series from a list of functions and vector of regimes — mixARnoise_sim","text":"numeric vector","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mixARnoise_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate white noise series from a list of functions and vector of regimes — mixARnoise_sim","text":"","code":"## MixAR with 2 components: N(0,1) and t_5 set.seed = 1234 z <- sample(2, size = 5, replace = TRUE) mixARnoise_sim(list(rnorm, function(n) rt(n, 5)), z) #> [1]  0.4952791 -1.6357424  0.6639916  0.9037336  0.1274709"},{"path":"https://geobosh.github.io/mixAR/reference/mixFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter time series with MixAR filters — mixFilter","title":"Filter time series with MixAR filters — mixFilter","text":"Filter time series MixAR filters, generic function   default method (currently).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter time series with MixAR filters — mixFilter","text":"","code":"mixFilter(x, coef, index, shift = 0, residual = FALSE, scale = 1)"},{"path":"https://geobosh.github.io/mixAR/reference/mixFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter time series with MixAR filters — mixFilter","text":"x time series coef filter coefficients index indices calculate filtered values. shift optional shifts (intercept) terms. residual FALSE (default) calculate ``predictions'', TRUE calculate     ``residuals''. scale optional scale factor(s), makes sense     residual=TRUE, corresponds scale     specification MixAR model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter time series with MixAR filters — mixFilter","text":"MixComp object","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixFilter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter time series with MixAR filters — mixFilter","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixFilter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Filter time series with MixAR filters — mixFilter","text":"signature(x = \"\", coef = \"\", index = \"\")  method simply prints error message stops. signature(x = \"numeric\", coef = \"raggedCoef\", index = \"numeric\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mixMstep.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions for estimation of MixAR models with Gaussian components — mixMstep","title":"Internal functions for estimation of MixAR models with Gaussian components — mixMstep","text":"Internal functions EM estimation MixAR models Gaussian components:     sums products crossproducts;     M-step MixAR estimation;     estimation autoregressive part model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixMstep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions for estimation of MixAR models with Gaussian components — mixMstep","text":"","code":"tauCorrelate(y, tau, order) tau2arcoef(y, tau, order, est_shift = TRUE) mixMstep(y, tau, order, index, est_shift = TRUE)"},{"path":"https://geobosh.github.io/mixAR/reference/mixMstep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions for estimation of MixAR models with Gaussian components — mixMstep","text":"y time series. tau conditional probabilties observations belong     components, MixComp object. order order MixAR model, numeric vector length number     mixture components. index indices observations include likelihood     calculations, typically (p+1):n, p     max(order) n=length(y). est_shift TRUE include shifts (intercepts) AR components, otherwise     set zero.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixMstep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal functions for estimation of MixAR models with Gaussian components — mixMstep","text":"mixMstep performs M-step estimation MixAR models   Gaussian components. tauCorrelate computes crossproducts needed EM estimation   MixAR models Gaussian components. tau2arcoef computes AR coefficients solving   Yule-Walker-type equations component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixMstep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal functions for estimation of MixAR models with Gaussian components — mixMstep","text":"mixMstep, MixAR model, object class MixARGaussian.   tauCorrelate, named list following components: Stau   Stauy  Stauyy  tau2arcoef,   list two components: shift shift (intercept) terms, numeric vector arcoef AR coefficients list, whose -th component contains     coefficients component (numeric vector)","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSARfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit mixture autoregressive models with seasonal AR parameters — mixSARfit","title":"Fit mixture autoregressive models with seasonal AR parameters — mixSARfit","text":"Provides estimation via EM-Algorithm mixture autoregressive models   including seasonal AR parameters.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSARfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit mixture autoregressive models with seasonal AR parameters — mixSARfit","text":"","code":"mixSARfit(y, model, est_shift = FALSE, tol = 10^-14)"},{"path":"https://geobosh.github.io/mixAR/reference/mixSARfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit mixture autoregressive models with seasonal AR parameters — mixSARfit","text":"y time series (currently numeric vector). model object class \"MixAR\" including seasonal components. est_shift missing FALSE, fix intercepts zero, otherwise     estimate . tol threshold stopping criterion.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSARfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit mixture autoregressive models with seasonal AR parameters — mixSARfit","text":"function works \"MixAR\" objects slot   arcoef class \"raggedCoefS\".","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSARfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit mixture autoregressive models with seasonal AR parameters — mixSARfit","text":"list 2: model object class \"MixAR\". estimated model. vallogf value loglikelihood function returned model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSARfit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit mixture autoregressive models with seasonal AR parameters — mixSARfit","text":"Davide Ravagli Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSARfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit mixture autoregressive models with seasonal AR parameters — mixSARfit","text":"","code":"ar1 <- list(c(0.5, -0.5), c(1.1, 0, -0.5)) ar12 <- list(0, c(-0.3, 0.1)) s = 12  rag <- new(\"raggedCoefS\", a = ar1, as = ar12, s = s)  model <- new(\"MixARGaussian\", prob = exampleModels$WL_A@prob, # c(0.5, 0.5)              scale = exampleModels$WL_A@scale,                # c(5, 1)              arcoef = rag)  set.seed(1234) y <- mixAR_sim(model, n = 100, init = rep(0, 24))  mixSARfit(y, model) #> $model #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob      shift     scale    order ar_1      ar_2        ar_3       #> Comp_1 0.5690198 0.4332104 4.315505   2   0.4074179 -0.43966159            #> Comp_2 0.4309802 0.1342139 0.897868   3   1.0695694  0.02743196 -0.5119741 #>        s_order ar_12        ar_24     #> Comp_1 1        0.006045561           #> Comp_2 2       -0.308274546 0.1101399 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $vallogf #> [1] -204.461 #>  ## fix the intercepts to zero mixSARfit(y, model, est_shift = FALSE, tol = 10e-4) #> $model #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob      shift     scale     order ar_1      ar_2        ar_3       #> Comp_1 0.5601305 0.4223943 4.3230787   2   0.4063056 -0.43836730            #> Comp_2 0.4398695 0.1047950 0.9290184   3   1.0706203  0.02662952 -0.5131505 #>        s_order ar_12        ar_24     #> Comp_1 1        0.006308565           #> Comp_2 2       -0.310873840 0.1057719 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $vallogf #> [1] -204.5035 #>"},{"path":"https://geobosh.github.io/mixAR/reference/mixSubsolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for EM estimation of MixAR models, internal function. — mixSubsolve","title":"Support for EM estimation of MixAR models, internal function. — mixSubsolve","text":"Solve linear sub-system arising M-step EM algorithm   MixAR models Gaussian noise components. gives estimates   parameters \\(k\\)th AR component model.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSubsolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support for EM estimation of MixAR models, internal function. — mixSubsolve","text":"","code":"mixSubsolve(k, pk, Stau, Stauy, Stauyy, shift, tol = 1e-07)"},{"path":"https://geobosh.github.io/mixAR/reference/mixSubsolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support for EM estimation of MixAR models, internal function. — mixSubsolve","text":"k component, integer. pk AR order \\(k\\)th component. Stau,Stauy,Stauyy sums cross-sums needed form system. shift TRUE, estimate also shift, otherwise set shift 0. tol tolerance, used case trouble, see Details.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSubsolve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Support for EM estimation of MixAR models, internal function. — mixSubsolve","text":"mixSubsolve forms solves linear subsytem obtain   estimates AR parameters (shift, shift   TRUE)  k-th MixAR component. First, solve() tried. reports system   (numerically) singular, solution computed using SVD   tolerance tol. Note argument tol used call   solve(). net effect solve() computes   solution small default tollerance. Probably wanted   discontinuity optimisation, result using   larger tolerance, resort absolutely needed. remember used pseudo-inverse mixSubsolve(),   solve() similar tol argument   QR-decomposition.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixSubsolve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Support for EM estimation of MixAR models, internal function. — mixSubsolve","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVAR_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from multivariate MixAR models\n — mixVAR_sim","title":"Simulate from multivariate MixAR models\n — mixVAR_sim","text":"Simulate data multivariate MixAR models assumptions multivariate Gaussian innovarion","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVAR_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from multivariate MixAR models\n — mixVAR_sim","text":"","code":"mixVAR_sim(model, n, init, nskip = 100, flag = FALSE)"},{"path":"https://geobosh.github.io/mixAR/reference/mixVAR_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from multivariate MixAR models\n — mixVAR_sim","text":"model model simulate, object inheriting class     MixVAR. n size simulated multivariate series. init initial values, numeric matrix. missing, matrix 0     values generated. nskip number burn-values. flag TRUE returns also regimes.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVAR_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from multivariate MixAR models\n — mixVAR_sim","text":"mixVAR_sim simulates series length nskip + n returns   last n values.  init provides initial values   algorithm. row considered time point. number rows   must least equal maximal AR order.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVAR_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from multivariate MixAR models\n — mixVAR_sim","text":"numeric matrix n rows.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVAR_sim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate from multivariate MixAR models\n — mixVAR_sim","text":"Davide Ravagli","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mixVAR_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from multivariate MixAR models\n — mixVAR_sim","text":"","code":"AR <- list() AR[[1]] <- array(c(0.5,-0.3,-0.6,0,0,0.5,0.4,0.5,-0.3), dim = c(3,3,1)) AR[[2]] <- array(c(-0.5,0.3,0,1,0,-0.5,-0.4,-0.2, 0.5), dim = c(3,3,1))  prob <- c(0.75, 0.25) shift <- cbind(c(0,0,0), c(0,0,0))  Sigma1 <- cbind(c(1, 0.5, -0.4), c(0.5, 2, 0.8), c(-0.4, 0.8, 4)) Sigma2 <- cbind(c(1,0.2, 0), c(0.2, 2, -0.15), c(0, -0.15, 4)) Sigma <- array(c(Sigma1, Sigma2), dim = c(3,3,2))  m <- new(\"MixVARGaussian\", prob=prob, vcov=Sigma, arcoef=AR, shift=shift) mixVAR_sim(m, n=500, init=matrix(rep(0,3), ncol=3), nskip=100, flag=FALSE) #>          [,1]         [,2]        [,3] #>  -1.588611753 -0.537883397 -2.66468079 #>  -1.537259752 -1.102505690  3.06454501 #>   0.924844611  2.110519962 -0.78397834 #>   0.020516152 -0.755478364 -1.35084266 #>   0.140918440 -1.252806248 -1.65964454 #>  -0.199891993  1.187465826 -3.17239253 #>  -1.595615547 -1.594606469  0.68267173 #>  -0.866077906  1.305414059  0.55488188 #>  -0.755075889  1.205375844  1.60742793 #>   0.737659696 -0.824815726 -1.38361985 #>  -0.065819121  0.226944227 -1.21722096 #>  -0.217878572  1.206391570  0.17317976 #>   0.196518437  2.620234393  2.38844581 #>   0.486242356  3.339167842 -2.19148845 #>  -0.740341447 -2.878786215  0.98886148 #>  -0.059950808  0.798735331 -3.38122247 #>  -3.936249794 -2.627169805  0.37796616 #>  -1.933835307  0.451394337  2.25758391 #>   0.593287054 -0.134023213 -1.11282286 #>  -0.258084142 -0.333248773 -0.14722043 #>   1.340819340 -2.713651284  1.69330574 #>   1.595379945  1.721311316 -2.63109931 #>  -0.719559410  1.379880889 -2.63469983 #>  -2.524139475 -2.217252595  2.01249933 #>   2.093966622  2.343710496 -2.47088220 #>   4.144656149  0.698268776 -4.04472355 #>  -1.200393980 -3.996016272  2.93015123 #>   1.589815000  3.082206318 -1.82418572 #>   0.439630689 -0.460876621  1.66439353 #>  -1.112879795  1.165123140  0.68922114 #>   1.627357140 -1.786639568  2.96903078 #>   2.954071456 -1.223765439 -3.85735952 #>   0.455194748 -1.835431530  0.31284227 #>  -0.400603471 -1.662471649 -0.91959744 #>  -2.009096329  0.352480177  1.47380851 #>  -1.054043194  0.278923594  0.06814031 #>  -1.243378556  1.126088041  3.50097717 #>   1.806813385 -2.617968232  0.36701347 #>  -3.517362700  0.593549046  0.59990766 #>  -0.246317795 -1.710609952 -2.35046221 #>  -1.206686467 -2.272997114 -0.44918174 #>  -1.530672694 -0.688637529 -1.01145976 #>   0.307507805  1.185795162  0.38986655 #>  -0.402387820  0.899149651 -2.09788087 #>  -2.203872503 -2.509407107 -0.61262037 #>  -1.901061591  1.886663276  0.50317191 #>  -1.312441958  1.627979513  2.60303622 #>  -0.999484373  0.776554819  1.92645914 #>   2.378859819  4.094106137  2.15832993 #>   1.755444567 -2.188912287 -1.90207422 #>   0.013968982 -0.839675194 -1.30377031 #>  -0.094313179  1.977700596  1.17931653 #>   0.041311977 -0.011306305  0.81700764 #>  -1.055949273  1.724697026 -0.22198288 #>  -1.471762971 -0.881226192  3.27847304 #>  -2.768150328 -1.878539175  2.72380108 #>  -0.135710931  2.183253522 -2.61986220 #>   2.727840706 -1.920056266 -4.01095105 #>   0.907457102 -2.190288808 -1.34046049 #>  -0.949459725 -2.176010715 -3.24164929 #>  -1.589865299 -0.198652788  1.22859100 #>  -0.829407482  1.804222273  1.48747743 #>   1.072015064  0.288219848 -1.62080777 #>  -0.366394341 -0.346961492  3.16013996 #>   1.125544245  2.239344391 -0.94902253 #>   2.599397042  1.464583821  0.26747565 #>  -0.070732021  0.680153483 -0.37130193 #>  -0.599633564 -0.357731287 -0.77438186 #>  -0.772928483  0.990135335  1.06790307 #>  -0.180918754  2.333819719  0.66352339 #>   1.796913738 -1.555190023 -0.84221253 #>  -2.247120454  0.771816390  1.24347101 #>   2.329869407 -0.429178362  2.20716665 #>   2.450730869 -3.462626078 -3.88928438 #>   0.108040647 -4.324858878 -4.30344558 #>  -1.236773341 -3.158825089 -4.51430218 #>  -1.808458609 -2.734788468  0.93041722 #>   0.184774183  3.240347026  0.14269282 #>   1.115434360  1.633999376  0.84346302 #>  -0.868399855  0.231725594  2.81116675 #>  -1.775928392  0.491246069  1.12322739 #>  -0.585241750  0.896635347  2.92276800 #>   2.757712609  3.880907004 -1.82103571 #>   1.445933806 -2.324214035 -1.32538745 #>   0.439842439 -0.833560204 -0.13100589 #>   2.236742784  1.466097531 -2.03811926 #>   1.420976043  3.032769365  0.53417069 #>  -0.326300728  0.689045692  0.31280822 #>  -0.844410452 -1.479585838 -0.34768313 #>   0.409969743  2.243441988  0.39676693 #>   1.791302370 -0.289922543  0.99261457 #>   0.152947918  0.307286383  0.73424377 #>   1.667325687  0.849032510 -2.51916996 #>  -0.904243765 -3.298507450 -2.72717482 #>  -0.841113438 -0.014646180 -4.82990243 #>  -1.551179059 -2.457542731  0.25611391 #>   0.201152412  1.685315211 -0.14271104 #>   0.664818854 -0.910971275 -4.11779877 #>   0.573302940 -2.225768249 -1.44337264 #>  -4.124903665 -0.300731185 -0.69052873 #>  -3.270835331  4.058695880  5.07173825 #>   2.230563228 -0.569048396  2.54391417 #>   2.768936093  1.323037552 -2.09157496 #>   1.005128890 -3.312987575 -2.01098670 #>  -1.325329044 -1.729572837 -1.25149895 #>  -0.687974247  0.997805648  3.20405359 #>   1.630556846  3.944745692  2.34189384 #>   1.289756959  1.690355969  1.46770052 #>   1.046220915 -0.718991291  0.55027300 #>   0.578824731 -0.280978800  0.57418389 #>   2.080482534  0.890435202 -5.76196624 #>  -1.793829392 -2.611715593 -0.17541220 #>  -1.220959277 -0.259752000  3.42486818 #>   0.010148924  1.921359878  0.35378767 #>   1.282687844  0.296717771  1.18052375 #>  -0.062151832  0.815934273 -0.19923324 #>   0.145946454 -0.076628262  3.63710179 #>  -1.733848034 -0.519666857  1.64005587 #>   0.393063310  0.531010960  0.36351423 #>   0.570717517 -1.456052825 -0.02901766 #>  -0.076331839  1.814377803  0.78162875 #>  -1.203970229  1.331555196  1.64721797 #>  -0.366230960  0.249676406 -1.62393190 #>  -0.818352318 -2.897169070  0.08538432 #>  -0.052394983  0.722120126  0.66640184 #>   0.722935233  3.151141218 -1.84792451 #>   0.895398982 -3.270386996 -1.07745436 #>  -1.431469866 -2.733234437  0.84880969 #>   1.028098547  2.823073837 -1.78586796 #>  -0.024914833  0.618397164  3.69414407 #>   2.220978945  1.910584495 -3.13490695 #>   2.347042593  1.095943416 -3.82324409 #>   2.964440950  0.599298352 -1.94116591 #>   0.495585678  2.787546562 -0.58143311 #>   2.089212624  0.505523197  0.10828634 #>   1.682019232 -0.176860490 -5.21568833 #>  -1.290302112 -3.137039272  0.02029045 #>  -1.101624957 -2.238767884 -0.62036789 #>  -0.463727175 -1.369552099 -6.06218324 #>  -3.013293553 -2.842425487  1.36486412 #>  -1.329241770  1.660241137 -1.64885535 #>  -0.610963183  1.108239244  4.11369317 #>   2.029786822  1.935025600 -0.57500276 #>   2.067770290  0.316316417  0.56689245 #>   2.340491378 -0.895654202 -1.55816640 #>  -0.166216722  0.763509677 -0.04874295 #>   0.020414771  1.719275229  1.09468021 #>   1.281088807 -1.150069644 -1.11895774 #>  -1.351574703 -0.532460583  1.01571294 #>  -1.512486047  1.237474920  1.19910501 #>  -0.327099090  1.604368942  4.38823462 #>   0.461509402  1.010119859  2.23246060 #>   0.330455664 -1.147589358  6.01602984 #>   2.339748206  2.307556544 -1.93514498 #>   1.098424845 -0.809721094 -1.36265446 #>   0.311179652  0.998093319 -1.19636040 #>  -0.429744277 -0.087302670 -0.31995250 #>   0.830383156  0.833244339  0.41605820 #>  -1.360942731 -0.545766772  3.87234909 #>  -1.645906559 -0.242426972  0.33086253 #>  -2.280210611  1.627210559  4.05889554 #>  -0.855938426  3.600828686  2.07029208 #>   0.608973764  3.357928029  0.19786156 #>   0.593795817  0.536762371 -0.70213757 #>   0.860472136 -0.123855391  2.35362167 #>  -1.581473721 -1.192817814 -1.40931769 #>  -2.395194077 -1.252443551 -3.01703703 #>  -0.239339354  2.532647141 -1.32712935 #>   1.015598857  2.015233371  2.24439614 #>   1.348554361  1.257593572  1.11808310 #>   0.767048419 -2.598187259  0.11468112 #>  -2.430459487  0.008275402  1.81607471 #>   1.376003527 -1.294147737  3.98510500 #>   2.377368468 -0.552888111 -3.50702393 #>   0.238751027  1.751716338 -4.22683571 #>  -3.503494010 -2.542094711  3.63672620 #>  -0.980248056  3.369232038  1.09339004 #>   0.980763128  1.933471369  2.42475345 #>  -0.294747901  0.073059493  1.46585004 #>   0.615900890 -0.227302318  0.11034870 #>   0.559133298  1.575791315 -0.25354085 #>  -0.118173627 -0.960586944 -1.21184548 #>   0.829845661 -0.195627820 -1.39923636 #>   0.502133031  0.217355011 -0.85839461 #>  -0.087626172 -1.231040303 -3.86250448 #>   0.515890098  0.830719829 -1.84136694 #>  -1.142077828  0.037013801  0.17779379 #>   0.210138599  3.215444170 -0.01438602 #>  -0.462976630 -0.084639607  1.06389962 #>  -0.220204050  1.176782622  0.54897067 #>  -0.117611061 -2.239832074  0.94172614 #>  -0.901521432 -0.690889306  1.00607123 #>  -0.220426143  0.243316656  1.27746959 #>   2.038513397  2.106005847 -2.08813114 #>  -0.112381035 -1.701243256 -2.06999735 #>  -1.244152681 -1.125439725 -0.23569339 #>  -0.598152491  0.780653555  2.02734509 #>   0.288080669  0.011485223 -0.29716987 #>  -0.217522821  0.119122755  2.80493683 #>  -0.179331432  1.897059716  3.49239454 #>   2.825382313  0.164679815 -2.01087489 #>   0.061038295 -2.501032837 -1.74453778 #>  -1.482231682 -1.351055107 -0.62036398 #>  -1.516397976 -0.658895577 -0.80244273 #>   1.683424062  0.879994085  0.37244313 #>   0.163618133  3.614973399  2.12016284 #>   1.712780033 -1.355969819 -0.03117424 #>   1.576391317  0.332498246 -0.51410844 #>   0.301959389  0.021822457 -0.90485017 #>  -0.546711702  0.250883389 -3.32895015 #>  -1.654556477 -0.502311018  1.28754625 #>   1.410238267  2.414376444 -1.37332987 #>   0.059036011 -1.040601612  1.31761783 #>  -0.052349319 -0.393419051 -1.54174279 #>   0.586847059  0.847413321 -0.75846499 #>  -0.069867255 -2.105298489 -1.45898366 #>  -1.197265943 -3.158049735 -4.77748990 #>   0.149625163  1.269300264 -2.48966901 #>   3.292460524  3.289733822 -7.05679858 #>   5.714712956  4.220641875 -4.92176956 #>   0.268845265 -6.027775102 -1.77566789 #>  -1.573076978 -4.167660146 -4.34717410 #>  -1.995748752 -2.119582132  2.91856576 #>   0.073084864  2.317476777  0.23818605 #>  -0.882833883 -1.287926921  0.15864639 #>   1.437979419  1.315599438 -0.51840796 #>  -0.315546424  0.301642051 -0.12965659 #>  -0.613689684 -1.508525505 -1.65857930 #>  -1.253486123  0.015772981  2.14990543 #>  -0.915615943 -0.467435804 -3.92592600 #>  -1.796665709 -0.616443021  2.15765143 #>   0.691100766 -0.019358299  0.18890625 #>   1.822927683  0.974076752  0.54765441 #>   0.377866836 -1.133034437 -3.10689898 #>  -0.737022682  0.075959698 -0.41449037 #>  -0.043387457  0.709044514 -2.35093691 #>  -2.538296548 -2.676906123  1.66283245 #>  -0.046564300  3.015000978 -2.45789672 #>  -2.165572240 -3.797509062  5.01922552 #>   1.857694122  2.466984867 -2.93403347 #>   2.726614341  3.664620515 -2.70291302 #>   0.732947033 -0.941644781  2.48200962 #>  -3.905837754  0.669572523 -0.17058408 #>   2.499224020 -3.869977485  0.09322791 #>   0.078860166 -4.343659856 -7.15830107 #>  -4.109580002 -3.097743481  0.90103753 #>  -1.187567093  1.156783234  0.76680995 #>   0.260939746  0.441883061 -1.21377858 #>   0.800217703  2.369061477  4.66310869 #>   3.099226231  2.008783294 -1.13284100 #>   0.750535987 -1.940393406 -0.63514042 #>  -4.026225230  0.193763322  1.12030022 #>  -2.827511228 -0.953384852  1.17407333 #>  -2.980233378  0.987267410  2.36707468 #>   0.558317632 -1.420000877  0.35721732 #>  -1.525734544 -1.337241783  0.79786970 #>  -2.108690073 -1.740824789 -0.39059349 #>  -0.162489341  0.596981784  1.36986078 #>   1.295564162  0.108569821 -2.46248538 #>  -0.481343685 -1.712849012  2.75426857 #>   0.183607023  1.145343065 -0.03979404 #>  -0.642905494 -0.128991816  1.55568723 #>  -0.932986588 -2.261103504  1.52050693 #>  -2.849211030 -3.469301645  2.51838508 #>  -0.596491683 -0.291318788 -2.26028791 #>  -1.585043430 -1.618085878  1.87043211 #>  -1.708366910 -0.375487640 -1.30173387 #>   0.135131083 -0.272894354 -1.05700748 #>   0.983008218 -0.393391214  0.89418346 #>   1.818681499  1.297841598  1.44498250 #>  -0.847070697  2.526902077 -3.64266767 #>  -2.989107389 -2.539381332  3.33122743 #>  -0.547511132  3.358248393  0.57452602 #>   4.200146954  1.931853768 -4.30615341 #>   1.372949334 -3.753868934 -2.06833801 #>  -1.997016095 -3.096682096 -2.60773380 #>  -4.067641428 -1.519841899  1.65363247 #>  -2.410666560  1.405191395 -1.27498303 #>   3.140706376  0.886147806 -5.73824093 #>   1.074055156 -4.647080931  1.49006617 #>  -3.787473055 -1.105128905  1.76206826 #>   1.032800930 -2.515207995 -0.44295347 #>   2.301078306  2.202081251 -1.99907827 #>   2.992096848  1.433201957  0.30407055 #>  -1.049749480 -0.242533742  2.26745250 #>   1.051065241  2.451873732 -0.12068190 #>   0.363298703 -0.720826571  2.72695089 #>  -2.151956081  2.321369182  2.80908976 #>   1.344984254  4.292329823  1.73045995 #>  -0.566079733 -0.635352218  2.11681173 #>   1.636871398  2.001373762  0.91152566 #>   2.209792523  1.780299240  1.33360650 #>   0.035723251  1.848425590 -1.27687649 #>  -0.350182141 -1.148696656  2.04975531 #>   1.097332595  1.107512823 -1.02949451 #>   0.133256633 -2.041815593  1.87368917 #>  -2.544203610  0.469118257  1.59517906 #>  -2.224802547  2.089371706  1.24717153 #>   3.487782630  2.075168297 -2.82116532 #>   1.839022130 -2.663514843 -0.62645482 #>  -3.905646293 -0.020033543 -1.25990219 #>  -2.197285116  1.173487878  2.44065144 #>  -1.834883278  1.055633127  2.14125183 #>  -0.707277331  0.352848474 -1.36242647 #>   1.789176946 -0.973480473  5.50685135 #>   4.031564355  2.223379527 -3.40668107 #>   0.028037608 -2.690449461 -0.08895572 #>  -2.202179380 -2.833003584 -0.33655849 #>  -3.936791227 -1.395440164  4.57165860 #>  -2.886405722 -1.886741949  6.10759064 #>   1.939161581  5.561804820 -2.71673284 #>   6.325979413  1.376561809 -1.44697641 #>   4.828937892 -1.616079755 -0.86427774 #>   1.685139157 -2.604639663 -4.56654435 #>  -2.262100430 -3.010728076 -0.79132275 #>  -0.661338766 -0.073751451 -1.88799842 #>  -0.854383028  1.863271183  2.29666708 #>   0.720304321  3.365305051  4.52115623 #>   3.724431282  1.827583263 -0.63674463 #>  -0.158053053  0.911021782 -0.32141650 #>  -0.900511021 -1.883712446 -0.04194847 #>   1.416134309  3.026949744 -0.95020180 #>   1.111326439 -0.916538300  0.54745183 #>  -2.492078540 -2.138731959  4.40391877 #>   0.925114671  0.587610229 -2.15444018 #>   1.088199275 -0.801571928  0.55042825 #>  -0.636482683  1.657017478  1.88830407 #>   0.910300828  3.682162157  4.32897967 #>   2.356108017  1.661478034 -0.06724440 #>   1.230534141 -1.429715885  0.48414383 #>   0.471350802  2.011406940 -5.75515206 #>   4.245802593  1.199584508 -2.78583689 #>   1.191633928  0.500452312 -0.73400591 #>   0.315810126  2.061756973  0.72853733 #>   0.620418727  0.019978071  0.08839217 #>  -0.879901031  0.521495890  0.86418131 #>  -1.340711835  0.518979307  3.19188941 #>   1.423148308  0.816145879  1.18991702 #>  -0.213785278  0.786112470 -1.57402790 #>  -1.295690203 -3.780767032 -0.94990055 #>  -2.951512242  1.661619342 -0.75911140 #>  -1.256533595  0.358969979  0.10776559 #>  -0.095138074  2.900497463  3.11105740 #>   2.084996989  1.790973742  2.23937263 #>  -2.614231993 -1.780128483 -0.07314920 #>  -1.225148939  1.662379319  2.24005787 #>  -0.215131188  0.633086965  0.15478073 #>  -0.750639785  0.059924354  2.19158525 #>   0.952675355  0.652123526 -1.72867154 #>   0.747368138  0.275690251  1.25665498 #>  -1.625785064 -1.301577886  0.65201471 #>  -0.143567935 -1.472500614  0.58888229 #>   1.358969187 -0.312345306  2.13613890 #>   2.162694398  2.043088350 -2.44103736 #>  -0.944573737 -1.476230473  1.56348655 #>  -0.660198113  0.087346655  1.77874129 #>  -0.479792636  2.592327029 -0.70557476 #>   1.419906823  2.900674349 -0.98983395 #>  -0.675846468 -1.881101484 -0.60404603 #>  -0.977911854  0.187836139 -1.84748426 #>  -1.235903590 -1.338491471  2.27950224 #>   0.987487953  1.405914005 -2.27609077 #>   1.270658562 -0.753481420 -0.13029963 #>   1.842750029  0.019143054 -0.63196609 #>   0.226575533 -0.149817343  2.88677863 #>  -1.045795569  1.384826912  1.95525039 #>  -0.345514295 -2.456199022 -1.61123679 #>  -1.124163907 -0.579572244  1.80894242 #>  -1.399356893 -1.010240677 -3.60361510 #>  -1.464904649 -2.334497027 -2.41398232 #>  -2.761587838 -2.248864038  0.90344198 #>  -0.937764885 -0.083312210  1.88489312 #>   0.746064468  1.718620055  0.46436358 #>   1.281256847  1.312199593 -0.59907226 #>   1.259817374  2.891635402 -1.39522635 #>  -0.009724833 -2.928130277  1.12529741 #>   0.929118864 -2.585786295 -3.69108017 #>   1.195734363 -3.021432433 -4.10349518 #>  -1.002002297 -2.927119796  1.68649297 #>   1.619461618  2.136067838 -4.15674018 #>  -0.095495907 -2.477682083 -2.73907948 #>  -0.684953391  1.042105895 -2.25944397 #>   2.251559049  3.084420245 -0.17334693 #>  -0.421215016 -0.496248931  3.92061876 #>   1.089307504  1.682682104  1.00006912 #>   0.311286689 -0.037314335  1.59566879 #>   2.347670112 -0.074739463 -1.61985946 #>   0.426213171  0.081518522  2.32111816 #>   2.568246823  1.343652786  0.61085084 #>   0.751614411 -1.703696902 -3.41837550 #>  -2.026119478 -1.194183264  1.49301798 #>  -0.429442144  0.432267346  0.53404506 #>  -1.485614736 -2.418072566 -0.93133246 #>  -1.418415826 -1.918890934 -4.17573785 #>  -2.786756976 -0.833029874  2.89860661 #>   0.953528160  3.279050147  4.65139506 #>   3.036414152  1.447333882 -4.25572633 #>   4.171407368  3.926744710 -1.64357013 #>   2.609867870 -0.166898469  1.73970589 #>   3.258140685  1.590287747 -3.41818647 #>   0.164263189 -2.800671682 -1.75576067 #>   1.140920162 -2.207451923 -1.35999509 #>  -0.742445238 -1.041154033 -0.89993527 #>  -1.103641549 -5.109307428 -5.50785236 #>  -2.284013946 -3.456907597 -0.38296131 #>  -0.454434888  0.269226537 -1.82312826 #>  -1.045542573  1.769724843  4.47693880 #>   3.731610645  4.664361427 -2.91126237 #>  -1.038051168 -2.958470126  0.92022543 #>  -2.225043598 -1.996198129  1.06805516 #>   0.953332320  1.992210205  0.16002024 #>   0.525748299 -1.259804494 -2.47907049 #>  -1.197486501 -2.836832415 -0.05403530 #>  -1.533621787 -0.765384047  4.37233728 #>   3.096707945  4.379551525 -3.51970001 #>   2.709252265  1.606453410 -3.63832525 #>   2.255826075 -0.465203601 -3.10707907 #>  -0.190676567 -4.387830227 -0.75427658 #>   0.872517405 -1.633445189  0.10370934 #>   1.508505251  1.838468371  1.55981245 #>   1.598637329  0.361584329 -2.36487017 #>   0.615694603  0.254887404  0.54839784 #>   2.143894635  1.744226751 -2.83426202 #>   2.103102535  0.574926609 -2.59974863 #>  -0.554071627 -3.276310675  1.41268400 #>  -0.197332098  0.880778266 -5.01746104 #>  -2.406062427 -2.986327281  0.76170193 #>  -0.919887673  2.629815447  1.16584390 #>   1.815136313 -0.870707098 -0.91683061 #>   0.192720838 -1.344484362 -1.80393894 #>   1.435579341  0.981251372  0.85508358 #>   0.514882310  0.267316195  0.09238509 #>   0.408352770  0.729883045  3.70362352 #>  -0.159993532  2.154994424  0.49890372 #>  -0.409666097 -0.013286026 -0.65247642 #>  -1.889194126 -3.094411130  2.51156162 #>  -3.649793111 -0.248714079  2.22648318 #>   0.719825433  3.561403102  5.53225377 #>   3.046427654  4.610715465  0.26967560 #>   3.307160228  0.541563881 -1.95421789 #>   1.928707209 -1.541129136 -4.36617042 #>   0.067425505 -3.266373607  0.87280879 #>   0.199467228  0.614342683 -0.86902087 #>  -0.040980892  0.094096566 -2.13351223 #>   0.079090055 -0.793265853 -2.12554274 #>  -1.145685421 -2.145495306 -1.21936088 #>  -1.774545348 -2.279045379  3.33423684 #>   0.599144316 -0.574044521 -3.43954667 #>  -1.175064099 -5.082327176 -1.19799611 #>  -1.052790609  1.911143227  2.15869486 #>   2.027572160  3.611183415  0.12108359 #>   1.882404258  0.223640236  3.97114590 #>   2.949849534  2.535387654 -1.33124865 #>   1.886293126 -0.946268320 -1.02140264 #>   1.484923968  2.715203831 -2.71308074 #>   0.082438324 -0.858127416  3.30054546 #>  -1.177637831 -0.609853812 -1.16847884 #>  -2.152143192 -0.865889752  2.13270480 #>  -0.389184827  0.559302970 -0.54679802 #>   1.689813621  2.329188663 -0.08386881 #>   2.298431093  0.869289832  1.85395336 #>  -2.108541766 -1.989462099  3.21621739 #>  -0.652064706  1.260085974 -0.30266530 #>  -2.099972505  0.807434250  4.13949992 #>   0.188379418  0.154110264 -1.15638555 #>   0.055624106  1.673472461  1.40950611 #>   0.813281385  0.191928084 -0.05265852 #>   0.946788227  1.437513377  3.19530760 #>   0.629143309  1.614895998 -0.01242570 #>  -1.308356559 -1.021397961 -0.44327859 #>  -1.522933811 -0.352892953 -4.08141011 #>  -1.213608499  1.027846695  4.64313041 #>   2.159913641  3.276714311  0.08654678 #>   0.797404624 -1.623094786  0.55616417 #>  -1.604542558 -1.644984518  0.64793314 #>  -1.415518714 -0.173037712 -0.59181178 #>  -0.336009605 -0.021301984  3.17836156 #>   0.943665149  3.147794089 -1.04645049 #>   0.753013845 -0.298932783  1.10952946 #>   2.232249548  1.033007495 -0.27912571 #>   0.430187857 -0.848654277  3.55060955 #>   1.413999127  1.877508224 -1.02337357 #>   1.870337293  2.711116289 -3.85054255 #>   2.874427778 -0.271961941 -4.61564890 #>  -0.183429722 -1.185779845  5.29175690 #>   2.595906615  2.161883202 -4.20956530 #>   3.028075608  2.982272510 -4.08188637 #>   0.256853970 -2.651867232  0.12597845 #>   0.282682366 -1.291820101  2.00759873 #>   1.078119891  1.543928506 -1.10722498 #>  -1.022674202 -0.401080923  0.58404800 #>  -0.867413988  0.402097885 -3.36376170 #>  -0.493003961 -2.333957660  1.02261839 #>   1.345648239 -0.482462125  1.49174915 #>  -0.890795193  1.279684148 -3.42088442 #>  -2.258165669 -3.589929578  0.48880298 #>  -0.885710040  0.081871355  1.27651285 #>  -0.384949040 -1.049249632  1.47890640 #>  -0.603801512 -0.412589734  1.43889029 #>   0.643711025  1.730870109  0.42372458"},{"path":"https://geobosh.github.io/mixAR/reference/mixVARfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit mixture vector autoregressive models — mixVARfit","title":"Fit mixture vector autoregressive models — mixVARfit","text":"Provides EM-estimation mixture autoregressive models   multivariate time series","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVARfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit mixture vector autoregressive models — mixVARfit","text":"","code":"mixVARfit(y, model, fix = FALSE, tol = 10^-6, verbose = FALSE)"},{"path":"https://geobosh.github.io/mixAR/reference/mixVARfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit mixture vector autoregressive models — mixVARfit","text":"y data matrix. model object class \"MixVAR\" initial values parameter     EM estimation. tol Threshold convergence criterion. fix TRUE, fix shift parameters. verbose TRUE print information optimisation.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVARfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit mixture vector autoregressive models — mixVARfit","text":"Estimation done assumption multivariate Gaussian   innovations.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVARfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit mixture vector autoregressive models — mixVARfit","text":"object class MixVARGaussian EM estimates model   parameters.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVARfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit mixture vector autoregressive models — mixVARfit","text":"Fong PW, Li WK, Yau CW, Wong CS (2007). “Mixture Vector Autoregressive Model.” Canadian Journal Statistics / La Revue Canadienne de Statistique, 35(1), 135--150. ISSN 03195724, doi: 10.1002/cjs.5550350112 .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixVARfit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit mixture vector autoregressive models — mixVARfit","text":"Davide Ravagli","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_central_moment-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for mix_central_moment — mix_central_moment-methods","title":"Methods for mix_central_moment — mix_central_moment-methods","text":"Methods mix_central_moment package “pcts”","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_central_moment-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for mix_central_moment — mix_central_moment-methods","text":"signature(model = \"MixAR\", x = \"missing\", index = \"missing\", xcond = \"numeric\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_ek.html","id":null,"dir":"Reference","previous_headings":"","what":"Function and methods to compute component residuals for MixAR models — mix_ek","title":"Function and methods to compute component residuals for MixAR models — mix_ek","text":"Compute component residuals MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_ek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function and methods to compute component residuals for MixAR models — mix_ek","text":"","code":"mix_ek(model, x, index, xcond, scale)"},{"path":"https://geobosh.github.io/mixAR/reference/mix_ek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function and methods to compute component residuals for MixAR models — mix_ek","text":"model model. x time series. index vector positive integer specifying indices     compute residuls, natural default. xcond past values needed conditional distribution, numeric     vector length least maximal AR order components.  scale logical missing, TRUE standardise residuals.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_ek.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function and methods to compute component residuals for MixAR models — mix_ek","text":"mix_ek computes component residuals MixAR models. highly desirable use along mix_hatk   underlying function mixFilter. ensures   transparent code easy maintenance. Also, efficient   implementation can introduced without changing code.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_ek.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function and methods to compute component residuals for MixAR models — mix_ek","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_ek.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Function and methods to compute component residuals for MixAR models — mix_ek","text":"signature(model = \"MixAR\", x = \"numeric\", index = \"missing\", xcond = \"numeric\", scale = \"logical\")  signature(model = \"MixAR\", x = \"numeric\", index = \"missing\", xcond = \"numeric\", scale = \"missing\")  signature(model = \"MixAR\", x = \"numeric\", index = \"numeric\", xcond = \"missing\", scale = \"logical\")  signature(model = \"MixAR\", x = \"numeric\", index = \"numeric\", xcond = \"missing\", scale = \"missing\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_hatk.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute component predictions for MixAR models — mix_hatk","title":"Compute component predictions for MixAR models — mix_hatk","text":"Function methods compute component predictions MixAR models","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_hatk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute component predictions for MixAR models — mix_hatk","text":"","code":"mix_hatk(model, x, index, xcond)"},{"path":"https://geobosh.github.io/mixAR/reference/mix_hatk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute component predictions for MixAR models — mix_hatk","text":"model model. x time series. index vector positive integers specifying indices     compute residuals, natural default. xcond past values needed conditional distribution, numeric     vector length least maximal AR order components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_hatk.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute component predictions for MixAR models — mix_hatk","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_hatk.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute component predictions for MixAR models — mix_hatk","text":"signature(model = \"MixAR\", x = \"numeric\", index = \"numeric\",  xcond = \"missing\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_location-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional mean of MixAR models — mix_location-methods","title":"Conditional mean of MixAR models — mix_location-methods","text":"Conditional mean MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_location-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Conditional mean of MixAR models — mix_location-methods","text":"signature(model = \"MixAR\", x = \"missing\", index = \"missing\", xcond = \"missing\") method returns function argument xcond, suitable   calls many values xcond. signature(model = \"MixAR\", x = \"missing\", index = \"missing\", xcond = \"numeric\")  signature(model = \"MixAR\", x = \"numeric\", index = \"missing\", xcond = \"missing\")  signature(model = \"MixAR\", x = \"numeric\", index = \"numeric\", xcond = \"missing\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for mix_moment — mix_moment-methods","title":"Methods for mix_moment — mix_moment-methods","text":"Methods mix_moment package pcts","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for mix_moment — mix_moment-methods","text":"signature(model = \"MixAR\", x = \"missing\", index = \"missing\", xcond = \"numeric\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional moments of MixAR models — mix_moment","title":"Conditional moments of MixAR models — mix_moment","text":"Conditional moments MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional moments of MixAR models — mix_moment","text":"","code":"mix_location(model, x, index, xcond) mix_variance(model, x, index, xcond) mix_central_moment(model, x, index, xcond, k) mix_moment(model, x, index, xcond, k) mix_kurtosis(...) mix_ekurtosis(...)"},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional moments of MixAR models — mix_moment","text":"model MixAR object. x time series. index vector indices x compute requested     property.  missing, computation done indices     greater max(model@order). xcond time series, point prediction computed     first value end time series. last     max(model@order) values xcond used. k positive integer specifying moment compute. ... passed mix_central_moment.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional moments of MixAR models — mix_moment","text":"functions compute conditional moments related quantities. kurtosis ekurtosis compute conditional kurtosis   excess kurtosis, respectively. Effectively,   parameters mix_central_moment, since pass \"...\"   along k = 4. error supply argument   k kurtosis functions.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional moments of MixAR models — mix_moment","text":"called one argument (model), function argument xcond;   otherwise xcond missing, single numeric value;   otherwise vector length length(index).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conditional moments of MixAR models — mix_moment","text":"Boshnakov GN (2009). “Analytic expressions predictive distributions mixture autoregressive models.” Stat. Probab. Lett. , 79(15), 1704-1709. doi: 10.1016/j.spl.2009.04.009 .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditional moments of MixAR models — mix_moment","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Conditional moments of MixAR models — mix_moment","text":"wrote description recently reading six years old   code, may need verification.","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_moment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional moments of MixAR models — mix_moment","text":"","code":"## data(ibmclose, package = \"fma\") # `ibmclose' ibmclose <- as.numeric(fma::ibmclose) length(ibmclose) # 369 #> [1] 369 max(exampleModels$WL_ibm@order) # 2 #> [1] 2  ## compute point predictions for t = 3,...,369 pred <- mix_location(exampleModels$WL_ibm, ibmclose) plot(pred)  ## compute one-step point predictions for t = 360,...369 mix_location(exampleModels$WL_ibm, ibmclose, index = 369 - 9:0 ) #>  [1] 347.2596 342.4712 328.6250 341.0577 338.8942 330.1539 346.4808 352.7404 #>  [9] 345.3654 352.6346  f <- mix_location(exampleModels$WL_ibm) # a function ## predict the value after the last f(ibmclose) #> [1] 357.5288  ## a different way to compute one-step point predictions for t = 360,...369 sapply(369 - 10:1, function(k) f(ibmclose[1:k])) #>  [1] 347.2596 342.4712 328.6250 341.0577 338.8942 330.1539 346.4808 352.7404 #>  [9] 345.3654 352.6346  ## the results are the same, but notice that xcond gives past values ## while index above specifies the times for which to compute the predictions. identical(sapply(369 - 10:1, function(k) f(ibmclose[1:k])),           mix_location(exampleModels$WL_ibm, ibmclose, index = 369 - 9:0 )) #> [1] TRUE   ## conditional variance f <- mix_variance(exampleModels$WL_ibm) # a function ## predict the value after the last f(ibmclose) #> [1] 5.821599  ## a different way to compute one-step point predictions for t = 360,...369 sapply(369 - 10:1, function(k) f(ibmclose[1:k])) #>  [1] 11.410334  5.821599 39.354008 23.286395  0.232864 14.903293 45.641335 #>  [8] 11.410334  8.383102  8.383102  ## the results are the same, but notice that xcond gives past values ## while index above specifies the times for which to compute the predictions. identical(sapply(369 - 10:1, function(k) f(ibmclose[1:k])),           mix_variance(exampleModels$WL_ibm, ibmclose, index = 369 - 9:0 )) #> [1] TRUE   # interesting example # bimodal distribution, low kurtosis, 4th moment not much larger than 2nd moWL <- exampleModels$WL_ibm  mix_location(moWL,xcond = c(500,450)) #> [1] 444.7116 mix_kurtosis(moWL,xcond = c(500,450)) #> [1] 1.298194  f1pdf <- mix_pdf(moWL,xcond = c(500,450)) f1cdf <- mix_cdf(moWL,xcond = c(500,450)) gbutils::plotpdf(f1pdf,cdf=f1cdf)  gbutils::plotpdf(f1cdf,cdf=f1cdf)  f1cdf(c(400,480)) #> [1] 0.001408424 0.997066707  mix_variance(moWL,xcond = c(500,450)) #> [1] 622.5978 mix_central_moment(moWL,xcond = c(500,450), k=2) #> [1] 622.5978  sqrt(mix_variance(moWL,xcond = c(500,450))) #> [1] 24.95191 sqrt(mix_central_moment(moWL,xcond = c(500,450), k=2)) #> [1] 24.95191"},{"path":"https://geobosh.github.io/mixAR/reference/mix_ncomp-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of rows or columns of a MixComp object — mix_ncomp-methods","title":"Number of rows or columns of a MixComp object — mix_ncomp-methods","text":"Function methods get number component mixture   object. \"MixComp\" objects equivalent   ncol.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_ncomp-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of rows or columns of a MixComp object — mix_ncomp-methods","text":"","code":"mix_ncomp(x)"},{"path":"https://geobosh.github.io/mixAR/reference/mix_ncomp-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of rows or columns of a MixComp object — mix_ncomp-methods","text":"x object, \"MixComp\"  \"MixAR\".","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_ncomp-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of rows or columns of a MixComp object — mix_ncomp-methods","text":"number","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_ncomp-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of rows or columns of a MixComp object — mix_ncomp-methods","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_ncomp-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Number of rows or columns of a MixComp object — mix_ncomp-methods","text":"signature(x = \"MixAR\")  signature(x = \"MixComp\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_pdf-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional pdf's and cdf's of MixAR models — mix_pdf-methods","title":"Conditional pdf's and cdf's of MixAR models — mix_pdf-methods","text":"Gives conditional probability densities distribution functions   mixture autoregressive models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_pdf-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Conditional pdf's and cdf's of MixAR models — mix_pdf-methods","text":"mix_pdf gives probability density, mix_cdf   distribution function. argument x supplied, functions   evaluated specified values x, otherwise function   objects returned can used computations, eg   graphs. mix_pdf mix_cdf methods following   signatures.  signature(model = \"MixARGaussian\", x = \"missing\", index = \"missing\", xcond = \"numeric\") Return (function one argument) conditional density       (respectively cdf), \\(f(x|xcond)\\), \\(X_{t+1}\\) given       past values xcond. values xcond       natural time order, e.g. last value xcond       \\(x_{t}\\). xcond must contain enough values       computation conditional density (cdf) given,       necessary ones used.  signature(model = \"MixARGaussian\", x = \"numeric\", index = \"missing\", xcond = \"numeric\") Compute conditional density (respectively cdf) values given       x. signature(model = \"MixARGaussian\", x = \"numeric\", index = \"numeric\", xcond = \"missing\") Compute conditional densities (respectively cdf) times       specified index. \\(t\\{}\\)index       past values needed computation pdf (cdf)       ...,x[t-2],x[t-1].  signature(model = \"MixARgen\", x = \"missing\", index = \"missing\",           xcond = \"numeric\")  signature(model = \"MixARgen\", x = \"numeric\", index = \"missing\",           xcond = \"numeric\")  signature(model = \"MixARgen\", x = \"numeric\", index = \"numeric\",           xcond = \"missing\")","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_pdf-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditional pdf's and cdf's of MixAR models — mix_pdf-methods","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_qf-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional quantile functions of MixAR models — mix_qf-methods","title":"Conditional quantile functions of MixAR models — mix_qf-methods","text":"Gives conditional quantile functions mixture autoregressive models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_qf-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional quantile functions of MixAR models — mix_qf-methods","text":"","code":"mix_qf(model, p, x, index, xcond)"},{"path":"https://geobosh.github.io/mixAR/reference/mix_qf-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional quantile functions of MixAR models — mix_qf-methods","text":"model mixAR model. p vector probabilities. x time series. index vector positive integers. xcond past values needed conditional distribution, numeric     vector length least maximal AR order components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_qf-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional quantile functions of MixAR models — mix_qf-methods","text":"depending arguments, function computing quantiles   numeric vector representing quantiles, see sections 'Details'   'Methods","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_qf-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditional quantile functions of MixAR models — mix_qf-methods","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_qf-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Conditional quantile functions of MixAR models — mix_qf-methods","text":"signature(model = \"MixARGaussian\", p = \"missing\", x = \"missing\", index = \"missing\", xcond = \"numeric\")  signature(model = \"MixARGaussian\", p = \"numeric\", x = \"missing\", index = \"missing\", xcond = \"numeric\")  signature(model = \"MixARGaussian\", p = \"numeric\", x = \"numeric\", index = \"numeric\", xcond = \"missing\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute standard errors of estimates of MixAR models — mix_se-methods","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"Compute standard errors estimates MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"","code":"mix_se(x, model, fix_shift)"},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"x time series. model MixAR model, object inheriting class “MixAR”. fix_shift logical. shift paramters fixed? Default     FALSE.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"formulas used computation, see   Wong (1998) .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"list components: standard_errors Standard error parameter estimates, covariance_matrix covariance matrix, obtained inverse information matrix, Complete_Information Complete information matrix, Missing_Information Missing information matrix.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"Wong CS (1998). Statistical inference nonlinear time series models. Ph.D. thesis, University Hong Kong, Hong Kong .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"signature(x = \"\", model = \"list\")  signature(x = \"\", model = \"MixAR\")  signature(x = \"\", model = \"MixARGaussian\")","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_se-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute standard errors of estimates of MixAR models — mix_se-methods","text":"","code":"## Example with IBM data  ## data(ibmclose, package = \"fma\")  moWLprob <- exampleModels$WL_ibm@prob    # 2019-12-15; was: c(0.5339,0.4176,0.0385)      moWLsigma <- exampleModels$WL_ibm@scale  #                  c(4.8227,6.0082,18.1716) moWLar <- list(-0.3208, 0.6711,0)        # @Davide - is this from some model?  moWLibm <- new(\"MixARGaussian\", prob = moWLprob, scale = moWLsigma, arcoef = moWLar)  IBM <- diff(fma::ibmclose) mix_se(as.numeric(IBM), moWLibm, fix_shift = TRUE)$'standard_errors' #> $Component_1 #>       Estimate Standard Error #> prob    0.5439     0.09005847 #> AR_1   -0.3208     0.07477196 #> scale   4.8227     0.49799538 #>  #> $Component_2 #>       Estimate Standard Error #> prob    0.4176     0.08671523 #> AR_1    0.6711     0.12662929 #> scale   6.0082     0.77726571 #>  #> $Component_3 #>       Estimate Standard Error #> prob    0.0385     0.03263437 #> AR_1    0.0000     0.80123158 #> scale  18.1716     5.70693125 #>"},{"path":"https://geobosh.github.io/mixAR/reference/mix_variance-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for mix_variance — mix_variance-methods","title":"Methods for mix_variance — mix_variance-methods","text":"Methods mix_variance package “pcts”","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mix_variance-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for mix_variance — mix_variance-methods","text":"signature(model = \"MixAR\", x = \"missing\", index = \"missing\", xcond = \"missing\")  signature(model = \"MixAR\", x = \"missing\", index = \"missing\", xcond = \"numeric\")  signature(model = \"MixAR\", x = \"numeric\", index = \"numeric\", xcond = \"missing\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/mixgenMstep.html","id":null,"dir":"Reference","previous_headings":"","what":"M-step for models from class MixARgen — mixgenMstep","title":"M-step for models from class MixARgen — mixgenMstep","text":"M-step models class MixARgen. function use   functions.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixgenMstep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"M-step for models from class MixARgen — mixgenMstep","text":"","code":"mixgenMstep(y, tau, model, index, fix = NULL, comp_sigma = FALSE,             method = \"BBsolve\", maxit = 100, trace = FALSE,             lessverbose = TRUE, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/mixgenMstep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"M-step for models from class MixARgen — mixgenMstep","text":"y time series, numeric vector. tau conditional probabilities, object class \"MixComp\". model current model, object subclass class     \"MixAR\". index indices observations compute residuals,     vector positive integers, see 'Details'. method optimisation equation  solving method package BB ... arguments pass optimisation functions,     thought yet. use notice removed. comp_sigma TRUE optimise scale parameters using     univariate optimisation. (note: work argument 'fix'     yet.) fix specify parameters held fixed optimisation,     see 'Details'. maxit maximal number iterations BB optimisers     solvers. Meant mainly testing. trace TRUE, BB optimisers     solvers print information proceedings. Meant mainly     testing. lessverbose TRUE, print dot instead verbose     information.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/mixgenMstep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"M-step for models from class MixARgen — mixgenMstep","text":"mixgenMstep implementation M-step EM   algorithm mixture autoregressive models specified objects   class \"MixARgen\". function build modified incrementally   main goal providing flexibility. Speed addressed   later. default optimisation done respect parameters.   Argument fix may list elements \"prob\", \"shift\",   \"scale\" \"arcoef\". elements logical vectors   containing TRUE positions fixed parameters.   Elements fixed parameters may omitted. (Currently   \"prob\" element ignored, .e. possible fix   component probabilities.) fix = \"shift\" shift parameters kept fixed.   equivalent fix = list(shift = rep(TRUE,g)). parameters () distributions error components   estimated default. Currently method used   fix .    can achieved however modifying distribution part   model since incorporates information parameters   whether fixed .","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-step predictions for MixAR models — multiStep_dist-methods","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"Multi-step predictions MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"","code":"multiStep_dist(model, maxh, N, xcond, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"model MixAR model. maxh maximal horizon, positive integer. N integer specifying number simulation samples use, see     'Details. argument used simulation based methods. xcond past values needed conditional distribution, numeric     vector length least maximal AR order components. ... used methods, see details individual     methods.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"function currently implements two methods: exact method due   Boshnakov (2009)  simulation   method described (Wong Li 2000)  Gaussian MixAR   models valid generally. simulation method available MixAR model,   exact method currently implemented models   Gaussian components (\"MixARGaussian\" class). multiStep_dist returns function can used obtain   various properties predictive distribution lags   maxh. argument N missing exact method tried. Currently   error result exact method implemented   model. argument N given must scalar numeric value,   number simulations performed construct approximation   predictive distributions. simulation done multiStep_dist. properties   obtained later function returned multiStep_dist use   samples generated call multiStep_dist.   simulation different parameters (e.g., larger   N) call multiStep_dist .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"details-on-the-returned-function","dir":"Reference","previous_headings":"","what":"Details on the returned function","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"xcond missing multiStep_dist returns function   arguments h, xcond.      xcond supplied, fixed value   arguments returned function h,   '...'. dots argument currently used case   simulation method, see . Let f function returned multiStep_dist.   Argument h required prediction horizon can   number interval \\([1,maxh]\\). Argument   required property predictive distribution lag   h. function, applied simulated   sample requested horizon (currently available   simulation method). character string,   corresponding property predictive distribution horizon   h returned.   Currently possible values :  \"pdf\" probability density function. \"cdf\" cumulative distribution function. \"location\" location (conditional mean). \"variance\" conditional variance, .k.(squared) volatility. \"sd\" conditional standard deviation, .k.volatility. \"skewness\" conditional skewness. \"kurtosis\" conditional kurtosis. Note = \"pdf\" = \"cdf\" return functions   even simulation case. \"pdf\" function constructed   using density \"...\" arguments passed f   passed density finer control needed. none , raw object returned   currently (may change).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"function described sections ‘Details’ ‘Methods’","code":""},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"Details section gives rather detailed description   function, descriptions brief.  signature(model = \"MixAR\", maxh = \"numeric\", N = \"numeric\", \txcond = \"numeric\") Non-missing N requests simulation method.       predictive distribution approximated simulating N       future paths horizon maxh using       non-parametric estimate. Arguments \"...\" passed       density allow finer control. signature(model = \"MixARGaussian\", maxh = \"numeric\", N = \"missing\",  \txcond = \"missing\") Computes predictive distribution using exact method.       Returns function arguments h, xcond. signature(model = \"MixARGaussian\", maxh = \"numeric\", N = \"missing\", \txcond = \"\") Computes predictive distribution using exact method.       Returns function arguments h .       (.e., xcond fixed supplied argument xcond).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"Boshnakov GN (2009). “Analytic expressions predictive distributions mixture autoregressive models.” Stat. Probab. Lett. , 79(15), 1704-1709. doi: 10.1016/j.spl.2009.04.009 . Wong CS, Li WK (2000). “mixture autoregressive model.” J. R. Stat. Soc., Ser. B, Stat. Methodol. , 62(1), 95-115.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/multiStep_dist-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multi-step predictions for MixAR models — multiStep_dist-methods","text":"","code":"## exact method, without xcond dist <- multiStep_dist(exampleModels$WL_ibm, maxh = 3)  tfpdf <- dist(3, \"pdf\", xcond = c(560, 600)) # xcond is argument to 'dist' here tfcdf <- dist(3, \"cdf\", xcond = c(560, 600)) ## plot the pdf (gbutils::plotpdf determines suitable range automatically) gbutils::plotpdf(tfpdf, cdf = tfcdf)  args(dist(3, \"pdf\", xcond = c(500, 600)))  # x #> function (x)  #> NULL  ## use a simulation method with N = 1000 tf  <- multiStep_dist(exampleModels$WL_ibm, maxh = 3, N = 1000, xcond = c(560, 600)) args(tf) # (h, what, ...) #> function (h, what, ...)  #> NULL  ## the exact method may also be used with fixed xcond: tfe <- multiStep_dist(exampleModels$WL_ibm, maxh = 3, xcond = c(560, 600))  ## get pdf and cdf for horizon 3 tfepdf <- tfe(3, \"pdf\") tfecdf <- tfe(3, \"cdf\") ## plot the pdf gbutils::plotpdf(tfepdf, cdf = tfecdf)   tf(3, \"location\") #> [1] 605.4452  tf(1, \"location\") #> [1] 605.0603 mix_location(exampleModels$WL_ibm, xcond = c(560, 600)) #> [1] 604.2307  ## larger simulation gives better approximation, in general tf <- multiStep_dist(exampleModels$WL_ibm, maxh = 3, N = 10000, xcond = c(560, 600)) tf(1, \"location\") #> [1] 604.1339  tf1000pdf <- tf(3, \"pdf\") tf1000cdf <- tf(3, \"cdf\") gbutils::plotpdf(tf1000pdf, cdf = tf1000cdf)   ## plot the exact and simulated pdf's together for comparison gbutils::plotpdf(tfepdf, cdf = tfecdf) curve(tf1000pdf, add = TRUE, col = \"red\")   ## get the raw data tfs <- tf(1, \"sampled\") apply(tfs, 2, mean) # location for lags from 1 to maxh (here 3) #> [1] 604.1339 604.3950 604.3542  tf(1, \"location\") #> [1] 604.1339 tf(1, \"variance\") #> [1] 412.8627 tf(1, \"sd\") #> [1] 20.31902 mix_variance(exampleModels$WL_ibm, xcond = c(560, 600)) #> [1] 413.0203 sqrt(mix_variance(exampleModels$WL_ibm, xcond = c(560, 600))) #> [1] 20.3229  mix_kurtosis(exampleModels$WL_ibm, xcond = c(359, 200)) #> [1] 1.135385 mix_kurtosis(exampleModels$WL_ibm, xcond = c(359, 400)) #> [1] 1.392797"},{"path":"https://geobosh.github.io/mixAR/reference/noise_dist-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function noise_dist in package mixAR — noise_dist-methods","title":"Methods for function noise_dist in package mixAR — noise_dist-methods","text":"Methods function noise_dist package mixAR","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_dist-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function noise_dist in package mixAR — noise_dist-methods","text":"signature(model = \"MixAR\")  signature(model = \"MixARGaussian\")  signature(model = \"MixARgen\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/noise_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal mixAR functions — noise_dist","title":"Internal mixAR functions — noise_dist","text":"Functions distributions components MixAR models","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal mixAR functions — noise_dist","text":"","code":"get_edist(model) noise_dist(model, what, expand = FALSE) noise_rand(model, expand = FALSE) noise_params(model) set_noise_params(model, nu)"},{"path":"https://geobosh.github.io/mixAR/reference/noise_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal mixAR functions — noise_dist","text":"model model. property, character string. expand TRUE, expand list length equal number     components, see Details. nu degrees freedom.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal mixAR functions — noise_dist","text":"get_edist gives distributions noise components   model.   noise_dist gives property noise   distribution.   noise_rand gives list functions simulation   component distributions. case, list contains one element component   length one, element common   components.  force complete list even case, use   expand = TRUE. noise_params gives parameters model numeric   vector. distribution specified list. Element \"dist\" contain   distribution. Element \"generator\" function generates   distribution like one specified. \"dist\" absent NULL,   generator called generate distribution object. Initially distribution used slot dist.   compatibility old code using format, still   supported.","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/noise_moment-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute moments of the noise components — noise_moment-methods","title":"Compute moments of the noise components — noise_moment-methods","text":"Compute moments noise components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_moment-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute moments of the noise components — noise_moment-methods","text":"","code":"noise_moment(model, k)"},{"path":"https://geobosh.github.io/mixAR/reference/noise_moment-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute moments of the noise components — noise_moment-methods","text":"model MixAR model. k moment compute?","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_moment-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute moments of the noise components — noise_moment-methods","text":"signature(model = \"\", k = \"\")  signature(model = \"MixARGaussian\", k = \"numeric\")  signature(model = \"MixARgen\", k = \"numeric\")","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_params-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function noise_params in package mixAR — noise_params-methods","title":"Methods for function noise_params in package mixAR — noise_params-methods","text":"Methods function noise_params package mixAR","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_params-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function noise_params in package mixAR — noise_params-methods","text":"signature(model = \"MixAR\")  signature(model = \"MixARgen\")","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_rand-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function noise_rand in package mixAR — noise_rand-methods","title":"Methods for function noise_rand in package mixAR — noise_rand-methods","text":"Methods function noise_rand package mixAR","code":""},{"path":"https://geobosh.github.io/mixAR/reference/noise_rand-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function noise_rand in package mixAR — noise_rand-methods","text":"signature(model = \"MixAR\")  signature(model = \"MixARGaussian\")  signature(model = \"MixARgen\")","code":""},{"path":"https://geobosh.github.io/mixAR/reference/parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or extract the parameters of MixAR objects — parameters","title":"Set or extract the parameters of MixAR objects — parameters","text":"Set extract parameters MixAR objects.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or extract the parameters of MixAR objects — parameters","text":"","code":"parameters(model, namesflag = FALSE, drop = character(0))  parameters(model) <- value # S4 method for MixAR parameters(model) <- value # S4 method for ANY parameters(model) <- value"},{"path":"https://geobosh.github.io/mixAR/reference/parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or extract the parameters of MixAR objects — parameters","text":"model model. namesflag TRUE, generate names. drop names parameters include returned value,     character vector. default return parameters, see     Details. value values parameters, numeric.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set or extract the parameters of MixAR objects — parameters","text":"generic function. dispatch argument model.   default calls coef. parameters extracts parameters MixAR object.   returns numeric vector. namesflag TRUE   returned vector named, parameters can referred   names. Argument drop character vector giving names   parameters included returned value. function can useful setting parameters optimisation   routines. set_parameters deprecated,   use parameters(model) <- value instead.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or extract the parameters of MixAR objects — parameters","text":"vector parameters, maybe names.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/parameters.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Set or extract the parameters of MixAR objects — parameters","text":"signature(model = \"\")  signature(model = \"MixAR\")","code":""},{"path":"https://geobosh.github.io/mixAR/reference/parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or extract the parameters of MixAR objects — parameters","text":"","code":"parameters(exampleModels$WL_ibm) #>  [1]  2.0000  2.0000  1.0000  0.5439  0.4176  0.0385  0.0000  0.0000  0.0000 #> [10]  4.8227  6.0082 18.1716  0.6792  0.3208  1.6711 -0.6711  1.0000 parameters(exampleModels$WL_ibm, namesflag = TRUE) #>  order1  order2  order3   prob1   prob2   prob3  shift1  shift2  shift3  scale1  #>  2.0000  2.0000  1.0000  0.5439  0.4176  0.0385  0.0000  0.0000  0.0000  4.8227  #>  scale2  scale3   ar_11   ar_12   ar_21   ar_22   ar_31  #>  6.0082 18.1716  0.6792  0.3208  1.6711 -0.6711  1.0000  ## drop orders parameters(exampleModels$WL_ibm, namesflag = TRUE, drop = \"order\") #>   prob1   prob2   prob3  shift1  shift2  shift3  scale1  scale2  scale3   ar_11  #>  0.5439  0.4176  0.0385  0.0000  0.0000  0.0000  4.8227  6.0082 18.1716  0.6792  #>   ar_12   ar_21   ar_22   ar_31  #>  0.3208  1.6711 -0.6711  1.0000  ## drop orders and mixing weights parameters(exampleModels$WL_ibm, namesflag = TRUE, drop = c(\"order\", \"prob\")) #>  shift1  shift2  shift3  scale1  scale2  scale3   ar_11   ar_12   ar_21   ar_22  #>  0.0000  0.0000  0.0000  4.8227  6.0082 18.1716  0.6792  0.3208  1.6711 -0.6711  #>   ar_31  #>  1.0000   parameters(exampleModels$WL_I,  namesflag = TRUE) #> order1 order2 order3  prob1  prob2  prob3 shift1 shift2 shift3 scale1 scale2  #>   2.00   1.00   3.00   0.40   0.30   0.30   0.00   0.00  -5.00   1.00   1.00  #> scale3  ar_11  ar_12  ar_21  ar_31  ar_32  ar_33  #>   5.00   0.90  -0.60  -0.50   1.50  -0.74   0.12  parameters(exampleModels$WL_II, namesflag = TRUE) #> order1 order2 order3  prob1  prob2  prob3 shift1 shift2 shift3 scale1 scale2  #>    2.0    2.0    2.0    0.4    0.3    0.3    5.0    0.0   -5.0    1.0    1.0  #> scale3  ar_11  ar_12  ar_21  ar_22  ar_31  ar_32  #>    5.0    0.9   -0.6   -0.7    0.0    0.0    0.8"},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Infix operator to apply functions to matrix-like objects — percent_of","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"infix operator %% generic function applies   functions objects.  page describes function   methods defined package mixAR.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"","code":"\"%of%\"(e1, e2) e1 %of% e2"},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"e1 usually function, name function, character vector,     list functions, see Details. e2 object, usually matrix-like.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"%% generic function dispatch arguments.   intended used mainly infix form. %% transforms “column” matrix-like object   function. e1 specifies single function, applied   columns. Otherwise length(e1) equal number    “columns” e2 e1[[]] applied   -th “column” e2. mental model first argument, e1, (converted   ) list functions containing one function column   e2. -th function applied element -th   column. methods \"MixComp\" objects allow transparent   convenient computing \"MixAR\" objects.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"default method, matrix;   methods e2 class MixComp, MixComp  object slot m replaced result applying e1 elements, see descriptions individual   methods details;","code":""},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"descriptions methods %% defined   package mixAR.  signature(e1 = \"\", e2 = \"\") default method. uses apply() evaluate       e1 element matrix e2, without       checking arguments. arguments suitable       apply(), error messages come . ,       method e1 function (name function)       e2 matrix array.  signature(e1 = \"function\", e2 = \"MixComp\") Create (return) MixComp object slot m       replaced result applying function e1       element MixComp object e2, see class       \"MixComp\".  signature(e1 = \"character\", e2 = \"MixComp\") e1 contains names one functions.        length(e1) = 1, equivalent method       e1 class \"function\". length(e1) > 1, function       specified e1[] applied ith column       e2@m.  case recycling: e1 must       ncol(e2@m) elements.  signature(e1 = \"list\", e2 = \"MixComp\") element e1 function name       function. works analogously method e1       class \"character\".  length(e1) = 1,       e1[[1]] applied element       e1@m. Otherwise, length(e1) > 1,       e1[[]] applied ith column e2@m.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"code rather inefficient methods. Maybe require functions first argument   vectorised. (methods effectively assume .)","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/percent_of.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infix operator to apply functions to matrix-like objects — percent_of","text":"","code":"m <- matrix(rnorm(18), ncol = 3) ## defult method pm1 <- pnorm %of% m f3 <- list(pnorm, function(x, ...) pnorm(x, mean = 0.1),                   function(x, ...) pnorm(x, mean = -0.1) ) ## no method for f from \"list\" yet: ## pm2 <- f3 %of% m  mc <- new(\"MixComp\", m = m) pnorm %of% mc #> An object of class \"MixComp\" #> Slot \"m\": #>           [,1]      [,2]      [,3] #> [1,] 0.6331502 0.1160244 0.6740943 #> [2,] 0.4306943 0.1910889 0.3883076 #> [3,] 0.5201271 0.5757670 0.9257244 #> [4,] 0.3059220 0.2870982 0.2739692 #> [5,] 0.2498748 0.3089111 0.9584489 #> [6,] 0.8040861 0.1328869 0.9665520 #>  pmc3 <- f3 %of% mc ## result is equivalent to applying f3[[i] to m[ , i]: all.equal(pmc3@m, cbind(f3[[1]](m[ , 1]), f3[[2]](m[ , 2]), f3[[3]](m[ , 3]))) #> [1] TRUE"},{"path":"https://geobosh.github.io/mixAR/reference/permn_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"All permutations of the columns of a matrix — permn_cols","title":"All permutations of the columns of a matrix — permn_cols","text":"permutations columns matrix","code":""},{"path":"https://geobosh.github.io/mixAR/reference/permn_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All permutations of the columns of a matrix — permn_cols","text":"","code":"permn_cols(m)"},{"path":"https://geobosh.github.io/mixAR/reference/permn_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All permutations of the columns of a matrix — permn_cols","text":"m matrix","code":""},{"path":"https://geobosh.github.io/mixAR/reference/permn_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"All permutations of the columns of a matrix — permn_cols","text":"function wrapper   permn package `combinat'.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/permn_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All permutations of the columns of a matrix — permn_cols","text":"list one element permutation columns.   element list unnamed list two components: permutation, vector positive integers, matrix obtained permuting columns m.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/permn_cols.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"All permutations of the columns of a matrix — permn_cols","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/permn_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All permutations of the columns of a matrix — permn_cols","text":"","code":"m <- matrix(c(11:14,21:24,31:34), ncol=3) pm <- permn_cols(m) pm[[2]] #> [[1]] #> [1] 1 3 2 #>  #> [[2]] #>      [,1] [,2] [,3] #> [1,]   11   31   21 #> [2,]   12   32   22 #> [3,]   13   33   23 #> [4,]   14   34   24 #>"},{"path":"https://geobosh.github.io/mixAR/reference/predict_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact predictive parameters for multi-step MixAR prediction — predict_coef","title":"Exact predictive parameters for multi-step MixAR prediction — predict_coef","text":"Exact predictive parameters multi-step MixAR prediction.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/predict_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact predictive parameters for multi-step MixAR prediction — predict_coef","text":"","code":"predict_coef(model, maxh)"},{"path":"https://geobosh.github.io/mixAR/reference/predict_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact predictive parameters for multi-step MixAR prediction — predict_coef","text":"model MixAR model. maxh maximal horizon.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/predict_coef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exact predictive parameters for multi-step MixAR prediction — predict_coef","text":"predict_coef() implements method   Boshnakov (2009)  h-step prediction   MixAR processes. h-step predictive distribution MixAR   distribution \\(g^h\\) components function computes   parameters. predict_coef() implements results   Boshnakov (2009)  compute parameters   predictive distributions.  predict_coef() mostly   helper function, use multiStep_dist   prediction/forecasting (exact method multiStep_dist    uses predict_coef() main work). predict_coef() returns list lists containing   quantities needed horizon \\(h\\), see section Value. Alternatiely, parameters can obtained MixAR models   calling function generated exact method   multiStep_dist argument = \"MixAR\".","code":""},{"path":"https://geobosh.github.io/mixAR/reference/predict_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exact predictive parameters for multi-step MixAR prediction — predict_coef","text":"list components: arcoefs list, arcoefs[[h]] gives ar coefficients     h-step predictive distribution. sigmas list, sigmas[[h]]     sigmas[[h]] matrix, \\(k\\)th column contains     theta coefficients needed compute \\(sigma_k\\) formula     sigma Equation (16) (see Boshnakov 2009) .     paper index tuple \\((k_1,…,k_h)\\) clarity.     code tuple \\((k_1,…,k_h)\\) mapped linear index     \\(1,\\ldots,g^h\\) (\\(g^h\\) tuples horizon \\(h\\),     since mixture \\(g^h\\) components). probs list, probs[[h]] gives mixture weights     h-step predictive distribution. sStable list, sigmas[[h]] gives scale parameters     h-step predictive distribution.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/predict_coef.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Exact predictive parameters for multi-step MixAR prediction — predict_coef","text":"Boshnakov GN (2009). “Analytic expressions predictive distributions mixture autoregressive models.” Stat. Probab. Lett. , 79(15), 1704-1709. doi: 10.1016/j.spl.2009.04.009 .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/predict_coef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exact predictive parameters for multi-step MixAR prediction — predict_coef","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/ragged.html","id":null,"dir":"Reference","previous_headings":"","what":"Small utilities for ragged objects — ragged","title":"Small utilities for ragged objects — ragged","text":"Small utilities ragged objects.   Modify elements raggedCoef objects, extract vector.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ragged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small utilities for ragged objects — ragged","text":"","code":"rag_modify(rag, v) ragged2vec(x)"},{"path":"https://geobosh.github.io/mixAR/reference/ragged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Small utilities for ragged objects — ragged","text":"rag raggedCoef object modified. v vector values replace old ones. x raggedCoef object.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ragged.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Small utilities for ragged objects — ragged","text":"error occur length v equal   sum(rag@p). rag_modify , sense, inverse ragged2vec.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ragged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small utilities for ragged objects — ragged","text":"rag_modify, raggedCoef object order rag coefficients replaced new values.   ragged2vec, numeric vector.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ragged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small utilities for ragged objects — ragged","text":"","code":"rag1 <- new(\"raggedCoef\", list(1, 2:3, 4:6)) a1 <- (1:6)^2 rag1a <- rag_modify(rag1, a1)  rag2 <- new(\"raggedCoef\", list(1, numeric(0), 4:6)) # a zero-length ccomponent a2 <- (1:4)^2 rag2a <- rag_modify(rag2, a2)"},{"path":"https://geobosh.github.io/mixAR/reference/ragged2char.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a ragged list into a matrix of characters — ragged2char","title":"Convert a ragged list into a matrix of characters — ragged2char","text":"function transforms ragged list matrix characters.   used mixAR output visualisation purposes.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ragged2char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a ragged list into a matrix of characters — ragged2char","text":"","code":"ragged2char(raglist, filler = NA_character_)"},{"path":"https://geobosh.github.io/mixAR/reference/ragged2char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a ragged list into a matrix of characters — ragged2char","text":"raglist ragged list (raggedCoef). filler character filling order mismatches.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ragged2char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a ragged list into a matrix of characters — ragged2char","text":"ragged2char converts ragged list character matrix   many columns longest component list, filling   missing entries values argument filler. latter   defaults NA. MixAR context -th row represents AR coefficients   -th component.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ragged2char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a ragged list into a matrix of characters — ragged2char","text":"character matrix","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ragged2char.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a ragged list into a matrix of characters — ragged2char","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/ragged2char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a ragged list into a matrix of characters — ragged2char","text":"","code":"li1 <- list(1.5, c(1.51, 1.522), c(10.311, 1.31, 1.313)) ragged2char(li1) #>      [,1]     [,2]    [,3]    #> [1,] \" 1.500\" NA      NA      #> [2,] \" 1.510\" \"1.522\" NA      #> [3,] \"10.311\" \"1.310\" \"1.313\" ragged2char(li1, \"\") #>      [,1]     [,2]    [,3]    #> [1,] \" 1.500\" \"\"      \"\"      #> [2,] \" 1.510\" \"1.522\" \"\"      #> [3,] \"10.311\" \"1.310\" \"1.313\""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"models several several vectors parameters, possibly   different lengths, circumstances thought   lists, others matrices suitable padding zeroes.   Class \"raggedCoef\" represents ragged lists.  package   \"MixAR\" used hold autoregressive coefficients   MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class ","text":"","code":"raggedCoef(p, value = NA_real_)"},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class ","text":"p orders, vector integers. value typically, list, see Details.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class ","text":"Class \"raggedCoef\" objects can considered   , lists matrices. elements list vectors,   possibly different lengths.  object viewed matrix,   element list (suitably padded zeroes NAs)   represents row matrix. recommended way create objects class \"raggedCoef\"   function raggedCoef. value \"raggedCoef\" object returned.   value list, converted \"raggedCoef\" using   new().   argument p missing, inferred   lengths elements list.     argument p missing, consistency check   made ensure order object specified   p. Otherwise, value length one, replicated form   ragged list -th element vector length   p[]. Although checked, intention   value atomic class.  default value   NA_real_ give convenient way create ragged list. Finally, none applies, value effectively assumed   vector length sum(p), although cases   admissible (remember intended). case,   value reshaped ragged list match p.   convenient , example, elements ragged array   obtained optimisation routine expects plain vector.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"describe \"initialize\" method underlies   new(\"raggedCoef\", ...).  recommended way create   \"raggedCoef\" objects function raggedCoef,   see section Details. Objects can also created calls form   new(\"raggedCoef\", v), v list whose elements   numeric vectors, new(\"raggedCoef\", v1, v2, ...),   v1, v2, ... numeric vectors.  two forms equivalent   v = list(v1, v2, ...). elements list v may named.   Similarly, named arguments can used second form, say   new(\"raggedCoef\", name1 = v1, name2 = v2, ...).   cases names preserved internal representaion,   used. arguments specified result   considered undefined.    Currently, arguments list v,   ignored warning. first argument list   arguments must numeric error raised   case. completeness, mention exactly two arguments named   , p also accepted new(), eg   new(\"raggedCoef\", p = c(1, 2), =  list(3, 4:5)),   assigned slots without checking.   flexible (recommended) use raggedCoef() instead.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":": Object class \"list\" containing values. p: Object class \"numeric\" containing       lengths components .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"Indexing \"[\" treats raggedCoef object matrix,   \"[[\" treats object list (works slot ). Note difference x[2,] (  equivalent x[2]) x[[2]]---former gives vector   length max(p), potentially padded zeroes,   latter gives component ``natural'' length. replacement variants \"[\" \"[[\" change structure   object issue errors replacement value result   . situations checks deemed redundant, direct   assignments corresponding slots may used.  [ signature(x = \"raggedCoef\", = \"missing\", j = \"missing\", drop = \"\"): [ signature(x = \"raggedCoef\", = \"missing\", j = \"numeric\", drop = \"\"): [ signature(x = \"raggedCoef\", = \"numeric\", j = \"missing\", drop = \"\"): [ signature(x = \"raggedCoef\", = \"numeric\", j = \"numeric\", drop = \"\"):       Indexing \"[\" treats raggedCoef object matrix       one row component number columns equal       max(p). However, x[2] equivalent x[2,]       different treatment matrix objects       base R. [[ signature(x = \"raggedCoef\", = \"\", j = \"missing\"): [[ signature(x = \"raggedCoef\", = \"\", j = \"\"):       \"[[\" extracts corresponding element slot . [[<- signature(x = \"raggedCoef\", = \"\", j = \"\", value = \"numeric\"):       Replace j-th element -th row value.       arguments must scalars. [[<- signature(x = \"raggedCoef\", = \"\", j = \"missing\", value = \"numeric\"): [<- signature(x = \"raggedCoef\", = \"\", j = \"missing\", value = \"numeric\"):       Replace -th row value. Argument must       scalar length value must       x@[[]]. methods \"[\" \"[[\"       signature coinside. [<- signature(x = \"raggedCoef\", = \"\", j = \"missing\", value = \"list\"):       elements value must lengths       elements replacing. [<- signature(x = \"raggedCoef\", = \"\", j = \"missing\", value = \"matrix\"):        essentially reverse od corresponding        non-replacement operator. value must least many        columns longest element x replaced. [<- signature(x = \"raggedCoef\", = \"\", j = \"\", value = \"numeric\"): ... [<- signature(x = \"raggedCoef\", = \"missing\", j = \"missing\", value = \"list\"): ... [<- signature(x = \"raggedCoef\", = \"missing\", j = \"missing\", value = \"matrix\"): ... [<- signature(x = \"raggedCoef\", = \"missing\", j = \"missing\", value = \"numeric\"): ... initialize signature(.Object = \"raggedCoef\"):       Creates objects class raggedCoef. method used       internally new(). Users use new()       creation objects class, see examples. show signature(object = \"raggedCoef\"): ... mixFilter signature(x = \"numeric\", coef = \"raggedCoef\", index = \"numeric\"):       Apply mixture filter time series. row_lengths signature(x = \"raggedCoef\"):       Gives x@p, lengths(x@). length signature(x = \"raggedCoef\"):       Gives total number coefficients (sum(x@p)). anyNA signature(x = \"raggedCoef\"):       NA's x@? dim signature(x = \"raggedCoef\"):       dimension object, viewed matrix.       presence method also ensures nrow()       related functions give expected result.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"Slot p redundant convenient.","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoef-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"ragged1 <- list(1, 2:3, 4:6) ragged2 <- list(a = 1, b = 2:3, c = 4:6)  raggedCoef(1:3)          # only order given, fill with NA's #> An object of class \"raggedCoef\" #> Number of rows: 3  #> Components' lengths: 1 2 3  #>  #>             co_1 co_2 co_3 #> Component_1  NA            #> Component_2  NA   NA       #> Component_3  NA   NA   NA  #>  raggedCoef(1:3, 0)       # fill with a number (zero in this case) #> An object of class \"raggedCoef\" #> Number of rows: 3  #> Components' lengths: 1 2 3  #>  #>             co_1 co_2 co_3 #> Component_1   0            #> Component_2   0    0       #> Component_3   0    0    0  #>   ## init with a list raggedCoef(ragged1) #> An object of class \"raggedCoef\" #> Number of rows: 3  #> Components' lengths: 1 2 3  #>  #>             co_1 co_2 co_3 #> Component_1   1            #> Component_2   2    3       #> Component_3   4    5    6  #>  raggedCoef(value = ragged1)  #> An object of class \"raggedCoef\" #> Number of rows: 3  #> Components' lengths: 1 2 3  #>  #>             co_1 co_2 co_3 #> Component_1   1            #> Component_2   2    3       #> Component_3   4    5    6  #>   ## error, since the shape of ragged1 is not c(2, 2, 3): ## raggedCoef(c(2, 2, 3), value = ragged1)  ## init with a flattened list raggedCoef(p = 1:3, value = 1:6) #> An object of class \"raggedCoef\" #> Number of rows: 3  #> Components' lengths: 1 2 3  #>  #>             co_1 co_2 co_3 #> Component_1   1            #> Component_2   2    3       #> Component_3   4    5    6  #>   ## specify each component separately ragA <- new(\"raggedCoef\", 1, 2:3, 4:6) ragB <- new(\"raggedCoef\", list(1, 2:3, 4:6))  # same identical(ragA, ragB) #TRUE #> [1] TRUE  ## extract as a matrix ragA[] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    2    3    0 #> [3,]    4    5    6  ## extract the 2nd component ragA[2]      # c(2, 3, 0) (\"[\" pads with 0's) #> [1] 2 3 0 ragA[[2]]    # c(2, 3)    (\"[[\" does not pad) #> [1] 2 3  ## get the 2nd and 3rd components as a matrix ragA[2:3, ]    # \"[\" treats object (almost) as matrix #>      [,1] [,2] [,3] #> [1,]    2    3    0 #> [2,]    4    5    6 ragA[2:3]      # same (though not as for \"matrix\") #>      [,1] [,2] [,3] #> [1,]    2    3    0 #> [2,]    4    5    6  ## names are kept in the list but currently not used  ragC  <- new(\"raggedCoef\", list(a = 1, b = 2:3, c = 4:6)) ragC1 <- new(\"raggedCoef\", a = 1, b = 2:3, c = 4:6) identical(ragC, ragC1) # TRUE #> [1] TRUE names(ragC@a) # [1] \"a\" \"b\" \"c\" #> [1] \"a\" \"b\" \"c\"  length(ragA) #> [1] 6 dim(ragA) #> [1] 3 3 c(nrow(ragA), ncol(ragA)) #> [1] 3 3 c(NROW(ragA), NCOL(ragA)) #> [1] 3 3"},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefS-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Ragged list used hold coefficients MixAR models seasonal AR parameters.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefS-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects created calls form new(\"raggedCoefS\", = list(v1, v2 , ...), = list(vs1, vs2, ...), s). orders p ps specified, consistency check made.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefS-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"Object class \"list\" containing AR values. element list must \"numeric\" p Object class \"numeric\" containing lengths components . missing, generated based lengths elements . Object class \"list\" containing seasonal AR values. element list must \"numeric\" ps Object class \"numeric\" containing lengths elements . missing, generated based lengths elements . s single element \"numeric\" vector determining seasonality model(monthly, quarterly, etc..).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefS-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"Indexing \"[\" treats raggedCoef object matrix    (one row component),   \"[[\" treats object list (works slot ). Specifically,   \"[[1]]\" picks systematic AR parameters, \"[[2]]\" picks seasonal AR   parameters. replacement variants \"[\" \"[[\" change structure   object. Replacement methods work subsets   x[[]], x[[]][[j]], x[[]][[j]][k] suitable ,    j k. must equal 1 x@2 x@. [ signature(x = \"raggedCoefS\", = \"missing\", j = \"missing\"): [ signature(x = \"raggedCoefS\", = \"missing\", j =         \"missing\"): [ signature(x = \"raggedCoefS\", = \"numeric\", j =         \"missing\"): [ signature(x = \"raggedCoefS\", = \"numeric\", j = \"numeric\"):       Indexing \"[\" treats raggedCoef object matrix       one row component number columns equal       max(p) + max(ps) increasing lag.        However, x[2] equivalent x[2,]       different treatment matrix objects       base R. [[ signature(x = \"raggedCoefS\"), = \"numeric\": [[ signature(x = \"raggedCoefS\"), = \"numeric\", j = \"numeric\": [[ signature(x = \"raggedCoefS\"), = \"numeric\", j = \"numeric\", k = \"numeric\":","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefS-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Davide Ravagli","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefS-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"showClass(\"raggedCoefS\") #> Class \"raggedCoefS\" [package \"mixAR\"] #>  #> Slots: #>                                                #> Name:       as      ps       s       a       p #> Class:    list numeric numeric    list numeric #>  #> Extends: \"raggedCoef\"  ragA <- new(\"raggedCoefS\", a = list( c(0.5, -0.5), 1),             as = list(0, c(0.3, -0.1) ), s = 12) ragB <- new(\"raggedCoefS\", a = list( c(0.5, -0.5), 1), p = c(2, 1),             as = list(0, c(0.3, -0.1) ), ps = c(1, 2), s = 12)  # same  ## Elements selection examples  ragA[]             ## matrix of coefficients #>      [,1] [,2] [,3] [,4] #> [1,]  0.5 -0.5  0.0  0.0 #> [2,]  1.0  0.0  0.3 -0.1 ragA[1]; ragA[1, ] ## vector of coefficients from first component #> [1]  0.5 -0.5  0.0  0.0 #> [1]  0.5 -0.5  0.0  0.0 ragA[[2]]          ## list of seasonal AR parameters #> [[1]] #> [1] 0 #>  #> [[2]] #> [1]  0.3 -0.1 #>  ragA[[2]][[1]]      ## vector of seasonal AR parameters from first component #> [1] 0  ## Replacement of values in 'raggedCoefS' objects   ragB[[2]] <- list(1, c(-0.5,0.5)) ragB[[2]][[2]] <- c(20, 22) ragB[[1]][[1]][1] <- 0"},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefV-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Ragged list used hold coefficients MixVAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefV-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects created calls form   new(\"raggedCoefV\", = list(v1, v2 ,...).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefV-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":": Object class \"list\" containing AR values. element     list must \"array\".  p: Object class \"numeric\" containing length arrays     (AR orders). missing, generated based lengths     elements .","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefV-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"Indexing \"[\" \"[[\" works slot . \"[\" \"[[\" can use alternatively. Specifically, \"[]\" \"[[]]\"    produce result, complete list AR coefficients.    Similarly, [,], [] [[]] return    ^th element list, array ^th component.  [,j]    returns array j^th lag autoregressive parameters    component.  [ signature(x = \"raggedCoefV\", = \"missing\", j = \"\", drop = \"\"): ... [ signature(x = \"raggedCoefV\", = \"missing\", j = \"numeric\", drop = \"\"): ... [ signature(x = \"raggedCoefV\", = \"numeric\", j = \"missing\", drop = \"\"): ... [ signature(x = \"raggedCoefV\", = \"numeric\", j = \"numeric\", drop = \"\"): ... [[ signature(x = \"raggedCoefV\", = \"missing\", j = \"\"): ... [[ signature(x = \"raggedCoefV\", = \"numeric\", j = \"\"): ... initialize signature(.Object = \"raggedCoefV\"): ... show signature(object = \"raggedCoefV\"): ...","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefV-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Davide Ravagli","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/raggedCoefV-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"showClass(\"raggedCoefV\") #> Class \"raggedCoefV\" [package \"mixAR\"] #>  #> Slots: #>                        #> Name:        a       p #> Class:    list numeric  AR <- list() AR[[1]] <- array(c(0.0973, -0.0499,  0.2927,  0.4256,  ## VAR(2;4)                   -0.0429,  0.0229, -0.1515, -0.1795,                   -0.0837, -0.1060, -0.1530,  0.1947,                   -0.1690, -0.0903,  0.1959,  0.0955), dim=c(2,2,4)) AR[[2]] <- array(c(0.3243,  0.2648,  0.4956,  0.2870,  ## VAR(2;3)                   -0.1488,  0.0454, -0.0593, -0.3629,                    0.1314,  0.0274,  0.0637,  0.0485), dim=c(2,2,3))                     new(\"raggedCoefV\", AR) #> An object of class \"raggedCoefV\" #> Number of rows: 2  #> Number of series: 2  #> Components' lengths: 4 3  #>  #> , , 1 #>  #>                co_1           co_2            co_3            co_4        #> Component_1  0.0973 0.2927 -0.0429 -0.1515 -0.0837 -0.1530 -0.1690 0.1959 #> Component_2 -0.0499 0.4256  0.0229 -0.1795 -0.1060  0.1947 -0.0903 0.0955 #>  #> , , 2 #>  #>               co_1           co_2           co_3        co_4  #> Component_1 0.3243 0.4956 -0.1488 -0.0593 0.1314 0.0637       #> Component_2 0.2648 0.2870  0.0454 -0.3629 0.0274 0.0485       #>  #> Component orders: 4 3  #>  new(\"raggedCoefV\", a=AR, p=c(4,3)) #> An object of class \"raggedCoefV\" #> Number of rows: 2  #> Number of series: 2  #> Components' lengths: 4 3  #>  #> , , 1 #>  #>                co_1           co_2            co_3            co_4        #> Component_1  0.0973 0.2927 -0.0429 -0.1515 -0.0837 -0.1530 -0.1690 0.1959 #> Component_2 -0.0499 0.4256  0.0229 -0.1795 -0.1060  0.1947 -0.0903 0.0955 #>  #> , , 2 #>  #>               co_1           co_2           co_3        co_4  #> Component_1 0.3243 0.4956 -0.1488 -0.0593 0.1314 0.0637       #> Component_2 0.2648 0.2870  0.0454 -0.3629 0.0274 0.0485       #>  #> Component orders: 4 3  #>"},{"path":"https://geobosh.github.io/mixAR/reference/raghat1.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a time series with options to shift and scale — raghat1","title":"Filter a time series with options to shift and scale — raghat1","text":"Filter time series options shift scale. function   used mixFilter.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raghat1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a time series with options to shift and scale — raghat1","text":"","code":"raghat1(filter, x, index, shift = 0, residual = FALSE, scale = 1)"},{"path":"https://geobosh.github.io/mixAR/reference/raghat1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a time series with options to shift and scale — raghat1","text":"filter coefficients filter, numeric, see Details. x time series, numeric. index indices compute filtered values, numeric. shift constant added filtered element, number. residual TRUE calculate `residual', otherwise calculate `hat' value. scale scale != 1 calculate scaled residuals divividing     value. Probably meaningful residual=TRUE.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raghat1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter a time series with options to shift and scale — raghat1","text":"function used mixFilter. Applies autoregressive   filter time series indices specified index. Note `filter' equivalent calculating one-step   predictions (residuals residual=TRUE)   autoregressions. index specify indices smaller   length(filter)+1 larger length(x)+1.  value   length(x)+1 can legitimately used calculate prediction   (residual course) first value end   series.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raghat1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a time series with options to shift and scale — raghat1","text":"numeric vector length equal length(index).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/raghat1.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Filter a time series with options to shift and scale — raghat1","text":"probably use filter purposes   package filter usually short calculation   vectorised w.r.t. index, terribly slow.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/randomArCoefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Random initial values for MixAR estimation — randomArCoefficients","title":"Random initial values for MixAR estimation — randomArCoefficients","text":"Translations functions Mathematica sources. used currently?","code":""},{"path":"https://geobosh.github.io/mixAR/reference/randomArCoefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random initial values for MixAR estimation — randomArCoefficients","text":"","code":"randomArCoefficients(ts, wv, pk, pmax, partempl, sub_size = 10,                      condthr = 10, nattempt = 10, startfrom = pmax + 1)  randomMarParametersKernel(ts, ww, pk, pmax, partempl, ...)  randomMarResiduals(ts, p, partempl)  tsDesignMatrixExtended(ts, p, ind, partempl)"},{"path":"https://geobosh.github.io/mixAR/reference/randomArCoefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random initial values for MixAR estimation — randomArCoefficients","text":"ts time series. wv,ww vector weights (?). pk AR order requested component. pmax maximal AR order model. Needed since     determined functions working single component. partempl parameter template, list containing one element mixture     component, see Details. sub_size size subsample use, default 10. condthr threshold condition number. nattempt condthr reached nattempt attempts,     function returns results last subset tried. startfrom starting index (ts) use subsampling, default     pmax + 1. ... arguments pass randomArCoefficients(). p vector non-negative integers, MixAR order. ind vector positive integers specifying indices     observations use “response” variable.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/randomArCoefficients.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random initial values for MixAR estimation — randomArCoefficients","text":"randomArCoefficients tries small subsamples (necessarilly   contiguous) observations search cluster hopefully   belonging one mixture component estimates corresponding   shift AR parameters. randomMarResiduals selects random parameters mixture   component returns corresponding residuals.   randomMarParametersKernel helper function   computation one component. tsDesignMatrixExtended forms extended design matrix   corresponding subsample. used least square estimation   parameters.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/randomArCoefficients.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Random initial values for MixAR estimation — randomArCoefficients","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/row_length-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function row_lengths in package mixAR — row_lengths-methods","title":"Methods for function row_lengths in package mixAR — row_lengths-methods","text":"Determine lengths `rows' ragged object.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/row_length-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function row_lengths in package mixAR — row_lengths-methods","text":"objects package contain (effectively) lists vectors.   vectors considered `rows' function returns   lengths (vector). signature(x = \"\") default method. Applies length elements   argument (2020-03-28: now using lengths(x)). signature(x = \"raggedCoef\") Returns lengths rows components, numeric vector. signature(x = \"MixAR\") Returns AR orders model components, numeric vector.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/sampZpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling functions for Bayesian analysis of mixture autoregressive\n  models — sampZpi","title":"Sampling functions for Bayesian analysis of mixture autoregressive\n  models — sampZpi","text":"Sampling functions Bayesian analysis mixture autoregressive   models. Draws observations posterior distributions latent   variables Z_ts parameters mixture autoregressive   models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/sampZpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling functions for Bayesian analysis of mixture autoregressive\n  models — sampZpi","text":"","code":"sampZpi(y, pk, prob, mu, AR, sigma, nsim, d) sampMuShift(y, pk, prec, nk, shift, z, AR, nsim) sampSigmaTau(y, pk, prec, nk, AR, mu, z, a, c, nsim)"},{"path":"https://geobosh.github.io/mixAR/reference/sampZpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling functions for Bayesian analysis of mixture autoregressive\n  models — sampZpi","text":"y time series (currently  numeric vector). pk numeric vector length g. autoregressive order     component. prob numeric vector length g. Current mixing weights. mu numeric vector length g. Current mean parameters. shift numeric vector length g. Current shift parameters. AR list g elements. Autoregressive coefficients     component. sigma numeric vector length g. Current scale parameters nsim dessired sample size. d numeric vector length g. Hyperparameters     Dirichlet prior. missing, vector 1s generated.     length 1, creates vector length g given     number. prec numeric vector length g. Current precision     parameters. nk output sampZpi. Component sum latent variables Z_t. z output latentZ sampZpi. matrix containing     simulated latent variables. ,c hyperparameters.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/sampZpi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling functions for Bayesian analysis of mixture autoregressive\n  models — sampZpi","text":"sampZpi draws observations posterior distributions   latent variables Z_ts mixing weights Mixture   autoregressive model. sampSigmaTau draws observations posterior distributions   precisions tau_k Mixture autoregressive model,   obtains scales sigma_k transformation. sampMuShift Draws observations posterior distributions   means mu_k Mixture autoregressive model, obtains   shifts phi_k0 transformation.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/sampZpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling functions for Bayesian analysis of mixture autoregressive\n  models — sampZpi","text":"sampZpi, list containing following elements: mix_weights matrix nrow = nsim ncol = g:     sampled mixing weights. latentZ matrix nrow = n - p ncol = g, n equal     length(y) p equal max(pk:      simulated latent variables Z_t last nsim iterations      (functional). Specifically, row contains 1 exactly      one component, filled 0.  nk Vector length g. Column sums latentZ. sampMuShift, list containing following elements: shift matrix nrow = nsim ncol = g:      simulated shift parameters, obtained transformation     means. mu matrix nrow = nsim ncol = g:   simulated mean parameters. sampSigmaTau, list containing following elements: scale matrix nrow = nsim ncol = g:      scale parameters, obtained transformation     precisions. precision matrix nrow = nsim ncol = g:      precision parameters. lambda numeric vector length nsim simulated values      hyperparameter lambda, due hierarchical setup.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/sampZpi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling functions for Bayesian analysis of mixture autoregressive\n  models — sampZpi","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/sampZpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling functions for Bayesian analysis of mixture autoregressive\n  models — sampZpi","text":"","code":"model <- new(\"MixARGaussian\",              prob   = exampleModels$WL_At@prob,      # c(0.5, 0.5)              scale  = exampleModels$WL_At@scale,     # c(1, 2)                      arcoef = exampleModels$WL_At@arcoef@a ) # list(-0.5, 1.1)               prob  <- model@prob sigma <- model@scale prec  <- 1 / sigma ^ 2 g     <- length(model@prob) d     <- rep(1, g) pk    <- model@arcoef@p p     <- max(pk) shift <- mu <- model@shift           AR <- model@arcoef@a         model #> An object of class \"MixARGaussian\" #> Number of components: 2  #>        prob shift scale order ar_1 #> Comp_1 0.5    0     1     1   -0.5 #> Comp_2 0.5    0     2     1    1.1 #>  #> Distributions of the error components: #> \tstandard Gaussian #>   set.seed(1234) n <- 50 # 500 nsim <- 50  y <- mixAR_sim(model, n = n, init = 0) x  <- sampZpi(y, pk, prob, shift, AR, sigma, nsim = nsim, d) x1 <- sampMuShift(y, pk, prec, nk = x$nk, shift, z = x$latentZ, AR, nsim = nsim) x2 <- sampSigmaTau(y, pk, prec, nk = x$nk, AR, mu = x1$mu, z = x$latentZ,                    a = 0.2, c = 2, nsim = nsim)"},{"path":"https://geobosh.github.io/mixAR/reference/show_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Show differences between two models — show_diff","title":"Show differences between two models — show_diff","text":"Show differences two MixAR models way enables quick   comparison . generic function, package   mixAR defines methods MixAR models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/show_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show differences between two models — show_diff","text":"","code":"show_diff(model1, model2)"},{"path":"https://geobosh.github.io/mixAR/reference/show_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show differences between two models — show_diff","text":"model1,model2 MixAR models compared.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/show_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show differences between two models — show_diff","text":"show_diff() generic function dispatch   arguments. show_diff() prints differences two   models convenient form comparison. methods MixAR models   allow see differences similar models glance.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/show_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show differences between two models — show_diff","text":"function called side effect printing differences   two models useful return value.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/show_diff.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show differences between two models — show_diff","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/show_diff.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Show differences between two models — show_diff","text":"signature(model1 = \"MixAR\", model2 = \"MixAR\")  signature(model1 = \"MixARGaussian\", model2 = \"MixARgen\")  signature(model1 = \"MixARgen\", model2 = \"MixARGaussian\")  signature(model1 = \"MixARgen\", model2 = \"MixARgen\")","code":""},{"path":"https://geobosh.github.io/mixAR/reference/show_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show differences between two models — show_diff","text":"","code":"## the examples reveal that the models below ##        differ only in the noise distributions show_diff(exampleModels$WL_Ct_3, exampleModels$WL_Bt_1) #>        prob shift scale order ar_1 ar_2 ar_3 #> Comp_1   0    0     0     2     0    0       #> Comp_2   0    0     0     1     0            #> Comp_3   0    0     0     3     0    0    0  #>  #> Distributions of the error components: #>  #> \tModel 1 #> \t All components: Standard normal distribution #>  #> \tModel 2 #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 6 df #> \tComponent 3: Student t with 10 df show_diff(exampleModels$WL_Bt_1, exampleModels$WL_Ct_3) #>        prob shift scale order ar_1 ar_2 ar_3 #> Comp_1   0    0     0     2     0    0       #> Comp_2   0    0     0     1     0            #> Comp_3   0    0     0     3     0    0    0  #>  #> Distributions of the error components: #>  #> \tModel 1 #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 6 df #> \tComponent 3: Student t with 10 df #>  #> \tModel 2 #> \t All components: Standard normal distribution show_diff(exampleModels$WL_Ct_2, exampleModels$WL_Bt_3) #>        prob shift scale order ar_1 ar_2 ar_3 #> Comp_1   0    0     0     2     0    0       #> Comp_2   0    0     0     1     0            #> Comp_3   0    0     0     3     0    0    0  #>  #> Distributions of the error components: #>  #> \tModel 1: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 7 df #> \tComponent 3: Standard normal distribution #>  #> \tModel 2: #> \tComponent 1: Student t with 4 df #> \tComponent 2: Student t with 4 df #> \tComponent 3: Student t with 10 df"},{"path":"https://geobosh.github.io/mixAR/reference/simuExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform simulation experiments — simuExperiment","title":"Perform simulation experiments — simuExperiment","text":"Perform simulation experiments","code":""},{"path":"https://geobosh.github.io/mixAR/reference/simuExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform simulation experiments — simuExperiment","text":"","code":"simuExperiment(model, simu, est, N = 100, use_true = FALSE,                raw = FALSE, init_name = \"init\", keep = identity,                summary_fun = .fsummary, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/simuExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform simulation experiments — simuExperiment","text":"model model, see 'Details'. simu arguments simulation function, list, see 'Details'. est arguments estimation function, list, see 'Details'. N number simulations. use_true TRUE, use also \"true\" coefficients initial     values, see 'Details'. raw TRUE, include list estimated models   returned value. init_name name argument estimation function     specifies initial values estimation, always used,     see `Details'. keep values keep simulation run, function,   see 'Details'. summary_fun function apply end experiment   obtain summary, see 'Details'. ... additional arguments pass summary   function. NOTE: may change.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/simuExperiment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform simulation experiments — simuExperiment","text":"Argument model specifies underlying model always   needed, see examples.   Argument simu specifies simulate data.   Argument est specifies estimation procedure.   Argument N specifies number simulation runs.   remaining arguments control details simulations, mostly   returned. Basically, simuExperiment N simulation-estimation   runs.   keep function applied value obtained   run.   results keep assembled list (  'raw' results).   Finally, summary function (argument summary_fun) applied   raw list. simu est lists two elements: fun   args. fun function name   function. args list arguments function.   first argument estimation function, est$fun,   simulated data. argument inserted simuExperiment   put est$args. value returned summary function main part   result. raw = TRUE, raw list returned, well.   fields may made possible additional arguments   'Summary' 'Raw' guaranteed described . simuExperiment uses init_name use_true   TRUE arrange call estimation function initial value   model.  Obviously, simuExperiment know (  ) estimation function arguments. function specified argument keep called one   argument use_true FALSE two arguments otherwise.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/simuExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform simulation experiments — simuExperiment","text":"list one elements, depending arguments. Summary summary experiment, default sample means     standard deviations estimates. Raw list estimated models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/simuExperiment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform simulation experiments — simuExperiment","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/simuExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform simulation experiments — simuExperiment","text":"","code":"## explore dist. of the mean of a random sample of length 5. ## (only illustration, such simple cases hardly need simuExperiment) sim1 <- list(fun=\"rnorm\", args = list(n=5, mean=3, sd = 2)) est1 <- list(fun=mean, args = list())  # a basic report function fsum1 <-  function(x){ wrk <- do.call(\"c\",x)                        c(n = length(wrk), mean = mean(wrk), sd = sd(wrk))}  a1 <- simuExperiment(TRUE, simu = sim1, est = est1, N = 1000, summary_fun = fsum1)  # explore also the dist. of the sample s.d. est2 <- est1 est2$fun <- function(x) c(xbar = mean(x), s = sd(x))  a2  <- simuExperiment(TRUE, simu = sim1, est = est2, N = 1000)  # keep the raw sample means and s.d.'s for further use a2a <- simuExperiment(TRUE, simu = sim1, est = est2, N = 1000, raw = TRUE) a2a$Summary #> $mean #>     xbar        s  #> 2.948814 1.872527  #>  #> $sd #>      xbar         s  #> 0.9103828 0.6603736  #>  #> $N #> [1] 1000 #>   # replicate a2a$Summary s5 <- sapply(a2a$Raw, identity) apply(s5, 1, mean) #>     xbar        s  #> 2.948814 1.872527  apply(s5, 1, sd) #>      xbar         s  #> 0.9103828 0.6603736   hist(s5[1,], prob=TRUE) lines(density(s5[1,])) curve(dnorm(x, mean(s5[1,]), sd(s5[1,])), add = TRUE, col = \"red\")   mixAR:::.fsummary(a2a$Raw) #> $mean #>     xbar        s  #> 2.948814 1.872527  #>  #> $sd #>      xbar         s  #> 0.9103828 0.6603736  #>  #> $N #> [1] 1000 #>  mixAR:::.fsummary(a2a$Raw, merge = TRUE) #> $mean #>     xbar        s  #> 2.948814 1.872527  #>  #> $sd #>      xbar         s  #> 0.9103828 0.6603736  #>  #> $merged #>          mean        sd #> xbar 2.948814 0.9103828 #> s    1.872527 0.6603736 #>  #> $N #> [1] 1000 #>"},{"path":"https://geobosh.github.io/mixAR/reference/stdnormmoment.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","title":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","text":"Compute moments absolute moments standardised-t, t normal   distributions.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/stdnormmoment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","text":"","code":"stdnormmoment(k) stdnormabsmoment(k) stdtmoment(nu, k) stdtabsmoment(nu, k) tabsmoment(nu, k)"},{"path":"https://geobosh.github.io/mixAR/reference/stdnormmoment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","text":"k numeric vector, moments compute. nu number, degrees freedom.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/stdnormmoment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","text":"functions compute moments standardised-t standard normal   distibutions. distributions mean zero variance 1.   Standardised-t often prefferred Student-t innovation   distributions, since variance depend parameter   (degrees freedom). absolute moments usual   t-distributions provided, well. names functions start abbreviated name   distribution concerned: stdnorm (N(0,1)), stdt   (standardised-t), t (Student-t). functions names ending absmoment()   (stdnormabsmoment(), stdtabsmoment() tabsmoment())   compute absolute moments, rest (stdnormmoment()   stdtmoment()) compute ordinary moments. absolute moments valid (least) k >= 0,   necessarily integer. ordinary moments currently intended   integer moments return NaN's fractional ones,   warnings. Note Student-t standardised-t \\(\\nu\\) degrees   freedom finite (absolute) moments \\(k<\\nu\\).   consequence, standardised-t defined \\(\\nu>2\\)    (otherwise variance infinite). stdtabsmoment returns Inf \\(k \\ge \\nu\\).    stdtmoment returns Inf even integer k's,   \\(k \\ge \\nu\\). However, odd integers returns   zero non-integer moments returns NaN.   example, first two k's smaller   nu, others : functions designed work scalar nu   enforced.","code":"stdtabsmoment(nu = 5, k = c(4, 4.5, 5, 5.5)) ##: [1]  9.00000 29.31405      Inf      Inf stdtmoment(nu = 5, k = c(4, 4.5, 5, 5.5)) ##: [1]   9 NaN   0 NaN"},{"path":"https://geobosh.github.io/mixAR/reference/stdnormmoment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","text":"numeric vector length k.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/stdnormmoment.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","text":"Würtz D, Chalabi Y, Luksan L (2006). “Parameter Estimation ARMA Models GARCH / APARCH Errors R SPlus Software Implementation.” http://www-stat.wharton.upenn.edu/%7Esteele/Courses/956/RResources/GarchAndR/WurtzEtAlGarch.pdf.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/stdnormmoment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/stdnormmoment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute moments and absolute moments of standardised-t and normal distributions — stdnormmoment","text":"","code":"## some familiar positive integer moments stdnormmoment(1:6) #> [1]  0  1  0  3  0 15 ## fractional moments of N(0,1) currently give NaN stdnormmoment(seq(1, 6, by = 0.5)) #>  [1]   0 NaN   1 NaN   0 NaN   3 NaN   0 NaN  15 ## abs moments don't need to be integer curve(stdnormabsmoment, from = 0, to = 6, type = \"l\", col = \"blue\")   ## standardised-t stdtmoment(5, 1:6) #> [1]   0   1   0   9   0 Inf stdtabsmoment(5, 1:6) #> [1] 0.7351052 1.0000000 2.2053156 9.0000000       Inf       Inf stdtabsmoment(5, 1:6) #> [1] 0.7351052 1.0000000 2.2053156 9.0000000       Inf       Inf  ## Student-t tabsmoment(5, 1:6) #> [1]  0.9490167  1.6666667  4.7450836 25.0000000        Inf        Inf"},{"path":"https://geobosh.github.io/mixAR/reference/tau2probhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate probabilities of a MixAR model from tau. — tau2probhat","title":"Estimate probabilities of a MixAR model from tau. — tau2probhat","text":"Estimate probabilities MixAR model tau.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/tau2probhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate probabilities of a MixAR model from tau. — tau2probhat","text":"","code":"tau2probhat(tau)"},{"path":"https://geobosh.github.io/mixAR/reference/tau2probhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate probabilities of a MixAR model from tau. — tau2probhat","text":"tau todo: explain","code":""},{"path":"https://geobosh.github.io/mixAR/reference/tau2probhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate probabilities of a MixAR model from tau. — tau2probhat","text":"numeric vector","code":""},{"path":"https://geobosh.github.io/mixAR/reference/test_unswitch.html","id":null,"dir":"Reference","previous_headings":"","what":"A test for 'unswitch' — test_unswitch","title":"A test for 'unswitch' — test_unswitch","text":"test 'unswitch'.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/test_unswitch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A test for 'unswitch' — test_unswitch","text":"","code":"test_unswitch(models, true_model, allperm, ...)"},{"path":"https://geobosh.github.io/mixAR/reference/test_unswitch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A test for 'unswitch' — test_unswitch","text":"models list MixAR models process. true_model MixAR model used experiment. allperm permutations try. ... additional arguments pass unswitch.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/test_unswitch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A test for 'unswitch' — test_unswitch","text":"function permutes ('switches') randomly model models calls   unswitch 'unswitch' switched models. calculates   summary statistics three sets models. summary statistics 'switched' models often   meaningless. 'unswitched' ones good. quality statistics argument models   depend obtained specifics model.   good , often done mixture experiments, estimation   initialised true values parameters, since   little scope switching case. initial values chosen   randomly, may still little switching, largely dependent   probabilities components.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/test_unswitch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A test for 'unswitch' — test_unswitch","text":"list summaries 3 sets models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/test_unswitch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A test for 'unswitch' — test_unswitch","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/test_unswitch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A test for 'unswitch' — test_unswitch","text":"","code":"## N is small for to make the examples run instantly. set.seed(1234) aII10data <- mixARExperiment(exampleModels$WL_II, N = 5, raw = TRUE,                  estargs = list(crit = 1e-4)) aII10 <- test_unswitch(aII10data$Raw, exampleModels$WL_II) aII10 #> $mean #>           original  u_original      messed    u_messed #> order1  2.00000000  2.00000000  2.00000000  2.00000000 #> order2  2.00000000  2.00000000  2.00000000  2.00000000 #> order3  2.00000000  2.00000000  2.00000000  2.00000000 #> prob1   0.38829668  0.38829668  0.36331927  0.38829668 #> prob2   0.30901576  0.30901576  0.31668405  0.30901576 #> prob3   0.30268756  0.30268756  0.31999668  0.30268756 #> shift1  5.00289458  5.00289458  2.96024801  5.00289458 #> shift2 -0.01283370 -0.01283370 -0.82408181 -0.01283370 #> shift3 -5.01701045 -5.01701045 -2.16311576 -5.01701045 #> scale1  1.02185577  1.02185577  1.00185852  1.02185577 #> scale2  1.00450866  1.00450866  2.56104168  1.00450866 #> scale3  4.83623855  4.83623855  3.29970278  4.83623855 #> ar_11   0.89954799  0.89954799  0.24984373  0.89954799 #> ar_12  -0.60315169 -0.60315169 -0.36719379 -0.60315169 #> ar_21  -0.71928615 -0.71928615 -0.09321343 -0.71928615 #> ar_22   0.01317786  0.01317786  0.18427759  0.01317786 #> ar_31   0.01190528  0.01190528  0.03553682  0.01190528 #> ar_32   0.75452662  0.75452662  0.34746899  0.75452662 #>  #> $sd #>          original u_original     messed   u_messed #> order1 2.00000000 2.00000000 2.00000000 2.00000000 #> order2 2.00000000 2.00000000 2.00000000 2.00000000 #> order3 2.00000000 2.00000000 2.00000000 2.00000000 #> prob1  0.05378105 0.05378105 0.07296112 0.05378105 #> prob2  0.04804369 0.04804369 0.05363909 0.04804369 #> prob3  0.02473113 0.02473113 0.04010385 0.02473113 #> shift1 0.17909526 0.17909526 2.77592816 0.17909526 #> shift2 0.12246861 0.12246861 3.92143063 0.12246861 #> shift3 0.50249596 0.50249596 4.72377077 0.50249596 #> scale1 0.10561787 0.10561787 0.12026810 0.10561787 #> scale2 0.09446427 0.09446427 2.09072731 0.09446427 #> scale3 0.30765087 0.30765087 2.11395212 0.30765087 #> ar_11  0.02816997 0.02816997 0.88649436 0.02816997 #> ar_12  0.01971022 0.01971022 0.32445588 0.01971022 #> ar_21  0.01197268 0.01197268 0.66828327 0.01197268 #> ar_22  0.03195056 0.03195056 0.55423397 0.03195056 #> ar_31  0.03203031 0.03203031 0.58085911 0.03203031 #> ar_32  0.04304680 0.04304680 0.62889207 0.04304680 #>  #> $summaries #> $summaries$original #> $summaries$original$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3882967  5.0028946 1.021856   2    0.89954799 -0.60315169 #> Comp_2 0.3090158 -0.0128337 1.004509   2   -0.71928615  0.01317786 #> Comp_3 0.3026876 -5.0170104 4.836239   2    0.01190528  0.75452662 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $summaries$original$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale      order ar_1       ar_2       #> Comp_1 0.05378105 0.1790953 0.10561787   2   0.02816997 0.01971022 #> Comp_2 0.04804369 0.1224686 0.09446427   2   0.01197268 0.03195056 #> Comp_3 0.02473113 0.5024960 0.30765087   2   0.03203031 0.04304680 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $summaries$u_original #> $summaries$u_original$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3882967  5.0028946 1.021856   2    0.89954799 -0.60315169 #> Comp_2 0.3090158 -0.0128337 1.004509   2   -0.71928615  0.01317786 #> Comp_3 0.3026876 -5.0170104 4.836239   2    0.01190528  0.75452662 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $summaries$u_original$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale      order ar_1       ar_2       #> Comp_1 0.05378105 0.1790953 0.10561787   2   0.02816997 0.01971022 #> Comp_2 0.04804369 0.1224686 0.09446427   2   0.01197268 0.03195056 #> Comp_3 0.02473113 0.5024960 0.30765087   2   0.03203031 0.04304680 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $summaries$messed #> $summaries$messed$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2       #> Comp_1 0.3633193  2.9602480 1.001859   2    0.24984373 -0.3671938 #> Comp_2 0.3166840 -0.8240818 2.561042   2   -0.09321343  0.1842776 #> Comp_3 0.3199967 -2.1631158 3.299703   2    0.03553682  0.3474690 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $summaries$messed$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift    scale     order ar_1      ar_2      #> Comp_1 0.07296112 2.775928 0.1202681   2   0.8864944 0.3244559 #> Comp_2 0.05363909 3.921431 2.0907273   2   0.6682833 0.5542340 #> Comp_3 0.04010385 4.723771 2.1139521   2   0.5808591 0.6288921 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $summaries$u_messed #> $summaries$u_messed$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3882967  5.0028946 1.021856   2    0.89954799 -0.60315169 #> Comp_2 0.3090158 -0.0128337 1.004509   2   -0.71928615  0.01317786 #> Comp_3 0.3026876 -5.0170104 4.836239   2    0.01190528  0.75452662 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $summaries$u_messed$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale      order ar_1       ar_2       #> Comp_1 0.05378105 0.1790953 0.10561787   2   0.02816997 0.01971022 #> Comp_2 0.04804369 0.1224686 0.09446427   2   0.01197268 0.03195056 #> Comp_3 0.02473113 0.5024960 0.30765087   2   0.03203031 0.04304680 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #>  #> $Raw #> $Raw$original #> $Raw$original[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2         #> Comp_1 0.3665446  4.85396931 0.9767540   2    0.89144569 -0.600549202 #> Comp_2 0.2942500  0.05641133 0.9378551   2   -0.73756372  0.008297454 #> Comp_3 0.3392054 -5.00465861 5.2267672   2    0.02201604  0.779793289 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$original[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift        scale     order ar_1        ar_2        #> Comp_1 0.4838707  4.994434593 0.9049234   2    0.88123929 -0.59333704 #> Comp_2 0.2362973 -0.004242097 0.9893591   2   -0.71844053  0.03999962 #> Comp_3 0.2798320 -5.324341677 4.4337937   2   -0.01675496  0.77532485 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$original[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2       #> Comp_1 0.3720827  5.2076908 0.9687927   2    0.91560067 -0.6048382 #> Comp_2 0.3194904 -0.2079841 0.9077054   2   -0.70391125 -0.0338954 #> Comp_3 0.3084269 -4.6891375 4.6672338   2    0.05210517  0.6796020 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$original[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3550308  4.8017282 1.090907   2    0.93981275 -0.58214983 #> Comp_2 0.3655736  0.1170995 1.147201   2   -0.71804244  0.04584891 #> Comp_3 0.2793957 -5.6688162 4.828737   2   -0.02470486  0.78142635 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$original[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale    order ar_1        ar_2         #> Comp_1 0.3639545  5.15665006 1.167902   2    0.86964157 -0.634884135 #> Comp_2 0.3294676 -0.02545309 1.040423   2   -0.71847281  0.005638708 #> Comp_3 0.3065779 -4.39809822 5.024661   2    0.02686497  0.756486635 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $Raw$u_original #> $Raw$u_original[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2         #> Comp_1 0.3665446  4.85396931 0.9767540   2    0.89144569 -0.600549202 #> Comp_2 0.2942500  0.05641133 0.9378551   2   -0.73756372  0.008297454 #> Comp_3 0.3392054 -5.00465861 5.2267672   2    0.02201604  0.779793289 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_original[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift        scale     order ar_1        ar_2        #> Comp_1 0.4838707  4.994434593 0.9049234   2    0.88123929 -0.59333704 #> Comp_2 0.2362973 -0.004242097 0.9893591   2   -0.71844053  0.03999962 #> Comp_3 0.2798320 -5.324341677 4.4337937   2   -0.01675496  0.77532485 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_original[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2       #> Comp_1 0.3720827  5.2076908 0.9687927   2    0.91560067 -0.6048382 #> Comp_2 0.3194904 -0.2079841 0.9077054   2   -0.70391125 -0.0338954 #> Comp_3 0.3084269 -4.6891375 4.6672338   2    0.05210517  0.6796020 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_original[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3550308  4.8017282 1.090907   2    0.93981275 -0.58214983 #> Comp_2 0.3655736  0.1170995 1.147201   2   -0.71804244  0.04584891 #> Comp_3 0.2793957 -5.6688162 4.828737   2   -0.02470486  0.78142635 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_original[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale    order ar_1        ar_2         #> Comp_1 0.3639545  5.15665006 1.167902   2    0.86964157 -0.634884135 #> Comp_2 0.3294676 -0.02545309 1.040423   2   -0.71847281  0.005638708 #> Comp_3 0.3065779 -4.39809822 5.024661   2    0.02686497  0.756486635 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $Raw$messed #> $Raw$messed[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2         #> Comp_1 0.2942500  0.05641133 0.9378551   2   -0.73756372  0.008297454 #> Comp_2 0.3665446  4.85396931 0.9767540   2    0.89144569 -0.600549202 #> Comp_3 0.3392054 -5.00465861 5.2267672   2    0.02201604  0.779793289 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$messed[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift        scale     order ar_1        ar_2        #> Comp_1 0.4838707  4.994434593 0.9049234   2    0.88123929 -0.59333704 #> Comp_2 0.2362973 -0.004242097 0.9893591   2   -0.71844053  0.03999962 #> Comp_3 0.2798320 -5.324341677 4.4337937   2   -0.01675496  0.77532485 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$messed[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2       #> Comp_1 0.3194904 -0.2079841 0.9077054   2   -0.70391125 -0.0338954 #> Comp_2 0.3084269 -4.6891375 4.6672338   2    0.05210517  0.6796020 #> Comp_3 0.3720827  5.2076908 0.9687927   2    0.91560067 -0.6048382 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$messed[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3550308  4.8017282 1.090907   2    0.93981275 -0.58214983 #> Comp_2 0.3655736  0.1170995 1.147201   2   -0.71804244  0.04584891 #> Comp_3 0.2793957 -5.6688162 4.828737   2   -0.02470486  0.78142635 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$messed[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale    order ar_1        ar_2         #> Comp_1 0.3639545  5.15665006 1.167902   2    0.86964157 -0.634884135 #> Comp_2 0.3065779 -4.39809822 5.024661   2    0.02686497  0.756486635 #> Comp_3 0.3294676 -0.02545309 1.040423   2   -0.71847281  0.005638708 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $Raw$u_messed #> $Raw$u_messed[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2         #> Comp_1 0.3665446  4.85396931 0.9767540   2    0.89144569 -0.600549202 #> Comp_2 0.2942500  0.05641133 0.9378551   2   -0.73756372  0.008297454 #> Comp_3 0.3392054 -5.00465861 5.2267672   2    0.02201604  0.779793289 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_messed[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift        scale     order ar_1        ar_2        #> Comp_1 0.4838707  4.994434593 0.9049234   2    0.88123929 -0.59333704 #> Comp_2 0.2362973 -0.004242097 0.9893591   2   -0.71844053  0.03999962 #> Comp_3 0.2798320 -5.324341677 4.4337937   2   -0.01675496  0.77532485 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_messed[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2       #> Comp_1 0.3720827  5.2076908 0.9687927   2    0.91560067 -0.6048382 #> Comp_2 0.3194904 -0.2079841 0.9077054   2   -0.70391125 -0.0338954 #> Comp_3 0.3084269 -4.6891375 4.6672338   2    0.05210517  0.6796020 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_messed[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale    order ar_1        ar_2        #> Comp_1 0.3550308  4.8017282 1.090907   2    0.93981275 -0.58214983 #> Comp_2 0.3655736  0.1170995 1.147201   2   -0.71804244  0.04584891 #> Comp_3 0.2793957 -5.6688162 4.828737   2   -0.02470486  0.78142635 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_messed[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale    order ar_1        ar_2         #> Comp_1 0.3639545  5.15665006 1.167902   2    0.86964157 -0.634884135 #> Comp_2 0.3294676 -0.02545309 1.040423   2   -0.71847281  0.005638708 #> Comp_3 0.3065779 -4.39809822 5.024661   2    0.02686497  0.756486635 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #>   aII10adata <- mixARExperiment(exampleModels$WL_II, N = 5, raw = TRUE,                   simargs = list(n = 100), estargs = list(crit = 1e-4)) aII10a <- test_unswitch(aII10adata$Raw, exampleModels$WL_II) aII10a #> $mean #>           original  u_original      messed    u_messed #> order1  2.00000000  2.00000000  2.00000000  2.00000000 #> order2  2.00000000  2.00000000  2.00000000  2.00000000 #> order3  2.00000000  2.00000000  2.00000000  2.00000000 #> prob1   0.39000243  0.39000243  0.32024244  0.39000243 #> prob2   0.28708074  0.28708074  0.33503454  0.28708074 #> prob3   0.32291682  0.32291682  0.34472301  0.32291682 #> shift1  5.06529341  5.06529341  0.59525658  5.06529341 #> shift2  0.09187578  0.09187578 -0.06471025  0.09187578 #> shift3 -5.44155059 -5.44155059 -0.81492773 -5.44155059 #> scale1  0.95696922  0.95696922  1.43560482  0.95696922 #> scale2  0.77942512  0.77942512  2.39384993  0.77942512 #> scale3  4.71168578  4.71168578  2.61862535  4.71168578 #> ar_11   0.89468687  0.89468687  0.06955169  0.89468687 #> ar_12  -0.60333356 -0.60333356 -0.09022949 -0.60333356 #> ar_21  -0.71752101 -0.71752101  0.14859335 -0.71752101 #> ar_22   0.01672051  0.01672051  0.05028241  0.01672051 #> ar_31  -0.05676030 -0.05676030 -0.09773947 -0.05676030 #> ar_32   0.76647278  0.76647278  0.21980681  0.76647278 #>  #> $sd #>          original u_original     messed   u_messed #> order1 2.00000000 2.00000000 2.00000000 2.00000000 #> order2 2.00000000 2.00000000 2.00000000 2.00000000 #> order3 2.00000000 2.00000000 2.00000000 2.00000000 #> prob1  0.05577215 0.05577215 0.06187516 0.05577215 #> prob2  0.03674940 0.03674940 0.03398549 0.03674940 #> prob3  0.03976739 0.03976739 0.08661957 0.03976739 #> shift1 0.18254361 0.18254361 4.73087227 0.18254361 #> shift2 0.22843254 0.22843254 5.47197555 0.22843254 #> shift3 1.41934674 1.41934674 4.19442938 1.41934674 #> scale1 0.11292854 0.11292854 1.23565245 0.11292854 #> scale2 0.15928874 0.15928874 2.15235042 0.15928874 #> scale3 0.82317699 0.82317699 2.42889801 0.82317699 #> ar_11  0.01172396 0.01172396 0.79702750 0.01172396 #> ar_12  0.01369262 0.01369262 0.55568922 0.01369262 #> ar_21  0.02605250 0.02605250 0.73105344 0.02605250 #> ar_22  0.01968793 0.01968793 0.66049080 0.01968793 #> ar_31  0.13594030 0.13594030 0.67243539 0.13594030 #> ar_32  0.06765766 0.06765766 0.61326789 0.06765766 #>  #> $summaries #> $summaries$original #> $summaries$original$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1       ar_2        #> Comp_1 0.3900024  5.06529341 0.9569692   2    0.8946869 -0.60333356 #> Comp_2 0.2870807  0.09187578 0.7794251   2   -0.7175210  0.01672051 #> Comp_3 0.3229168 -5.44155059 4.7116858   2   -0.0567603  0.76647278 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $summaries$original$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale     order ar_1       ar_2       #> Comp_1 0.05577215 0.1825436 0.1129285   2   0.01172396 0.01369262 #> Comp_2 0.03674940 0.2284325 0.1592887   2   0.02605250 0.01968793 #> Comp_3 0.03976739 1.4193467 0.8231770   2   0.13594030 0.06765766 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $summaries$u_original #> $summaries$u_original$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1       ar_2        #> Comp_1 0.3900024  5.06529341 0.9569692   2    0.8946869 -0.60333356 #> Comp_2 0.2870807  0.09187578 0.7794251   2   -0.7175210  0.01672051 #> Comp_3 0.3229168 -5.44155059 4.7116858   2   -0.0567603  0.76647278 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $summaries$u_original$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale     order ar_1       ar_2       #> Comp_1 0.05577215 0.1825436 0.1129285   2   0.01172396 0.01369262 #> Comp_2 0.03674940 0.2284325 0.1592887   2   0.02605250 0.01968793 #> Comp_3 0.03976739 1.4193467 0.8231770   2   0.13594030 0.06765766 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $summaries$messed #> $summaries$messed$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale    order ar_1        ar_2        #> Comp_1 0.3202424  0.59525658 1.435605   2    0.06955169 -0.09022949 #> Comp_2 0.3350345 -0.06471025 2.393850   2    0.14859335  0.05028241 #> Comp_3 0.3447230 -0.81492773 2.618625   2   -0.09773947  0.21980681 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $summaries$messed$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift    scale    order ar_1      ar_2      #> Comp_1 0.06187516 4.730872 1.235652   2   0.7970275 0.5556892 #> Comp_2 0.03398549 5.471976 2.152350   2   0.7310534 0.6604908 #> Comp_3 0.08661957 4.194429 2.428898   2   0.6724354 0.6132679 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $summaries$u_messed #> $summaries$u_messed$mean #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1       ar_2        #> Comp_1 0.3900024  5.06529341 0.9569692   2    0.8946869 -0.60333356 #> Comp_2 0.2870807  0.09187578 0.7794251   2   -0.7175210  0.01672051 #> Comp_3 0.3229168 -5.44155059 4.7116858   2   -0.0567603  0.76647278 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $summaries$u_messed$sd #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob       shift     scale     order ar_1       ar_2       #> Comp_1 0.05577215 0.1825436 0.1129285   2   0.01172396 0.01369262 #> Comp_2 0.03674940 0.2284325 0.1592887   2   0.02605250 0.01968793 #> Comp_3 0.03976739 1.4193467 0.8231770   2   0.13594030 0.06765766 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #>  #> $Raw #> $Raw$original #> $Raw$original[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2        #> Comp_1 0.3755441  4.9250821 0.9337884   2    0.88861157 -0.59840666 #> Comp_2 0.2747094  0.2482667 0.9039959   2   -0.71501178  0.01461083 #> Comp_3 0.3497465 -7.1592837 4.9309416   2   -0.01210352  0.74561766 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$original[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1       ar_2         #> Comp_1 0.4829257  5.25235146 1.0820603   2    0.9001051 -0.601072316 #> Comp_2 0.2326677 -0.03276334 0.6269954   2   -0.7244085  0.009926353 #> Comp_3 0.2844067 -3.89112250 4.5578013   2   -0.2950199  0.677241028 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$original[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2        #> Comp_1 0.3820311  4.8320621 0.9966950   2    0.89136117 -0.60037773 #> Comp_2 0.3315081  0.4098836 0.7082044   2   -0.74326638  0.04536445 #> Comp_3 0.2864608 -5.2500869 5.9093101   2    0.03696473  0.85438281 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$original[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2        #> Comp_1 0.3776702  5.09986693 0.9938957   2    0.88143774 -0.59023444 #> Comp_2 0.3039395 -0.02626864 0.6665486   2   -0.73024993  0.02241541 #> Comp_3 0.3183903 -6.60835858 3.6291641   2   -0.03313735  0.74642509 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$original[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2         #> Comp_1 0.3318412  5.2171044 0.7784067   2    0.91191878 -0.626576631 #> Comp_2 0.2925791 -0.1397394 0.9913812   2   -0.67466840 -0.008714492 #> Comp_3 0.3755798 -4.2989013 4.5312118   2    0.01949449  0.808697322 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $Raw$u_original #> $Raw$u_original[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2        #> Comp_1 0.3755441  4.9250821 0.9337884   2    0.88861157 -0.59840666 #> Comp_2 0.2747094  0.2482667 0.9039959   2   -0.71501178  0.01461083 #> Comp_3 0.3497465 -7.1592837 4.9309416   2   -0.01210352  0.74561766 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_original[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1       ar_2         #> Comp_1 0.4829257  5.25235146 1.0820603   2    0.9001051 -0.601072316 #> Comp_2 0.2326677 -0.03276334 0.6269954   2   -0.7244085  0.009926353 #> Comp_3 0.2844067 -3.89112250 4.5578013   2   -0.2950199  0.677241028 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_original[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2        #> Comp_1 0.3820311  4.8320621 0.9966950   2    0.89136117 -0.60037773 #> Comp_2 0.3315081  0.4098836 0.7082044   2   -0.74326638  0.04536445 #> Comp_3 0.2864608 -5.2500869 5.9093101   2    0.03696473  0.85438281 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_original[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2        #> Comp_1 0.3776702  5.09986693 0.9938957   2    0.88143774 -0.59023444 #> Comp_2 0.3039395 -0.02626864 0.6665486   2   -0.73024993  0.02241541 #> Comp_3 0.3183903 -6.60835858 3.6291641   2   -0.03313735  0.74642509 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_original[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2         #> Comp_1 0.3318412  5.2171044 0.7784067   2    0.91191878 -0.626576631 #> Comp_2 0.2925791 -0.1397394 0.9913812   2   -0.67466840 -0.008714492 #> Comp_3 0.3755798 -4.2989013 4.5312118   2    0.01949449  0.808697322 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $Raw$messed #> $Raw$messed[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2        #> Comp_1 0.3755441  4.9250821 0.9337884   2    0.88861157 -0.59840666 #> Comp_2 0.3497465 -7.1592837 4.9309416   2   -0.01210352  0.74561766 #> Comp_3 0.2747094  0.2482667 0.9039959   2   -0.71501178  0.01461083 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$messed[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1       ar_2         #> Comp_1 0.2326677 -0.03276334 0.6269954   2   -0.7244085  0.009926353 #> Comp_2 0.2844067 -3.89112250 4.5578013   2   -0.2950199  0.677241028 #> Comp_3 0.4829257  5.25235146 1.0820603   2    0.9001051 -0.601072316 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$messed[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2        #> Comp_1 0.3820311  4.8320621 0.9966950   2    0.89136117 -0.60037773 #> Comp_2 0.3315081  0.4098836 0.7082044   2   -0.74326638  0.04536445 #> Comp_3 0.2864608 -5.2500869 5.9093101   2    0.03696473  0.85438281 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$messed[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2        #> Comp_1 0.3183903 -6.60835858 3.6291641   2   -0.03313735  0.74642509 #> Comp_2 0.3776702  5.09986693 0.9938957   2    0.88143774 -0.59023444 #> Comp_3 0.3039395 -0.02626864 0.6665486   2   -0.73024993  0.02241541 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$messed[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2         #> Comp_1 0.2925791 -0.1397394 0.9913812   2   -0.67466840 -0.008714492 #> Comp_2 0.3318412  5.2171044 0.7784067   2    0.91191878 -0.626576631 #> Comp_3 0.3755798 -4.2989013 4.5312118   2    0.01949449  0.808697322 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #> $Raw$u_messed #> $Raw$u_messed[[1]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2        #> Comp_1 0.3755441  4.9250821 0.9337884   2    0.88861157 -0.59840666 #> Comp_2 0.2747094  0.2482667 0.9039959   2   -0.71501178  0.01461083 #> Comp_3 0.3497465 -7.1592837 4.9309416   2   -0.01210352  0.74561766 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_messed[[2]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1       ar_2         #> Comp_1 0.4829257  5.25235146 1.0820603   2    0.9001051 -0.601072316 #> Comp_2 0.2326677 -0.03276334 0.6269954   2   -0.7244085  0.009926353 #> Comp_3 0.2844067 -3.89112250 4.5578013   2   -0.2950199  0.677241028 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_messed[[3]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2        #> Comp_1 0.3820311  4.8320621 0.9966950   2    0.89136117 -0.60037773 #> Comp_2 0.3315081  0.4098836 0.7082044   2   -0.74326638  0.04536445 #> Comp_3 0.2864608 -5.2500869 5.9093101   2    0.03696473  0.85438281 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_messed[[4]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift       scale     order ar_1        ar_2        #> Comp_1 0.3776702  5.09986693 0.9938957   2    0.88143774 -0.59023444 #> Comp_2 0.3039395 -0.02626864 0.6665486   2   -0.73024993  0.02241541 #> Comp_3 0.3183903 -6.60835858 3.6291641   2   -0.03313735  0.74642509 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #> $Raw$u_messed[[5]] #> An object of class \"MixARGaussian\" #> Number of components: 3  #>        prob      shift      scale     order ar_1        ar_2         #> Comp_1 0.3318412  5.2171044 0.7784067   2    0.91191878 -0.626576631 #> Comp_2 0.2925791 -0.1397394 0.9913812   2   -0.67466840 -0.008714492 #> Comp_3 0.3755798 -4.2989013 4.5312118   2    0.01949449  0.808697322 #>  #> Distributions of the error components: #> \tstandard Gaussian #>  #>  #>  #>"},{"path":"https://geobosh.github.io/mixAR/reference/tomarparambyComp.html","id":null,"dir":"Reference","previous_headings":"","what":"Translations of my old MixAR Mathematica functions — tomarparambyComp","title":"Translations of my old MixAR Mathematica functions — tomarparambyComp","text":"Translations MixAR Mathematica functions.   sure still used.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/tomarparambyComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translations of my old MixAR Mathematica functions — tomarparambyComp","text":"","code":"tomarparambyComp(params) tomarparambyType(params) permuteArpar(params)"},{"path":"https://geobosh.github.io/mixAR/reference/tomarparambyComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translations of my old MixAR Mathematica functions — tomarparambyComp","text":"params parameters MixAR model, list, see Details.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/tomarparambyComp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translations of my old MixAR Mathematica functions — tomarparambyComp","text":"tomarparambyComp completeness, Mathematica programs   currently. arrangement parameters MixAR models package   \"MixAR\" ``type'': slot prob contains mixture   probabilities (weights), shift contains intercepts, . alternative representation ``component'': list whose k-th   elements contains parameters associated k-th mixture   component. functions described use following order   parameter k-th component: prob_k, shift_k, arcoeff_k,   sigma2_k. tomarparambyType takes argument, params, arranged   ``component'' converts ``type''.   tomarparambyComp inverse operation, ``type''   ``component''. permuteArpar creates permutaions components   MixAR model. takes ``component'' argument. autoregressive   orders permuted, input model AR orders   c(2, 1, 3), permuted models also c(2, 1, 3).   AR coefficients shorter longer components padded   zeroes truncated, respectively, see unexported   adjustLengths().","code":""},{"path":"https://geobosh.github.io/mixAR/reference/tomarparambyComp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translations of my old MixAR Mathematica functions — tomarparambyComp","text":"tomarparambyComp, list containing parameters   model arranged ``component'', see Details.   tomarparambyType, list containing parameters   model arranged ``type''. contains following elements. prob mixture probabilities, numeric vector, shift shifts, numeric vector, arcoef autoregressive coefficients, s2 noise variances, numeric vector. permuteArpar, list one element (arranged ``  type'') possible permutation AR parameters.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/tomarparambyComp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Translations of my old MixAR Mathematica functions — tomarparambyComp","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/tomarparambyComp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translations of my old MixAR Mathematica functions — tomarparambyComp","text":"","code":"bycomp <- list(list(0.1, 10,  0.11,                1),                list(0.2,  20, c(0.11, 0.22),       2),                list(0.3,  30, c(0.11, 0.22, 0.33), 3) ) bytype <- tomarparambyType(bycomp) identical(bycomp, tomarparambyComp(bytype)) # TRUE #> [1] TRUE                 permuteArpar(bycomp) #> [[1]] #> [[1]][[1]] #> [[1]][[1]][[1]] #> [1] 0.1 #>  #> [[1]][[1]][[2]] #> [1] 10 #>  #> [[1]][[1]][[3]] #> [1] 0.11 #>  #> [[1]][[1]][[4]] #> [1] 1 #>  #>  #> [[1]][[2]] #> [[1]][[2]][[1]] #> [1] 0.2 #>  #> [[1]][[2]][[2]] #> [1] 20 #>  #> [[1]][[2]][[3]] #> [1] 0.11 0.22 #>  #> [[1]][[2]][[4]] #> [1] 2 #>  #>  #> [[1]][[3]] #> [[1]][[3]][[1]] #> [1] 0.3 #>  #> [[1]][[3]][[2]] #> [1] 30 #>  #> [[1]][[3]][[3]] #> [1] 0.11 0.22 0.33 #>  #> [[1]][[3]][[4]] #> [1] 3 #>  #>  #>  #> [[2]] #> [[2]][[1]] #> [[2]][[1]][[1]] #> [1] 0.1 #>  #> [[2]][[1]][[2]] #> [1] 10 #>  #> [[2]][[1]][[3]] #> [1] 0.11 #>  #> [[2]][[1]][[4]] #> [1] 1 #>  #>  #> [[2]][[2]] #> [[2]][[2]][[1]] #> [1] 0.3 #>  #> [[2]][[2]][[2]] #> [1] 30 #>  #> [[2]][[2]][[3]] #> [1] 0.11 0.22 #>  #> [[2]][[2]][[4]] #> [1] 3 #>  #>  #> [[2]][[3]] #> [[2]][[3]][[1]] #> [1] 0.2 #>  #> [[2]][[3]][[2]] #> [1] 20 #>  #> [[2]][[3]][[3]] #> [1] 0.11 0.22 0.00 #>  #> [[2]][[3]][[4]] #> [1] 2 #>  #>  #>  #> [[3]] #> [[3]][[1]] #> [[3]][[1]][[1]] #> [1] 0.3 #>  #> [[3]][[1]][[2]] #> [1] 30 #>  #> [[3]][[1]][[3]] #> [1] 0.11 #>  #> [[3]][[1]][[4]] #> [1] 3 #>  #>  #> [[3]][[2]] #> [[3]][[2]][[1]] #> [1] 0.1 #>  #> [[3]][[2]][[2]] #> [1] 10 #>  #> [[3]][[2]][[3]] #> [1] 0.11 0.00 #>  #> [[3]][[2]][[4]] #> [1] 1 #>  #>  #> [[3]][[3]] #> [[3]][[3]][[1]] #> [1] 0.2 #>  #> [[3]][[3]][[2]] #> [1] 20 #>  #> [[3]][[3]][[3]] #> [1] 0.11 0.22 0.00 #>  #> [[3]][[3]][[4]] #> [1] 2 #>  #>  #>  #> [[4]] #> [[4]][[1]] #> [[4]][[1]][[1]] #> [1] 0.3 #>  #> [[4]][[1]][[2]] #> [1] 30 #>  #> [[4]][[1]][[3]] #> [1] 0.11 #>  #> [[4]][[1]][[4]] #> [1] 3 #>  #>  #> [[4]][[2]] #> [[4]][[2]][[1]] #> [1] 0.2 #>  #> [[4]][[2]][[2]] #> [1] 20 #>  #> [[4]][[2]][[3]] #> [1] 0.11 0.22 #>  #> [[4]][[2]][[4]] #> [1] 2 #>  #>  #> [[4]][[3]] #> [[4]][[3]][[1]] #> [1] 0.1 #>  #> [[4]][[3]][[2]] #> [1] 10 #>  #> [[4]][[3]][[3]] #> [1] 0.11 0.00 0.00 #>  #> [[4]][[3]][[4]] #> [1] 1 #>  #>  #>  #> [[5]] #> [[5]][[1]] #> [[5]][[1]][[1]] #> [1] 0.2 #>  #> [[5]][[1]][[2]] #> [1] 20 #>  #> [[5]][[1]][[3]] #> [1] 0.11 #>  #> [[5]][[1]][[4]] #> [1] 2 #>  #>  #> [[5]][[2]] #> [[5]][[2]][[1]] #> [1] 0.3 #>  #> [[5]][[2]][[2]] #> [1] 30 #>  #> [[5]][[2]][[3]] #> [1] 0.11 0.22 #>  #> [[5]][[2]][[4]] #> [1] 3 #>  #>  #> [[5]][[3]] #> [[5]][[3]][[1]] #> [1] 0.1 #>  #> [[5]][[3]][[2]] #> [1] 10 #>  #> [[5]][[3]][[3]] #> [1] 0.11 0.00 0.00 #>  #> [[5]][[3]][[4]] #> [1] 1 #>  #>  #>  #> [[6]] #> [[6]][[1]] #> [[6]][[1]][[1]] #> [1] 0.2 #>  #> [[6]][[1]][[2]] #> [1] 20 #>  #> [[6]][[1]][[3]] #> [1] 0.11 #>  #> [[6]][[1]][[4]] #> [1] 2 #>  #>  #> [[6]][[2]] #> [[6]][[2]][[1]] #> [1] 0.1 #>  #> [[6]][[2]][[2]] #> [1] 10 #>  #> [[6]][[2]][[3]] #> [1] 0.11 0.00 #>  #> [[6]][[2]][[4]] #> [1] 1 #>  #>  #> [[6]][[3]] #> [[6]][[3]][[1]] #> [1] 0.3 #>  #> [[6]][[3]][[2]] #> [1] 30 #>  #> [[6]][[3]][[3]] #> [1] 0.11 0.22 0.33 #>  #> [[6]][[3]][[4]] #> [1] 3 #>  #>  #>"},{"path":"https://geobosh.github.io/mixAR/reference/ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for mixAR\n — ui","title":"Utility function for mixAR\n — ui","text":"Extracts (t-)th component vector.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for mixAR\n — ui","text":"","code":"ui(x, t, i)"},{"path":"https://geobosh.github.io/mixAR/reference/ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for mixAR\n — ui","text":"x vector. t present \"time\". lag. Can vector.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for mixAR\n — ui","text":"Returns (t-)th element vector. =0, returns 1.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ui.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility function for mixAR\n — ui","text":"Davide Ravagli","code":""},{"path":"https://geobosh.github.io/mixAR/reference/ui.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Utility function for mixAR\n — ui","text":"utility function mixAR.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/unswitch.html","id":null,"dir":"Reference","previous_headings":"","what":"Dealing with label switching in MixAR experiments — unswitch","title":"Dealing with label switching in MixAR experiments — unswitch","text":"Deal label switching MixAR experiments.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/unswitch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dealing with label switching in MixAR experiments — unswitch","text":"","code":"unswitch(models, true_model, Nref = 100, simargs = NULL)"},{"path":"https://geobosh.github.io/mixAR/reference/unswitch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dealing with label switching in MixAR experiments — unswitch","text":"models list MixAR models process. true_model MixAR model used experiment. Nref length reference series simargs arguments simulation reference series, see 'Details'.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/unswitch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dealing with label switching in MixAR experiments — unswitch","text":"list unswitched models.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/unswitch.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dealing with label switching in MixAR experiments — unswitch","text":"Boshnakov, Georgi N., (2012) Label switching MixAR models (preparation).","code":""},{"path":"https://geobosh.github.io/mixAR/reference/unswitch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dealing with label switching in MixAR experiments — unswitch","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/mixAR/reference/xxcanonic_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Put core MixAR coefficients into a canonical form, internal function — .canonic_coef","title":"Put core MixAR coefficients into a canonical form, internal function — .canonic_coef","text":"Put core MixAR coefficients canonical form, internal   function.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/xxcanonic_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put core MixAR coefficients into a canonical form, internal function — .canonic_coef","text":"","code":".canonic_coef(coef, filler)"},{"path":"https://geobosh.github.io/mixAR/reference/xxcanonic_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put core MixAR coefficients into a canonical form, internal function — .canonic_coef","text":"coef core coefficients MixAR model, list. filler value filling unspecified entries,     NA_real_.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/xxcanonic_coef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Put core MixAR coefficients into a canonical form, internal function — .canonic_coef","text":"internal function called mixAR put MixAR   parameters canonical form. \"shift\", \"scale\"   \"prob\" normally vectors one element   component may also given single number, case   taken common value parameters   .canonic_coef extends correspondingly. Also, AR   coefficients may specified number ways function   converts format used MixAR classes.","code":""},{"path":"https://geobosh.github.io/mixAR/reference/xxcanonic_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put core MixAR coefficients into a canonical form, internal function — .canonic_coef","text":"list folowing components: order MixAR order, vector integers prob MixAR probabilities, vector lengthlength(order) shift MixAR shift parameters, vector lengthlength(order) scale MixAR scle parameters, vector lengthlength(order) arcoef AR coefficients \"raggedCoef\" object","code":""},{"path":"https://geobosh.github.io/mixAR/reference/xxcanonic_coef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Put core MixAR coefficients into a canonical form, internal function — .canonic_coef","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/mixAR/reference/xxcanonic_coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put core MixAR coefficients into a canonical form, internal function — .canonic_coef","text":"","code":"## missing components are filled with 'filler', extended accordingly mixAR:::.canonic_coef(list(order = c(2,3)), filler = NA) #> $order #> [1] 2 3 #>  #> $prob #> [1] NA NA #>  #> $shift #> [1] NA NA #>  #> $scale #> [1] NA NA #>  #> $arcoef #> An object of class \"raggedCoef\" #> Number of rows: 2  #> Components' lengths: 2 3  #>  #>             co_1 co_2 co_3 #> Component_1  NA   NA       #> Component_2  NA   NA   NA  #>  #>   # here 'scale' is replicated, the missing 'shift' is inserted mo <- list(order = c(2,3), prob = c(0.4, 0.6), scale = 1,            arcoef = list(c(0.5, -0.5), c(1.1,  0.0, -0.5)) ) mixAR:::.canonic_coef(mo, filler = NA) #> $order #> [1] 2 3 #>  #> $prob #> [1] 0.4 0.6 #>  #> $scale #> [1] 1 1 #>  #> $arcoef #> An object of class \"raggedCoef\" #> Number of rows: 2  #> Components' lengths: 2 3  #>  #>             co_1 co_2 co_3 #> Component_1 0.5  -0.5      #> Component_2 1.1   0.0 -0.5 #>  #>  #> $shift #> [1] NA NA #>"},{"path":"https://geobosh.github.io/mixAR/news/index.html","id":"mixar-0226","dir":"Changelog","previous_headings":"","what":"mixAR 0.22.6","title":"mixAR 0.22.6","text":"fit_mixAR failing mixAR models Gaussian components AR order component zero. (reported Lu Cao) improved printing mixARgen objects. function returned methods multiStep_dist N = \"missing\" now checks length supplied xcond argument throws error shorter maximal AR order p. longer, last p values used. always case N missing. new function mix_qf computes conditional quantiles, analogous mix_pdf mix_cdf. numerous fixes improvements.","code":""},{"path":"https://geobosh.github.io/mixAR/news/index.html","id":"mixar-0225-cran","dir":"Changelog","previous_headings":"","what":"mixAR 0.22.5 (CRAN)","title":"mixAR 0.22.5 (CRAN)","text":"CRAN release: 2021-01-04 tests, include check.environment = FALSE calls expect_equal() accommodate change .equal() R-devel.","code":""},{"path":"https://geobosh.github.io/mixAR/news/index.html","id":"mixar-0224-cran","dir":"Changelog","previous_headings":"","what":"mixAR 0.22.4 (CRAN)","title":"mixAR 0.22.4 (CRAN)","text":"CRAN release: 2020-06-29 tsdiag extensively revamped. now user friendly offers diagnostics. object returned class print method. tsdiag now works also models non-Gaussian components. mixAR_BIC now takes account estimated noise parameters, useful non-Gaussian noise components. updated README.md. relaxed comparison tests raising “Additional issues” CRAN.","code":""},{"path":"https://geobosh.github.io/mixAR/news/index.html","id":"mixar-0223-cran","dir":"Changelog","previous_headings":"","what":"mixAR 0.22.3 (CRAN)","title":"mixAR 0.22.3 (CRAN)","text":"CRAN release: 2020-06-22 now commented examples now optimisation functions write console asked. reduced time taken R CMD check, mainly slashing time examples.","code":""},{"path":"https://geobosh.github.io/mixAR/news/index.html","id":"mixar-0222","dir":"Changelog","previous_headings":"","what":"mixAR 0.22.2","title":"mixAR 0.22.2","text":"reduced time taken R CMD check.","code":""},{"path":"https://geobosh.github.io/mixAR/news/index.html","id":"mixar-0221","dir":"Changelog","previous_headings":"","what":"mixAR 0.22.1","title":"mixAR 0.22.1","text":"added missing import stats4. README.md, now using absolute paths linked pages package website.","code":""},{"path":"https://geobosh.github.io/mixAR/news/index.html","id":"mixar-0220","dir":"Changelog","previous_headings":"","what":"mixAR 0.22.0","title":"mixAR 0.22.0","text":"first public version","code":""}]
